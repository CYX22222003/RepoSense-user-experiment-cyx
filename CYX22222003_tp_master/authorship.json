[{"path":".github/workflows/docs.yml","fileType":"yml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"name: MarkBind Action","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"on:","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  push:","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    branches:","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"      - master","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"jobs:","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"  build_and_deploy:","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    runs-on: ubuntu-latest","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    steps:","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"      - name: Install Graphviz","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"        run: sudo apt-get install graphviz","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"      - name: Install Java","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"        uses: actions/setup-java@v3","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        with:","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"damithc"},"content":"          java-version: \u002717\u0027","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"damithc"},"content":"          distribution: \u0027zulu\u0027","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"      - name: Build \u0026 Deploy MarkBind site","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        uses: MarkBind/markbind-action@v2","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        with:","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"          token: ${{ secrets.GITHUB_TOKEN }}","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"          rootDirectory: \u0027./docs\u0027","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"damithc"},"content":"          baseUrl: \u0027/tp\u0027 # assuming your repo name is tp","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"damithc"},"content":"          version: \u0027^5.5.2\u0027","isFullCredit":false}],"authorContributionMap":{"damithc":4,"-":21}},{"path":".github/workflows/gradle.yml","fileType":"yml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"name: Java CI","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"on: [push, pull_request]","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"jobs:","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"  build:","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    strategy:","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"      matrix:","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"        platform: [ubuntu-latest, macos-latest, windows-latest]","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    runs-on: ${{ matrix.platform }}","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    steps:","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"      - name: Set up repository","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"        uses: actions/checkout@main","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"      - name: Set up repository","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        uses: actions/checkout@main","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        with:","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"          ref: master","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"      - name: Merge to master","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        run: git checkout --progress --force ${{ github.sha }}","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"      - name: Run repository-wide tests","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if: runner.os \u003d\u003d \u0027Linux\u0027","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        working-directory:  ${{ github.workspace }}/.github","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        run: ./run-checks.sh","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"      - name: Validate Gradle Wrapper","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"aureliony"},"content":"        uses: gradle/actions/wrapper-validation@v3","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"damithc"},"content":"      - name: Setup JDK 17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"aureliony"},"content":"        uses: actions/setup-java@v4","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        with:","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"aureliony"},"content":"          distribution: \u0027zulu\u0027","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"damithc"},"content":"          java-version: \u002717\u0027","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"          java-package: jdk+fx","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"      - name: Build and check with Gradle","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        run: ./gradlew check coverage","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"      - name: Upload coverage reports to Codecov","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if: runner.os \u003d\u003d \u0027Linux\u0027","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"aureliony"},"content":"        uses: codecov/codecov-action@v4","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"aureliony"},"content":"        with:","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"aureliony"},"content":"          token: ${{ secrets.CODECOV_TOKEN }}","isFullCredit":false}],"authorContributionMap":{"damithc":2,"aureliony":6,"-":38}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Christopher Tan"},"content":"[![Java CI](https://github.com/AY2425S1-CS2103T-F14a-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2425S1-CS2103T-F14a-4/tp/actions)    [![codecov](https://codecov.io/gh/AY2425S1-CS2103T-F14a-4/tp/graph/badge.svg?token\u003dWJ26AR9Y26)](https://codecov.io/gh/AY2425S1-CS2103T-F14a-4/tp)","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"# CampusConnect","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"\u003e Made by NUS students, for NUS students","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":"Sporting the iconic colours of NUS, CampusConnect is a seamless platform for undergraduate students to exchange contact ","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":"information to socialise and mingle.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"# Features","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KrashKart"},"content":"CampusConnect not only provides basic contact information storage solutions, but also custom tagging, searching, and","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KrashKart"},"content":"sorting features for quicker and easier organisation and contact retrieval.","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KrashKart"},"content":"# Acknowledgements","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KrashKart"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","isFullCredit":false}],"authorContributionMap":{"KrashKart":12,"Christopher Tan":1,"-":3}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"damithc"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"damithc"},"content":"targetCompatibility \u003d JavaVersion.VERSION_17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yooplo"},"content":"    archiveFileName \u003d \u0027CampusConnect.jar\u0027","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KrashKart"},"content":"run {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KrashKart"},"content":"    enableAssertions \u003d true","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","isFullCredit":false}],"authorContributionMap":{"damithc":2,"yooplo":1,"KrashKart":2,"-":71}},{"path":"docs/AboutUs.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"AY2425S1-CS2103T-F14a-4","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KrashKart"},"content":"### Nguyen Tien Hoang","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KrashKart"},"content":"\u003cimg src\u003d\"images/blackpanther9229.png\" width\u003d\"200px\"\u003e","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KrashKart"},"content":"[[github](https://github.com/blackpanther9229)]","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Nguyen Tien Hoang"},"content":"[[portfolio](team/blackpanther9229.md)]","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KrashKart"},"content":"* Role: Team Lead","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KrashKart"},"content":"* Responsibilities: UI","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"### Justin Jiang","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"\u003cimg src\u003d\"images/yooplo.png\" width\u003d\"200px\"\u003e","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"[[github](http://github.com/yooplo)]","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"[[portfolio](team/justin.md)]","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"* Role: Developer","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"* Responsibilities: UI","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KrashKart"},"content":"### Zheng Jie","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KrashKart"},"content":"\u003cimg src\u003d\"images/krashkart.png\" width\u003d\"200px\"\u003e","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KrashKart"},"content":"[[github](https://github.com/KrashKart)] [[portfolio](team/krashkart.md)]","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Responsibilities: Data","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"### Chen Yixun","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CYX22222003"},"content":"\u003cimg src\u003d\"images/cyx22222003.png\" width\u003d\"200px\"\u003e","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CYX22222003"},"content":"[[github](http://github.com/cyx22222003)]","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CYX22222003"},"content":"[[portfolio](team/cyx22222003.md)]","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Christopher Tan"},"content":"### Christopher Tan","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Christopher Tan"},"content":"\u003cimg src\u003d\"images/chrisjohntan.png\" width\u003d\"200px\"\u003e","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Christopher Tan"},"content":"[[github](http://github.com/chrisjohntan)]","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Christopher Tan"},"content":"[[portfolio](team/chrisjohntan.md)]","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Role: Developer","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Christopher Tan"},"content":"* Responsibilities: Integration","isFullCredit":false}],"authorContributionMap":{"yooplo":6,"Nguyen Tien Hoang":1,"KrashKart":8,"CYX22222003":4,"-":38,"Christopher Tan":5}},{"path":"docs/DevOps.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"DevOps guide\"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# DevOps guide","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Build automation","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Code coverage","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"### Repository-wide checks","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"**If adding new checks:**","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"## Making a release","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Christopher Tan"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2425S1-CS2103T-F14a-4/tp/tree/master/src/main/java/seedu/address/MainApp.java).","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","isFullCredit":false}],"authorContributionMap":{"-":81,"Christopher Tan":1}},{"path":"docs/DeveloperGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":"# CampusConnect Developer Guide","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KrashKart"},"content":"* Our name, **CampusConnect**, was inspired by the NUS internship portal [**TalentConnect**](https://nus-csm.symplicity.com/).","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KrashKart"},"content":"* Our **CampusConnect** logo reuses the [**NUS logo**](https://nus.edu.sg/identity/guidelines/logo-colour-and-background)","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KrashKart"},"content":"* Our help window icon uses a cartoon representation of the [**NUS mascot on the NUS main reddit page**](https://www.reddit.com/r/nus/)","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## **Design**","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\"/\u003e","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Christopher Tan"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2425S1-CS2103T-F14a-4/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2425S1-CS2103T-F14a-4/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\"/\u003e","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yooplo"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\"/\u003e","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yooplo"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"### UI component","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Christopher Tan"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2425S1-CS2103T-F14a-4/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yooplo"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Christopher Tan"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2425S1-CS2103T-F14a-4/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2425S1-CS2103T-F14a-4/tp/tree/master/src/main/resources/view/MainWindow.fxml)","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"The `UI` component,","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Logic component","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Christopher Tan"},"content":"**API** : [`Logic.java`](https://github.com/AY2425S1-CS2103T-F14a-4/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yooplo"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the `Logic` component works:","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yooplo"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `CampusConnectParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"damithc"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"damithc"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yooplo"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"How the parsing works:","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yooplo"},"content":"* When called upon to parse a user command, the `CampusConnectParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `CampusConnectParser` returns back as a `Command` object.","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"KrashKart"},"content":"Finally, the `Logic` contains the important `Command` classes. Some command classes from AB3 have been retained:","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"KrashKart"},"content":"    \u003cpuml src\u003d\"diagrams/CommandClassesOriginal.puml\" width\u003d\"600\"/\u003e","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yooplo"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"KrashKart"},"content":"However, there are new classes implemented for CampusConnect as well:","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"KrashKart"},"content":"    \u003cpuml src\u003d\"diagrams/CommandClasses.puml\" width\u003d\"600\"/\u003e","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yooplo"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"KrashKart"},"content":"The structure is simple:","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"KrashKart"},"content":"* Each `Command` class (old and new) extends from the abstract `Command` class, which enforces the implementation of the `execute()` method.","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"KrashKart"},"content":"* Each `Command` class contains the respective `COMMAND_WORD` representing the name of the command and a `MESSAGE_USAGE` string to demonstrate how to use the respective command.","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"KrashKart"},"content":"* They also contain their own respective error messages.","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Model component","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Christopher Tan"},"content":"**API** : [`Model.java`](https://github.com/AY2425S1-CS2103T-F14a-4/tp/tree/master/src/main/java/seedu/address/model/Model.java)","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yooplo"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"The `Model` component,","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"CYX22222003"},"content":"* stores the CampusConnect data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yooplo"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `CampusConnect`, which `Person` references. This allows `CampusConnect` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Storage component","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Christopher Tan"},"content":"**API** : [`Storage.java`](https://github.com/AY2425S1-CS2103T-F14a-4/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yooplo"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"The `Storage` component,","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"CYX22222003"},"content":"* can save both CampusConnect data and user preference data in JSON format, and read them back into corresponding objects.","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"yooplo"},"content":"* inherits from both `CampusConnectStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Common classes","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Carlin Tan"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"## **Implementation**","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"CYX22222003"},"content":"### Undo/redo feature","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"#### Proposed Implementation","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"CYX22222003"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedCampusConnect`. It extends `CampusConnect` with an undo/redo history, stored internally as an `history` and `future`. Additionally, it implements the following operations:","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"CYX22222003"},"content":"* `VersionedCampusConnect#saveCurrentData()` — Saves the current CampusConnect state in its future.","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"CYX22222003"},"content":"*  `VersionedCampusConnect#saveOldData()` — Saves the current CampusConnect state in its history.","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"CYX22222003"},"content":"* `VersionedCampusConnect#extractOldData()` — Restores the previous CampusConnect state from its history.","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"CYX22222003"},"content":"* `VersionedCampusConnect#extractUndoneData()` — Restores a previously undone CampusConnect state from its history.","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"CYX22222003"},"content":"These operations are exposed in the `Model` interface as `Model#saveCurrentCampusConnect()`, `Model#undoCampusConnect()` and `Model#redoCampusConnect()` respectively.","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"CYX22222003"},"content":"Step 1. The user launches the application for the first time. The `VersionedCampusConnect` will be initialized with two stacks.","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"yooplo"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"CYX22222003"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the CampusConnect. The `delete` command calls `Model#saveCurrentCampusConnect()`, causing the modified state of the CampusConnect after the `delete 5` command executes to be displayed and the old state of CampusConnect to be saved to the history.","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"yooplo"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"CYX22222003"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#saveCurrentCampusConnect()`, causing the modified state of the CampusConnect after the `delete 5` command executes to be displayed and the old state of CampusConnect to be saved to the history.","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"yooplo"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"CYX22222003"},"content":"**Note:** If a command fails its execution, it will call `Model#undoCampusConnect()`, so the CampusConnect state will not be saved into the `history`.","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"CYX22222003"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoCampusConnect()`, which will save the current CampusConnect state into `future` and pop the latest saved CampusConnect state from the `history`.","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"CYX22222003"},"content":"**Note:** If the `history` is empty, then there are no previous CampusConnect states to restore. If so, it will return an error to the user rather","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"damithc"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"damithc"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"CYX22222003"},"content":"The `redo` command does the opposite — it calls `Model#redoCampusConnect()`, which save current state into `history` and restores the CampusConnect to that state popped from the top of `future`.","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"CYX22222003"},"content":"**Note:** If the `future` stack is empty, then there are no undone CampusConnect states to restore. The `redo` command uses `Model#canRedoCampusConnect()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"CYX22222003"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the CampusConnect, such as `list`, will usually not call `Model#saveCurrentCampusConnect()`, `Model#undoCampusConnect()` or `Model#redoCampusConnect()`. Thus, the `history` and `future` remain unchanged.","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"yooplo"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"CYX22222003"},"content":"Step 6. The user executes `clear`, which calls `Model#commitCampusConnect()`. All CampusConnectState in the future will be removed. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"yooplo"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"yooplo"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"yooplo"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"#### Design considerations:","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"KrashKart"},"content":"**Aspect: How undo \u0026 redo executes**","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"CYX22222003"},"content":"* **Alternative 1 (current choice):** Saves the entire CampusConnect.","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"KrashKart"},"content":"* **Alternative 2:** Each command that changes the state stores the change that it has made.","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"KrashKart"},"content":"  * Cons: Difficult and tedious to implement.","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"### Product scope","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"KrashKart"},"content":"**Target user profile**:  NUS undergraduate students","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"   ","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts  ","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types   ","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"* can type fast  ","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions  ","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps  ","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"CYX22222003"},"content":"**Value proposition**: ","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"CYX22222003"},"content":"* manage contacts faster than a typical mouse/GUI driven app  ","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"CYX22222003"},"content":"* can connect people in the same modules/class/clubs/hobby, creating an active environment.  ","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"CYX22222003"},"content":"* make it easier for users to look for contacts of profs and teaching staff.  ","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"### User stories","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"| Priority | As a …​                 | I want to …​                                                    | So that I can…​                                                                    |","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"CYX22222003"},"content":"|----------|-------------------------|-----------------------------------------------------------------|------------------------------------------------------------------------------------|","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"| `* * *`  | new user                | see usage instructions                                          | refer to instructions when I forget how to use the App                             |","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"yooplo"},"content":"| `* * *`  | user                    | add a new contact                                               | easily connect with them                                                           |","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"yooplo"},"content":"| `* * *`  | user                    | delete a contact                                                | remove entries that I no longer need                                               |","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"| `* * *`  | user                    | find a person by name                                           | locate details of persons without having to go through the entire list             |","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"yooplo"},"content":"| `* *`    | user                    | update my contacts information                                  | always keep an updated version of contact information                              |","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"CYX22222003"},"content":"| `* *`    | user                    | undo my last action                                             | prevent the accidental deletion of all my contacts                                 |","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"CYX22222003"},"content":"| `* *`    | user                    | redo my latest undone action                                    | prevent the accidental undoing of certain actions                                  |    ","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"yooplo"},"content":"| `*`      | user with many contacts | search contacts by name                                         | locate a contact easily                                                            |","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"yooplo"},"content":"| `*`      | user                    | add a tag information to contacts                               | easily locate and connect with individuals such as classmates or club members      |","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"yooplo"},"content":"| `*`      | student                 | filter contacts by tags such as \"group project\" or \"internship\" | easily access related contacts                                                     |","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"CYX22222003"},"content":"| `*`      | user with many tags     | categorize tags into different groups                           | easily organize contacts and locate individuals such as classmates or club members |","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"### Use cases","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"KrashKart"},"content":"(For all use cases below, the **System** is `CampusConnect` and the **Actor** is the `user`, unless specified otherwise)","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"KrashKart"},"content":"**Use case: UC01 - Add a person\u0027s contact**","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"**MSS**","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"KrashKart"},"content":"1. User requests to add contact.","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"KrashKart"},"content":"2. CampusConnect adds new contact to contact list.","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"KrashKart"},"content":"3. CampusConnect displays success message.","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"KrashKart"},"content":"   Use case ends.","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"KrashKart"},"content":"**Extensions**","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"KrashKart"},"content":"* 1a. Input format is invalid.","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"KrashKart"},"content":"    * 1a1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"KrashKart"},"content":"    * 1b1. User enters input again.","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"KrashKart"},"content":"      Steps 1a1-1a2 repeat until input format is valid.","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"KrashKart"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"KrashKart"},"content":"* 1b. Another contact with the same name and contact number exists in the list.","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"KrashKart"},"content":"    * 1b1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"KrashKart"},"content":"    * 1b2. User enters input again.","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"KrashKart"},"content":"      Steps 1b1-1b2 repeat until input format is valid.","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"KrashKart"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"KrashKart"},"content":"**Use case: UC02 - Delete a person\u0027s contact**","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"KrashKart"},"content":"**MSS**","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"KrashKart"},"content":"1. User requests to delete contact.","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"KrashKart"},"content":"2. CampusConnect finds and deletes contact.","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"KrashKart"},"content":"3. CampusConnect displays success message.","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"   Use case ends.","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"**Extensions**","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"KrashKart"},"content":"* 1a. Input format is invalid.","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"KrashKart"},"content":"    * 1a1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"KrashKart"},"content":"    * 1a2. User enters input again.","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"KrashKart"},"content":"      Steps 1a1-1a2 repeat until input format is valid.","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"KrashKart"},"content":"* 1b. Contact to delete does not exist.","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"KrashKart"},"content":"    * 1b1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"KrashKart"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"KrashKart"},"content":"**Use case: UC03 - Find a person\u0027s contact**","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"KrashKart"},"content":"**MSS**","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"KrashKart"},"content":"1. User requests to find contact.","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"KrashKart"},"content":"2. CampusConnect searches the contact list and displays the details of the contact found.","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"KrashKart"},"content":"   Use case ends.","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"KrashKart"},"content":"**Extensions**","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"KrashKart"},"content":"* 1a. Input format is invalid.","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"KrashKart"},"content":"    * 1a1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"KrashKart"},"content":"    * 1a2. User enters input again.","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"KrashKart"},"content":"      Steps 1a1-1a2 repeat until input format is valid.","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"KrashKart"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"KrashKart"},"content":"* 1b. Contact to find does not exist.","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"KrashKart"},"content":"    * 1b1. CampusConnect shows empty contact list.","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"KrashKart"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"CYX22222003"},"content":"**Use case: UC04 - Add tags to a contact**  ","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"CYX22222003"},"content":"**Precondition**: Contact to add tags to already exists","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"KrashKart"},"content":"**MSS**","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"CYX22222003"},"content":"1. User requests to add tags to a contact.","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"KrashKart"},"content":"2. CampusConnect searches the contact list and finds the correct contact.","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"CYX22222003"},"content":"3. CampusConnect adds tags to the contact.","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"KrashKart"},"content":"4. CampusConnect displays success message.","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"KrashKart"},"content":"   Use case ends.","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"KrashKart"},"content":"**Extensions**","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"KrashKart"},"content":"* 1a. Input format is invalid.","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"KrashKart"},"content":"    * 1a1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"KrashKart"},"content":"    * 1a2 User enters input again.","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"KrashKart"},"content":"      Steps 1a1-1a2 repeat until input format is valid.","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"KrashKart"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"CYX22222003"},"content":"* 3a. Tag already exists for the contact","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"CYX22222003"},"content":"    * 3a1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"CYX22222003"},"content":"      ","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"CYX22222003"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"CYX22222003"},"content":"**Use case: UC05 - Delete a tag from a contact**  ","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"CYX22222003"},"content":"**Precondition**: Contact to delete a tag from already exists","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"CYX22222003"},"content":"**MSS**","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"CYX22222003"},"content":"1. User requests to delete a specific tag from a contact","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"CYX22222003"},"content":"2. CampusConnect searches the contact list and finds the correct contact.","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"CYX22222003"},"content":"3. CampusConnect deletes the specific tag from the contact","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"CYX22222003"},"content":"4. CampusConnect displays success message","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"CYX22222003"},"content":"   Use case ends","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"CYX22222003"},"content":"**Extensions**","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"CYX22222003"},"content":"* 1a. Input format is invalid","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"CYX22222003"},"content":"    * 1a1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"CYX22222003"},"content":"    * 1a2 User enters input again.","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"CYX22222003"},"content":"      Steps 1a1-1a2 repeat until input format is valid.","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"CYX22222003"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"CYX22222003"},"content":"* 3a. The contact does not contain the tag user wants to delete","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"CYX22222003"},"content":"    * 3a1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"CYX22222003"},"content":"  ","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"CYX22222003"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"CYX22222003"},"content":"**Use case: UC06 - Undo an execution of command**","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"CYX22222003"},"content":"**Precondition**: At least one valid command has been executed by the user.","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"CYX22222003"},"content":"**MSS**","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"CYX22222003"},"content":"1. User requests to undo the most recent command execution.","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"CYX22222003"},"content":"2. CampusConnect reverts the most recent command, restoring the data to its previous state ","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"CYX22222003"},"content":"before the command was executed.","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"CYX22222003"},"content":"   Use case ends","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"CYX22222003"},"content":"**Extensions**","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"KrashKart"},"content":"* 1a. No earlier data to revert.","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"CYX22222003"},"content":"    * 1a1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"CYX22222003"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"CYX22222003"},"content":"**Use Case: UC07 - Redo Command Execution**","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"CYX22222003"},"content":"**Precondition: The user has previously undone at least one command.**","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"CYX22222003"},"content":"**MSS:**","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"CYX22222003"},"content":"1. The user requests to redo the most recently undone command.","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"CYX22222003"},"content":"2. CampusConnect restores the data to the state it was in immediately before the undo.","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"CYX22222003"},"content":"   Use case ends.","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"CYX22222003"},"content":"**Extensions:**","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"KrashKart"},"content":"* 1a. No More Commands to Redo:","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"KrashKart"},"content":"    * 1a1. CampusConnect displays an error message indicating that there are no more commands to redo.","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"CYX22222003"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"damithc"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"CYX22222003"},"content":"4.  The application should respond within two seconds after user input commands.","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"CYX22222003"},"content":"5.  The application is not required to interact any other online system or applications.","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"CYX22222003"},"content":"6.  The application should not use offensive and obscene images or visuals.","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"CYX22222003"},"content":"7.  The record should bot be lost when a system fault occurs.","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"### Glossary","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"damithc"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"KrashKart"},"content":"* **GUI**: The *Graphical User Interface*, through which the user can input commands and view contacts and tags.","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"KrashKart"},"content":"* **Field**: An attribute possessed by a contact, namely Phone number, Tags, Name and Email.","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"KrashKart"},"content":"* **Prefix**: An identifier used in commands to indicate which field is referred to. For the 4 fields Phone, Name, Tags and Email,","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"KrashKart"},"content":"    the *prefixes* would be `p/`, `t/`, `n/` and `e/` respectively.","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"CYX22222003"},"content":"* **Duplicate Contact**: A contact is considered a duplicate if it shares the same phone number, email, or name with another contact. ","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"CYX22222003"},"content":"    Phone numbers and emails are unique identifiers, so allowing duplicates could cause confusion, such as accidentally contacting the wrong person. ","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"CYX22222003"},"content":"    Unique names also help maintain organization, with small variations (e.g., capitalization or adding a number) used to distinguish individuals with the same name.","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"CYX22222003"},"content":"* **Tag List**: The scrollable list in the GUI displaying all unique tags and their colour-coded categories. The execution of `find` commands do not change the content of tag lists. ","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"KrashKart"},"content":"* **Person List**: The scrollable list of contacts in the GUI displaying all contacts and the respective values for their fields.","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"KrashKart"},"content":"* **Commands affected by `undo` and `redo`**: These refer to all commands that affect the *state* of the Tag List and Contact List","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"KrashKart"},"content":"  in **CampusConnect** and exclude `list` and `find`, as they do not alter the state of the contact or tag list.","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"### Launch and shutdown","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"1. Initial launch","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"1. Saving window preferences","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"### Deleting a person","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"CYX22222003"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. ","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"KrashKart"},"content":"       Expected: No person is deleted. Error details shown in the status message.","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"   Expected: Similar to previous.","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"KrashKart"},"content":"### Finding a person","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"KrashKart"},"content":"1. Finding a person with tags","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"KrashKart"},"content":"    1. Assumption: Pick any 2 tags (or substring of the tags) present in any contact in the contact list. Call these x and y.","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"KrashKart"},"content":"    1. Test case: `find t/x` where `x` is the substring/tag chosen\u003cbr\u003e","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"KrashKart"},"content":"       Expected: All contacts with tags containing x will be displayed with a success message.","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"KrashKart"},"content":"    1. Test case: `find t/x t/y` where `x` and `y` are the substrings/tags chosen\u003cbr\u003e","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"KrashKart"},"content":"       Expected: The contact(s) with tags containing x or y will be displayed with a success message.","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"KrashKart"},"content":"1. Finding a person with multiple fields","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"KrashKart"},"content":"    1. Prerequisites: There are contacts with tags in the contact list. Add some if this is not the case.","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"KrashKart"},"content":"    1. Assumption: Pick any name and tag within the same contact. Call these name x and tag y.","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"KrashKart"},"content":"    1. Test case: `find n/x t/y` where `x` and `y` are the name and tag chosen\u003cbr\u003e","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"KrashKart"},"content":"       Expected: The contact(s) with name containing x and tags containing y will be displayed with a success message.","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"KrashKart"},"content":"1. Other incorrect find commands to try: `find`, `find x` (with no prefix)\u003cbr\u003e","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"KrashKart"},"content":"   Expected: No filtering of contacts will occur and an error message will be displayed.","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"CYX22222003"},"content":"### Undoing the last operation","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"CYX22222003"},"content":"1. Undoing an execution that modifies the CampusConnect data","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"KrashKart"},"content":"   1. Prerequisites: Perform any operation that modifies the state (all commands except for list and find) to ensure there is an action to undo.","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"CYX22222003"},"content":"   1. Test case: undo ","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"CYX22222003"},"content":"      Expected: The last operation is undone, restoring the previous state. The list updates accordingly, and a status message confirms the undo action.","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"KrashKart"},"content":"1. Undo immediately after starting the application","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"KrashKart"},"content":"    ","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"KrashKart"},"content":"    1. Prerequisites: CampusConnect has been booted and no command has been input yet.","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"KrashKart"},"content":"    1. Test case: undo","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"CYX22222003"},"content":"       Expected: No undo operation is performed. An error message appears in the status message, indicating there is no action to undo.","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"KrashKart"},"content":"### Redoing the last operation","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"KrashKart"},"content":"1. Redoing an execution that modifies the CampusConnect data","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"KrashKart"},"content":"    1. Prerequisites: Perform any operation that modifies the state (all commands except for list and find) and undo that action.","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"KrashKart"},"content":"    1. Test case: redo","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"KrashKart"},"content":"       Expected: The last undone operation is redone, restoring the previous state. The list updates accordingly, and a status message confirms the redo action.","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"KrashKart"},"content":"1. Redo immediately after starting the application","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"KrashKart"},"content":"    1. Prerequisites: CampusConnect has been booted and no command has been input yet.","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"KrashKart"},"content":"    1. Test case: redo","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"KrashKart"},"content":"          Expected: No redo operation is performed. An error message appears in the status message, indicating there is no action to redo.","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"KrashKart"},"content":"1. Redo when no operation has been undone","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"KrashKart"},"content":"    1. Prerequisites: Some commands that affect the state of CampusConnect have been entered but none of them have been redone.","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"KrashKart"},"content":"    1. Test case: redo","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"KrashKart"},"content":"       Expected: No redo operation is performed. An error message appears in the status message, indicating there is no action to redo.","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"blackpanther9229"},"content":"### Adding a tag","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"CHEN YIXUN"},"content":"1. Adding a tag while all tags are being shown","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"CHEN YIXUN"},"content":"","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"KrashKart"},"content":"   1. Prerequisites: There are 2 contacts in the list. First contact on the list has tag `CS2100`, second contact has tags `floortball` and `friends`. ","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"CHEN YIXUN"},"content":"","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"blackpanther9229"},"content":"   1. Test case: `addtag 1 t/CS2040S`\u003cbr\u003e","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"KrashKart"},"content":"      Expected: The first contact now has 2 tags `CS2100` and `CS2040S`. The tag list is updated accordingly.","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"CHEN YIXUN"},"content":"      ","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"blackpanther9229"},"content":"   1. Test case: `addtag 2 t/homie t/homie`","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"KrashKart"},"content":"      Expected: The second contact now has 3 tags `floortball`, `friends` and `homie`. The tag list is updated accordingly.","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"CHEN YIXUN"},"content":"      ","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"KrashKart"},"content":"   1. With the following test cases:","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"blackpanther9229"},"content":"      1. Test case: `addtag 0 t/volleyball` \u003cbr\u003e","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"blackpanther9229"},"content":"      1. Test case: `addtag 3 t/homie` \u003cbr\u003e","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"blackpanther9229"},"content":"      1. Test case: `addtag 2` \u003cbr\u003e","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"KrashKart"},"content":"         Expected: No new tags are added. Error message is shown.","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"KrashKart"},"content":"### Deleting a tag from a person","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"KrashKart"},"content":"1. Deleting a tag.","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"KrashKart"},"content":"    1. Prerequisites: There are contacts with tags in the contact list. Add some if this is not the case.","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"KrashKart"},"content":"    1. Assumption: Pick any contact with at least one tag. Let `i` be the index (one-based) of this contact and `x` be the name of the tag.","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"KrashKart"},"content":"    1. Test case: `deltag i t/x` where `i` is the index and `x` is the tag chosen\u003cbr\u003e","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"KrashKart"},"content":"       Expected: The tag x will be deleted from person i and the tag will also disappear from the Tag List. A success message will be displayed.","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"KrashKart"},"content":"1. Other incorrect delete tag commands to try: `deltag`, `deltag M t/x` (where M is larger than the list size or smaller than 0), `deltag 1 x`\u003cbr\u003e","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"KrashKart"},"content":"   Expected: No deleting of tags will occur and an error message will be displayed.","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"KrashKart"},"content":"### Categorizing a tag","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"KrashKart"},"content":"1. Categorizing an existing tag","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"KrashKart"},"content":"    1. Prerequisites: Ensure that the tag `CS2103` exists and is under a category other than `Academics` (Gold).","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"KrashKart"},"content":"   ","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"KrashKart"},"content":"    2. Test case: `cattag t/CS2103 acads` \u003c/br\u003e","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"KrashKart"},"content":"       Expected: Success message is shown. All occurrences of the tag `CS2103` in the person list on the bottom left and tag list on the bottom right are set to `Academics` category. Colour of tag `CS2103` set to Gold.","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"KrashKart"},"content":"2. Attempting to categorize a non-existent tag","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"KrashKart"},"content":"    1. Prerequisites: Ensure that tag `A` does not exist yet.","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"KrashKart"},"content":"   ","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"KrashKart"},"content":"    2. Test case: `cattag t/A activity` \u003c/br\u003e","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"KrashKart"},"content":"       Expected: Error message \"`Tag not found: [A]`\" is shown, indicating that tag `A` does not exist.","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"KrashKart"},"content":"   ","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"KrashKart"},"content":"3. Attempting to categorize to an invalid category","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"KrashKart"},"content":"    1. Prerequisites: Ensure that tag `CS2103` is still present.","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"KrashKart"},"content":"   ","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"KrashKart"},"content":"    2. Test case: `cattag t/CS2103 foo` \u003c/br\u003e","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"KrashKart"},"content":"       Expected: Error message \"`Invalid category: foo`\" is shown.","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"KrashKart"},"content":"   ","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"KrashKart"},"content":"4. Attempting to categorize an **invalid tag** to an **invalid category**","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"KrashKart"},"content":"    1. Prerequisites: Ensure that tag `A` does not exist yet.","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"KrashKart"},"content":"   ","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"KrashKart"},"content":"    2. Test case: `cattag t/A foo` \u003c/br\u003e","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"KrashKart"},"content":"       Expected: Error message \"`Invalid category: foo`\" is shown. Message for invalid tag is not shown for this case.","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"CYX22222003"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"CYX22222003"},"content":"## **Appendix: Planned enhancements**","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"CYX22222003"},"content":"Team size: 5","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"CYX22222003"},"content":"1. Change the font color for tags: Currently, the font color for `GENERAL` tags is grey, making them less noticeable. We plan to use a higher-contrast font color to make tags more prominent and easier to read.","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"CYX22222003"},"content":"2. Allow adding overseas phone number: The app currently supports only Singaporean phone number. We aim to expand functionality to include valid international numbers, complete with country codes.","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"CYX22222003"},"content":"3. Allow certain special characters: We currently only allow alphanumeric characters and whitespaces. We plan to support additional characters, such as hyphens, to better accommodate real-world naming conventions.","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"KrashKart"},"content":"4. Make duplicate contact error message more specific: The current error message for duplicate contacts, “This person already exists in CampusConnect,” is too general. We plan to enhance it by specifying the name of the existing contact that duplicates the one the user is attempting to add.","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"KrashKart"},"content":"5. Make `find n/`, `find p/` and `find e/` throw an error while `find t/` finds all users with not tags.","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"KrashKart"},"content":"6. Make the result display box slightly larger to accommodate longer error messages.","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"yooplo"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"KrashKart"},"content":"## **Appendix: Future features**","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"yooplo"},"content":"Below is a list of features that we feel would further enhance the user experience.","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"yooplo"},"content":"  |              Feature               | Description                                                                      |","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"CYX22222003"},"content":"  |:----------------------------------:|----------------------------------------------------------------------------------|","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"yooplo"},"content":"  |         Clustering of tags         | Group tags of the same categories together in the UI\u0027s display of the tags list. |","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"yooplo"},"content":"  |            Pin contacts            | Keep selected contacts constantly shown at the top of the contacts list.         |","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"yooplo"},"content":"  |     Customize category colors      | Change the colors of the categories to the user\u0027s preference.                    |","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"yooplo"},"content":"  |    Multiple numbers per contact    | Allow more than one number per contact to accommodate multiple contact numbers.  |","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"yooplo"},"content":"  |     Custom fields for contacts     | Add custom fields to the contacts added.                                         |","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"yooplo"},"content":"  |      Custom shortcut commands      | Add custom shortcut commands to streamline actions within the application.       |","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"yooplo"},"content":"  |    Delete tag from all contacts    | Remove a specific tag from all contacts at once.                                 |","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"yooplo"},"content":"  |             Dark mode              | Include a dark mode theme for easier viewing in low light conditions.            |","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"yooplo"},"content":"  |      Copy contact information      | Enable copying of contact information to reduce errors from manual copying.      |","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"yooplo"},"content":"  |          Export contacts           | Provide an option to export contact information for easier sharing.              |","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"yooplo"},"content":"  ","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"KrashKart"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"KrashKart"},"content":"## **Appendix: Effort**","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"KrashKart"},"content":"Our goal was to improve AB3 in terms of contact organisation, finding and tagging to allow for greater functionality and flexibility.","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"KrashKart"},"content":"Our first major change was to modify the `find` command to accept any field as a parameter and allow multiple parameters. This was a moderate effort","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"KrashKart"},"content":"that required us to change how the `FindCommand` class worked by creating new predicate classes and processing the logic for that as well,","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"KrashKart"},"content":"which was aided by the given predicate classes that we used as a template, but it was not trivial.","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"KrashKart"},"content":"Our next major change was the `undo` and `redo` commands, which were quite extensive to implement. We had to create the `VersionedCampusConnect` (a ","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"KrashKart"},"content":"variation on the `VersionedAddressBook`) and resolve serious issues related to the undo and redo state, such as logic to process","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"KrashKart"},"content":"when the `undo` and `redo` commands failed and whether non-state affecting commands (like `find`) would affect the `undo` and `redo` result. Overall,","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"KrashKart"},"content":"this was quite difficult.","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"KrashKart"},"content":"Finally, our last major change was the tag management and categorisation system, which was more difficult as the `undo` and `redo`. We added a tag management ","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"KrashKart"},"content":"component and several commands, different types of tags, and a tag list component in the UI. Figuring out how to dynamically update the tags and the tag list ","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"KrashKart"},"content":"in the GUI required a restructuring of our GUI files (under the `ui` folder) and we had faced many issues with the tag categorisation system. All in all, ","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"KrashKart"},"content":"implementing this system was not easy but it did provide better tag customisation and control than AB3.","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"KrashKart"},"content":"Most commands implemented used the given `Command` classes as a reference, but modified them to adapt the respective `execute()` methods for the command.","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"KrashKart"},"content":"On top of all these, we had also modified the GUI, which required us to familiarise and work through the ","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"KrashKart"},"content":"quirks of JavaFX.","isFullCredit":false}],"authorContributionMap":{"yooplo":62,"damithc":6,"KrashKart":218,"CHEN YIXUN":5,"Carlin Tan":1,"CYX22222003":116,"-":317,"Christopher Tan":9,"blackpanther9229":7}},{"path":"docs/Gemfile.lock","fileType":"lock","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"GEM","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  remote: https://rubygems.org/","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  specs:","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    activesupport (7.0.7.2)","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"      concurrent-ruby (~\u003e 1.0, \u003e\u003d 1.0.2)","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"      i18n (\u003e\u003d 1.6, \u003c 2)","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"      minitest (\u003e\u003d 5.1)","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"      tzinfo (~\u003e 2.0)","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    addressable (2.8.4)","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"      public_suffix (\u003e\u003d 2.0.2, \u003c 6.0)","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    coffee-script (2.4.1)","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"      coffee-script-source","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"      execjs","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    coffee-script-source (1.11.1)","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    colorator (1.1.0)","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    commonmarker (0.23.10)","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    concurrent-ruby (1.2.2)","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    dnsruby (1.70.0)","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"      simpleidn (~\u003e 0.2.1)","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    em-websocket (0.5.3)","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"      eventmachine (\u003e\u003d 0.12.9)","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"      http_parser.rb (~\u003e 0)","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    ethon (0.16.0)","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"      ffi (\u003e\u003d 1.15.0)","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    eventmachine (1.2.7)","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    eventmachine (1.2.7-x64-mingw32)","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    execjs (2.8.1)","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    faraday (2.7.5)","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"      faraday-net_http (\u003e\u003d 2.0, \u003c 3.1)","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"      ruby2_keywords (\u003e\u003d 0.0.4)","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    faraday-net_http (3.0.2)","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ffi (1.15.5)","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ffi (1.15.5-x64-mingw32)","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    forwardable-extended (2.6.0)","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    gemoji (3.0.1)","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    github-pages (228)","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"      github-pages-health-check (\u003d 1.17.9)","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"      jekyll (\u003d 3.9.3)","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"      jekyll-avatar (\u003d 0.7.0)","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"      jekyll-coffeescript (\u003d 1.1.1)","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"      jekyll-commonmark-ghpages (\u003d 0.4.0)","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"      jekyll-default-layout (\u003d 0.1.4)","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"      jekyll-feed (\u003d 0.15.1)","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"      jekyll-gist (\u003d 1.5.0)","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"      jekyll-github-metadata (\u003d 2.13.0)","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"      jekyll-include-cache (\u003d 0.2.1)","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"      jekyll-mentions (\u003d 1.6.0)","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"      jekyll-optional-front-matter (\u003d 0.3.2)","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"      jekyll-paginate (\u003d 1.1.0)","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"      jekyll-readme-index (\u003d 0.3.0)","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"      jekyll-redirect-from (\u003d 0.16.0)","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"      jekyll-relative-links (\u003d 0.6.1)","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"      jekyll-remote-theme (\u003d 0.4.3)","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"      jekyll-sass-converter (\u003d 1.5.2)","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"      jekyll-seo-tag (\u003d 2.8.0)","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"      jekyll-sitemap (\u003d 1.4.0)","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"      jekyll-swiss (\u003d 1.0.0)","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"      jekyll-theme-architect (\u003d 0.2.0)","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"      jekyll-theme-cayman (\u003d 0.2.0)","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"      jekyll-theme-dinky (\u003d 0.2.0)","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"      jekyll-theme-hacker (\u003d 0.2.0)","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"      jekyll-theme-leap-day (\u003d 0.2.0)","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"      jekyll-theme-merlot (\u003d 0.2.0)","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"      jekyll-theme-midnight (\u003d 0.2.0)","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"      jekyll-theme-minimal (\u003d 0.2.0)","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"      jekyll-theme-modernist (\u003d 0.2.0)","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"      jekyll-theme-primer (\u003d 0.6.0)","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"      jekyll-theme-slate (\u003d 0.2.0)","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"      jekyll-theme-tactile (\u003d 0.2.0)","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"      jekyll-theme-time-machine (\u003d 0.2.0)","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"      jekyll-titles-from-headings (\u003d 0.5.3)","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"      jemoji (\u003d 0.12.0)","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"      kramdown (\u003d 2.3.2)","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"      kramdown-parser-gfm (\u003d 1.1.0)","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"      liquid (\u003d 4.0.4)","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"      mercenary (~\u003e 0.3)","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"      minima (\u003d 2.5.1)","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"      nokogiri (\u003e\u003d 1.13.6, \u003c 2.0)","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"      rouge (\u003d 3.26.0)","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"      terminal-table (~\u003e 1.4)","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    github-pages-health-check (1.17.9)","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"      addressable (~\u003e 2.3)","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"      dnsruby (~\u003e 1.60)","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"      octokit (~\u003e 4.0)","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"      public_suffix (\u003e\u003d 3.0, \u003c 5.0)","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"      typhoeus (~\u003e 1.3)","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    html-pipeline (2.14.3)","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"      activesupport (\u003e\u003d 2)","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"      nokogiri (\u003e\u003d 1.4)","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    http_parser.rb (0.8.0)","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    i18n (1.14.1)","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"      concurrent-ruby (~\u003e 1.0)","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    jekyll (3.9.3)","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"      addressable (~\u003e 2.4)","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"      colorator (~\u003e 1.0)","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"      em-websocket (~\u003e 0.5)","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"      i18n (\u003e\u003d 0.7, \u003c 2)","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"      jekyll-sass-converter (~\u003e 1.0)","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"      jekyll-watch (~\u003e 2.0)","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"      kramdown (\u003e\u003d 1.17, \u003c 3)","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"      liquid (~\u003e 4.0)","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"      mercenary (~\u003e 0.3.3)","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"      pathutil (~\u003e 0.9)","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"      rouge (\u003e\u003d 1.7, \u003c 4)","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"      safe_yaml (~\u003e 1.0)","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    jekyll-avatar (0.7.0)","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"      jekyll (\u003e\u003d 3.0, \u003c 5.0)","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    jekyll-coffeescript (1.1.1)","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"      coffee-script (~\u003e 2.2)","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"      coffee-script-source (~\u003e 1.11.1)","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    jekyll-commonmark (1.4.0)","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"      commonmarker (~\u003e 0.22)","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    jekyll-commonmark-ghpages (0.4.0)","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"      commonmarker (~\u003e 0.23.7)","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"      jekyll (~\u003e 3.9.0)","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"      jekyll-commonmark (~\u003e 1.4.0)","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"      rouge (\u003e\u003d 2.0, \u003c 5.0)","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    jekyll-default-layout (0.1.4)","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"      jekyll (~\u003e 3.0)","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    jekyll-feed (0.15.1)","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"      jekyll (\u003e\u003d 3.7, \u003c 5.0)","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    jekyll-gist (1.5.0)","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"      octokit (~\u003e 4.2)","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    jekyll-github-metadata (2.13.0)","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"      jekyll (\u003e\u003d 3.4, \u003c 5.0)","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"      octokit (~\u003e 4.0, !\u003d 4.4.0)","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    jekyll-include-cache (0.2.1)","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"      jekyll (\u003e\u003d 3.7, \u003c 5.0)","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    jekyll-mentions (1.6.0)","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"      html-pipeline (~\u003e 2.3)","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"      jekyll (\u003e\u003d 3.7, \u003c 5.0)","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    jekyll-optional-front-matter (0.3.2)","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"      jekyll (\u003e\u003d 3.0, \u003c 5.0)","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    jekyll-paginate (1.1.0)","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    jekyll-readme-index (0.3.0)","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"      jekyll (\u003e\u003d 3.0, \u003c 5.0)","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    jekyll-redirect-from (0.16.0)","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"      jekyll (\u003e\u003d 3.3, \u003c 5.0)","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    jekyll-relative-links (0.6.1)","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"      jekyll (\u003e\u003d 3.3, \u003c 5.0)","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    jekyll-remote-theme (0.4.3)","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"      addressable (~\u003e 2.0)","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"      jekyll (\u003e\u003d 3.5, \u003c 5.0)","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"      jekyll-sass-converter (\u003e\u003d 1.0, \u003c\u003d 3.0.0, !\u003d 2.0.0)","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"      rubyzip (\u003e\u003d 1.3.0, \u003c 3.0)","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    jekyll-sass-converter (1.5.2)","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"      sass (~\u003e 3.4)","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    jekyll-seo-tag (2.8.0)","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"      jekyll (\u003e\u003d 3.8, \u003c 5.0)","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    jekyll-sitemap (1.4.0)","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"      jekyll (\u003e\u003d 3.7, \u003c 5.0)","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    jekyll-swiss (1.0.0)","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    jekyll-theme-architect (0.2.0)","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"      jekyll (\u003e 3.5, \u003c 5.0)","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"      jekyll-seo-tag (~\u003e 2.0)","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    jekyll-theme-cayman (0.2.0)","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"      jekyll (\u003e 3.5, \u003c 5.0)","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"      jekyll-seo-tag (~\u003e 2.0)","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    jekyll-theme-dinky (0.2.0)","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"      jekyll (\u003e 3.5, \u003c 5.0)","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"      jekyll-seo-tag (~\u003e 2.0)","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    jekyll-theme-hacker (0.2.0)","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"      jekyll (\u003e 3.5, \u003c 5.0)","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"      jekyll-seo-tag (~\u003e 2.0)","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    jekyll-theme-leap-day (0.2.0)","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"      jekyll (\u003e 3.5, \u003c 5.0)","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"      jekyll-seo-tag (~\u003e 2.0)","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    jekyll-theme-merlot (0.2.0)","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"      jekyll (\u003e 3.5, \u003c 5.0)","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"      jekyll-seo-tag (~\u003e 2.0)","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    jekyll-theme-midnight (0.2.0)","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"      jekyll (\u003e 3.5, \u003c 5.0)","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"      jekyll-seo-tag (~\u003e 2.0)","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    jekyll-theme-minimal (0.2.0)","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"      jekyll (\u003e 3.5, \u003c 5.0)","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"      jekyll-seo-tag (~\u003e 2.0)","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    jekyll-theme-modernist (0.2.0)","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"      jekyll (\u003e 3.5, \u003c 5.0)","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"      jekyll-seo-tag (~\u003e 2.0)","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    jekyll-theme-primer (0.6.0)","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"      jekyll (\u003e 3.5, \u003c 5.0)","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"      jekyll-github-metadata (~\u003e 2.9)","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"      jekyll-seo-tag (~\u003e 2.0)","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    jekyll-theme-slate (0.2.0)","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"      jekyll (\u003e 3.5, \u003c 5.0)","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"      jekyll-seo-tag (~\u003e 2.0)","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    jekyll-theme-tactile (0.2.0)","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"      jekyll (\u003e 3.5, \u003c 5.0)","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"      jekyll-seo-tag (~\u003e 2.0)","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    jekyll-theme-time-machine (0.2.0)","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"      jekyll (\u003e 3.5, \u003c 5.0)","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"      jekyll-seo-tag (~\u003e 2.0)","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"    jekyll-titles-from-headings (0.5.3)","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"      jekyll (\u003e\u003d 3.3, \u003c 5.0)","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"    jekyll-watch (2.2.1)","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"      listen (~\u003e 3.0)","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    jemoji (0.12.0)","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"      gemoji (~\u003e 3.0)","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"      html-pipeline (~\u003e 2.2)","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"      jekyll (\u003e\u003d 3.0, \u003c 5.0)","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    kramdown (2.3.2)","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"      rexml","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    kramdown-parser-gfm (1.1.0)","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"      kramdown (~\u003e 2.0)","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    liquid (4.0.4)","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"    listen (3.8.0)","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"      rb-fsevent (~\u003e 0.10, \u003e\u003d 0.10.3)","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"      rb-inotify (~\u003e 0.9, \u003e\u003d 0.9.10)","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    mercenary (0.3.6)","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"dependabot[bot]"},"content":"    mini_portile2 (2.8.6)","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    minima (2.5.1)","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"      jekyll (\u003e\u003d 3.5, \u003c 5.0)","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"      jekyll-feed (~\u003e 0.9)","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"      jekyll-seo-tag (~\u003e 2.1)","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    minitest (5.19.0)","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"dependabot[bot]"},"content":"    nokogiri (1.16.5)","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"      mini_portile2 (~\u003e 2.8.2)","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"      racc (~\u003e 1.4)","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"    octokit (4.25.1)","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"      faraday (\u003e\u003d 1, \u003c 3)","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"      sawyer (~\u003e 0.9)","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    pathutil (0.16.2)","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"      forwardable-extended (~\u003e 2.6)","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public_suffix (4.0.7)","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"dependabot[bot]"},"content":"    racc (1.7.3)","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"    rb-fsevent (0.11.2)","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    rb-inotify (0.10.1)","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"      ffi (~\u003e 1.0)","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"dependabot[bot]"},"content":"    rexml (3.3.6)","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"dependabot[bot]"},"content":"      strscan","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"    rouge (3.26.0)","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ruby2_keywords (0.0.5)","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"    rubyzip (2.3.2)","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"    safe_yaml (1.0.5)","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    sass (3.7.4)","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"      sass-listen (~\u003e 4.0.0)","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"    sass-listen (4.0.0)","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"      rb-fsevent (~\u003e 0.9, \u003e\u003d 0.9.4)","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"      rb-inotify (~\u003e 0.9, \u003e\u003d 0.9.7)","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"    sawyer (0.9.2)","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"      addressable (\u003e\u003d 2.3.5)","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"      faraday (\u003e\u003d 0.17.3, \u003c 3)","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"    simpleidn (0.2.1)","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"      unf (~\u003e 0.1.4)","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"dependabot[bot]"},"content":"    strscan (3.1.0)","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"    terminal-table (1.8.0)","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"      unicode-display_width (~\u003e 1.1, \u003e\u003d 1.1.1)","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"    typhoeus (1.4.0)","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"      ethon (\u003e\u003d 0.9.0)","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"    tzinfo (2.0.6)","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"      concurrent-ruby (~\u003e 1.0)","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"    unf (0.1.4)","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"      unf_ext","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"    unf_ext (0.0.8.2)","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"    unf_ext (0.0.8.2-x64-mingw32)","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    unicode-display_width (1.8.0)","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"    webrick (1.8.1)","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"PLATFORMS","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"  ruby","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"  x64-mingw32","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"DEPENDENCIES","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"  github-pages","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"  jekyll","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"  webrick","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"BUNDLED WITH","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"   2.1.4","isFullCredit":false}],"authorContributionMap":{"dependabot[bot]":6,"-":263}},{"path":"docs/SettingUp.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Setting up and getting started\"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Setting up and getting started","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Caution:**","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"damithc"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to ensure Intellij is configured to use **JDK 17**.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"warning\" seamless\u003e","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Note: Importing a Gradle project is slightly different from importing a normal Java project.","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Before writing code","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"   **Tip:**","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. **Set up CI**","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"1. **Learn the design**","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [CampusConnect’s architecture](DeveloperGuide.md#architecture).","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","isFullCredit":false}],"authorContributionMap":{"damithc":1,"yooplo":1,"-":60}},{"path":"docs/UserGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"# CampusConnect User Guide","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":"**CampusConnect** is the ultimate contact management app for NUS students with speedy typing skills. Our","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KrashKart"},"content":"contact tagging, finding, and organisation features ensure that with just a few keystrokes, you never forget","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"who you meet, where you met them, and what their contact details are.","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KrashKart"},"content":"**CampusConnect** offers a seamless and quick contact management experience using our *Command Line Interface* style of","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KrashKart"},"content":"input, where commands are processed in the blink of an eye. If you can type quickly, we can get it done faster than ","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KrashKart"},"content":"any traditional point-and-click management app.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Christopher Tan"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Quick start","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"damithc"},"content":"1. Ensure you have Java `17` or above installed in your Computer.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Christopher Tan"},"content":"1. Download the latest `.jar` file from [here](https://github.com/AY2425S1-CS2103T-F14a-4/tp/releases/).","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your CampusConnect.","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar CampusConnect.jar` command to run the application.\u003cbr\u003e","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KrashKart"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app does not contain any sample data.\u003cbr\u003e","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KrashKart"},"content":"   ![EmptyUi](images/EmptyUi.png)","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"   Some example commands you can try:","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Christopher Tan"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com` : Adds a contact named `John Doe` with phone number `98765432` and email `johnd@example.com` to CampusConnect.","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KrashKart"},"content":"   * `delete 1` : Deletes the 1st contact shown in the current list.","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Christopher Tan"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"## Features","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KrashKart"},"content":"* Prefixes (for the contact information) refer to any of these: `n/`, `p/`, `e/`, `t/`, which are","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KrashKart"},"content":"  used for contact information (name, phone, email and tag respectively)","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Christopher Tan"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KrashKart"},"content":"**Notes about duplicate contacts:**\u003cbr\u003e","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KrashKart"},"content":"* A contact is considered a duplicate of another if it has the same Name, Phone or Email as the other contact.","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CYX22222003"},"content":"**Notes about case sensitivity:**\u003cbr\u003e","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"CYX22222003"},"content":"* Names, emails and tags are case-sensitive. ","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CYX22222003"},"content":"**Notes about format of fields:**\u003cbr\u003e","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CYX22222003"},"content":"* Names should only contain alphanumeric characters and spaces","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CYX22222003"},"content":"* Phone numbers should only contain numbers, start with 6, 8 or 9, and it must be 8 digits long","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CYX22222003"},"content":"* Emails should be of the format `local-part@domain` and adhere to the following constraints:","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CYX22222003"},"content":"  1. The local-part should only contain alphanumeric characters and these special characters, excluding the parentheses, (+_.-)","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CYX22222003"},"content":"  2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels separated by periods.","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CYX22222003"},"content":"     The domain name must:","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CYX22222003"},"content":"      - end with a domain label at least 2 characters long","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CYX22222003"},"content":"      - have each domain label start and end with alphanumeric characters","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CYX22222003"},"content":"      - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CYX22222003"},"content":"* Tag names should be alphanumeric. Tags that have multiple words can be separated by a hyphen (-)","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Christopher Tan"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Christopher Tan"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Christopher Tan"},"content":"## Command summary","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yooplo"},"content":"|                                        Action                                         |                                                        Format, Examples                                                         |","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Christopher Tan"},"content":"|:-------------------------------------------------------------------------------------:|:-------------------------------------------------------------------------------------------------------------------------------:|","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Christopher Tan"},"content":"|                         **[Add:link:](#adding-a-person-add)**                         | `add n/NAME p/PHONE_NUMBER e/EMAIL [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/91231234 e/jamesho@example.com t/friend t/classmate` |","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Christopher Tan"},"content":"|                    **[Clear:link:](#clearing-all-entries-clear)**                     |                                                             `clear`                                                             |","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Christopher Tan"},"content":"|                     **[Delete:link:](#deleting-a-person-delete)**                     |                                               `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                               |","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Christopher Tan"},"content":"|                       **[Edit:link:](#editing-a-person-edit)**                        |         `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`         |","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Christopher Tan"},"content":"| **[Find by contact information:link:](#finding-persons-by-contact-information-find)** |                       `find PREFIX/KEYWORD [PREFIX/MORE_KEYWORDS]…​`\u003cbr\u003e e.g., `find n/James t/floorball`                       |","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Christopher Tan"},"content":"|             **[Add tag:link:](#adding-tags-to-a-specific-person-addtag)**             |                       `addtag INDEX t/KEYWORD [t/MORE_TAGS]…​` \u003cbr\u003e e.g. `addtag 1 t/friend t/classmate`                        |","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Christopher Tan"},"content":"|                **[Delete tag:link:](#deleting-a-person-s-tag-deltag)**                |                                     `deltag INDEX t/KEYWORD` \u003cbr\u003e e.g. `deltag 1 t/friend`                                      |","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Christopher Tan"},"content":"|                **[Categorize tag:link:](#categorizing-a-tag-cattag)**                 |                    `cattag t/TAG [t/MORE_TAGS…​] CATEGORY` \u003cbr\u003e e.g. `cattag t/floorball t/mahjong activity`                    |","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Christopher Tan"},"content":"|                     **[Undo action:link:](#undo-a-command-undo)**                     |                                                             `undo`                                                              |","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Christopher Tan"},"content":"|                     **[Redo action:link:](#redo-a-command-redo)**                     |                                                             `redo`                                                              |","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Christopher Tan"},"content":"|                      **[List:link:](#listing-all-persons-list)**                      |                                                             `list`                                                              |","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Christopher Tan"},"content":"|                         **[Help:link:](#viewing-help-help)**                          |                                                             `help`                                                              |","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Christopher Tan"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"KrashKart"},"content":"## Commands","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Viewing help : `help`","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"KrashKart"},"content":"Shows a message with a clickable hyperlink.","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"KrashKart"},"content":"When clicked, this hyperlink will show the help page.","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"Format: `help`","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Christopher Tan"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"### Adding a person : `add`","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"Christopher Tan"},"content":"Adds a person to CampusConnect.","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Christopher Tan"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL [t/TAG]…​`","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"CYX22222003"},"content":"* A person can have any number of tags (including 0)","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Christopher Tan"},"content":"* The phone number must follow the Singaporean convention: have 8 digits, start with 6, 8, or 9, and consist only of numbers.","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"KrashKart"},"content":"* Duplicate contacts cannot be added to the list.","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"CYX22222003"},"content":"* Names are case-sensitive. For example, “Alice” and “alice” are considered distinct names.","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"CYX22222003"},"content":"* Names should only contain alphanumeric characters and spaces, and it should not be blank.","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"Examples:","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Christopher Tan"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com`","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"KrashKart"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com p/92345672 t/criminal`","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Christopher Tan"},"content":"Shows a list of all persons in CampusConnect.","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `list`","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Christopher Tan"},"content":"Edits an existing person in CampusConnect.","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Christopher Tan"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [t/TAG]…​`","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Christopher Tan"},"content":"* When editing tags, the existing tags of the person will be removed, i.e. adding of tags is not cumulative.","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    specifying any tags after it.","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"KrashKart"},"content":"* After editing the contact, it should not be a duplicate of another contact.","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"Examples:","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Christopher Tan"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"KrashKart"},"content":"### Finding persons by contact information : `find`","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"Christopher Tan"},"content":"Finds persons whose name, email address, contact number, or tags contain any of the given keywords, even if the keyword is only a part of the information stored.","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Christopher Tan"},"content":"Format: ","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"KrashKart"},"content":"`find PREFIX/KEYWORD [PREFIX/MORE_KEYWORDS]…​`","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"KrashKart"},"content":"* Only the specified fields are searched.","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Christopher Tan"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`.","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Christopher Tan"},"content":"* The order of the keywords does not matter, e.g. `find n/Hans n/Bo` is equivalent to `find n/Bo n/Hans`.","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Christopher Tan"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search),","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Christopher Tan"},"content":"  e.g. `find n/Hans n/Bo` will match persons with names `Hans Gruber` or `Bo Yang`.","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Christopher Tan"},"content":"* Keywords do not need to fully match the field, a partial match is sufficient, e.g. `bern` can match names like `Bernice` or `Bernard`","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"KrashKart"},"content":"How `find` works with multiple parameters:","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"KrashKart"},"content":"* If multiple keywords for a field are present, `find` will display contacts that satisfy *any* keyword for that field.","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"KrashKart"},"content":"* If multiple fields are present, `find` will display contacts that satisfy **all** of these fields.","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"Examples:","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"KrashKart"},"content":"* `find n/bernice t/is1108` returns `Bernice Yu`\u003cbr\u003e","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Christopher Tan"},"content":"  ![result for \u0027find n/bernice t/is1108\u0027](images/findBerniceIS1108Result.png){ width\u003d\"675px\" }","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"KrashKart"},"content":"* `find t/floor t/run` returns all contacts with any tag containing `floor` or `run` \u003cbr\u003e","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Christopher Tan"},"content":"  ![result for \u0027find t/floor t/run\u0027](images/findFloorRunResult.png){ width\u003d\"675px\" }","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Christopher Tan"},"content":"* `find n/alex n/bernice t/floor t/neighbour` returns all contacts that have names containing either `alex` or `bernice` **with** tags containing either `floor` or `neighbour`","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Christopher Tan"},"content":"Deletes the specified person from CampusConnect.","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"Examples:","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Christopher Tan"},"content":"* `list` followed by `delete 2` deletes the 2nd person in CampusConnect.","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Christopher Tan"},"content":"* `find n/Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"CYX22222003"},"content":"### Adding tags to a specific person : `addtag`","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"yooplo"},"content":"Adds the specified person\u0027s tag.","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"KrashKart"},"content":"Format: `addtag INDEX t/TAG [t/MORE_TAGS]…​`","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Christopher Tan"},"content":"* Adds the tags with the specified value `TAG` of the person at the specified `INDEX`.","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"yooplo"},"content":"* The index refers to the index number shown in the displayed person list.","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"yooplo"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"Christopher Tan"},"content":"* Multiple tags can be added to a person per command.","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"CYX22222003"},"content":"* Attempt to add duplicate tags to a person will cause an error message to be thrown.","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"yooplo"},"content":"Examples:","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"yooplo"},"content":"* `addtag 1 t/friend` adds a \u0027friend\u0027 tag to the first person in the list.","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"yooplo"},"content":"* `addtag 2 t/classmate t/neighbour` adds both the \u0027classmate\u0027 and \u0027neighbour\u0027 tag to the second person in the list.","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Christopher Tan"},"content":"### Deleting a person\u0027s tag : `deltag`","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"KrashKart"},"content":"Deletes the specified person\u0027s tag.","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Christopher Tan"},"content":"Format: `deltag INDEX t/TAG`","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"Christopher Tan"},"content":"* Deletes the tag with the specified value `TAG` of the person at the specified `INDEX`.","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"KrashKart"},"content":"* The index refers to the index number shown in the displayed person list.","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"KrashKart"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"Christopher Tan"},"content":"* Only one tag can be deleted per command.","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"Christopher Tan"},"content":"* The list of tags will be updated accordingly.","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"KrashKart"},"content":"Examples:","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"yooplo"},"content":"* `deltag 1 t/friend` ","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"Christopher Tan"},"content":"deletes the `friend` tag of the first person in the list.","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"Christopher Tan"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"Christopher Tan"},"content":"### Categorizing a tag : `cattag`","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"Christopher Tan"},"content":"Categorizes a tag under a defined category.","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"KrashKart"},"content":"Format: `cattag t/TAG [t/MORE_TAGS]…​ CATEGORY`","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Christopher Tan"},"content":"* Sets the tag(s) in CampusConnect with the specified value `TAG` to fall under the specified `CATEGORY`.","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Christopher Tan"},"content":"* Currently available categories with their respective keywords and colours are:","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"Christopher Tan"},"content":"    Category      | Keyword (case sensitive) | Colour","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"Christopher Tan"},"content":"    --------------|--------------------------|-  ","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"Christopher Tan"},"content":"    **General**   | `general`                | \u003cspan style\u003d\"color:DarkGray\"\u003e Grey \u003c/span\u003e","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"Christopher Tan"},"content":"    **Academics** | `acads`                  | \u003cspan style\u003d\"color:Gold\"\u003e Gold \u003c/span\u003e","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"Christopher Tan"},"content":"    **Activities**| `activity`               | \u003cspan style\u003d\"color:DodgerBlue\"\u003e Blue \u003c/span\u003e","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"Christopher Tan"},"content":"    **Networking**| `network`                | \u003cspan style\u003d\"color:LimeGreen\"\u003e Green \u003c/span\u003e          ","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"Christopher Tan"},"content":"    **Mentorship**| `mentor`                 | \u003cspan style\u003d\"color:HotPink\"\u003e Pink \u003c/span\u003e","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"Christopher Tan"},"content":"* Multiple tags can be categorized to the same category using a single command.","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"Christopher Tan"},"content":"* All tags specified must be valid existing tags.","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"Christopher Tan"},"content":"* Attempts to set a tag to its current category will cause the whole command to be rejected.","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"Christopher Tan"},"content":"* Only one category is allowed to be entered per command, i.e. `cattag t/tag1 acads t/tag2 general` is not allowed.","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"Christopher Tan"},"content":"* Note: Newly created tags (by [`add`:link:](#adding-a-person-add) or [`addtag`:link:](#adding-tags-to-a-specific-person-addtag)) will have category `General` and colour `Grey` by default.","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"Christopher Tan"},"content":"Examples:","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Christopher Tan"},"content":"* `cattag t/CS2100 acads` categorizes the tag `CS2100` under `Academics` and display colour of the tag`CS2100` becomes `Gold`.","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Christopher Tan"},"content":"* `cattag t/floorball t/mahjong activity` categorizes both tags `floorball` and `mahjong` under `Activities` with colour `Blue`. ","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"blackpanther9229"},"content":"![cattag response image](images/cattagResponse.png)","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"KrashKart"},"content":"### Undo a command : `undo`","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"KrashKart"},"content":"Undoes the previous command and reverts CampusConnect.","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"KrashKart"},"content":"Format: `undo`","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"KrashKart"},"content":"* Reverts the state of CampusConnect to the one before the most recent command, if any.","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"CYX22222003"},"content":"* When the oldest version of CampusConnect is reached, `undo` command will cause an exception to be thrown","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"KrashKart"},"content":"* Only commands that modify the data of CampusConnect can be undone. Commands such as `list` and `find` will not be undone.","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"Christopher Tan"},"content":"### Redo a command : `redo`","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"Christopher Tan"},"content":"Reapplies a command that was previously undone by `undo`.","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Christopher Tan"},"content":"Format: `redo`","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"Christopher Tan"},"content":"* Advances CampusConnect to the state it was in before the most recent `undo` command, if any.","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"KrashKart"},"content":"* Only commands that modify the data of CampusConnect can be redone. Commands such as `list` and `find` will not be redone.","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"Christopher Tan"},"content":"* Note: If a new command (excluding `redo` or `undo`) is executed after an `undo`, the redo history is cleared, and further `redo` will not be possible.","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"Christopher Tan"},"content":"Clears all entries from CampusConnect.","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"Format: `clear`","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"Christopher Tan"},"content":"\u003cbox type\u003d\"warning\"\u003e","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"Christopher Tan"},"content":"\u003cstrong\u003eCaution:\u003c/strong\u003e","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"Christopher Tan"},"content":"* There will not be any confirmation message shown. \u003c/br\u003e","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Christopher Tan"},"content":"* If you have unintentionally executed the `clear` command, you can use the [`undo`:link:](#undo-a-command-undo) command to restore your data.","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Christopher Tan"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"Exits the program.","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"Format: `exit`","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"### Saving the data","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"Christopher Tan"},"content":"CampusConnect data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"### Editing the data file","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"Christopher Tan"},"content":"CampusConnect data is saved automatically as a JSON file `[JAR file location]/data/CampusConnect.json`. Advanced users are welcome to update data directly by editing that data file.","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"Christopher Tan"},"content":"\u003cbox type\u003d\"warning\"\u003e","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"Christopher Tan"},"content":"\u003cstrong\u003eCaution:\u003c/strong\u003e","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"Christopher Tan"},"content":"* If your changes to the data file makes its format invalid, CampusConnect will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"Christopher Tan"},"content":"* Furthermore, certain edits can cause CampusConnect to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"Christopher Tan"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"## FAQ","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"yooplo"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CampusConnect home folder.","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"CYX22222003"},"content":"**Q**: How can I add contacts with the same name?\u003cbr\u003e","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"CYX22222003"},"content":"**A**: If two contacts share the same name, you can differentiate them by adding a number or adjusting the capitalization. For example, use “Mary” and “Mary 2” or “John” and “john” to keep each entry unique.","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"KrashKart"},"content":"**Q**: What if I need to use special characters in tags?\u003cbr\u003e","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"KrashKart"},"content":"**A**: You can work around this by using hyphens (-) to signify spacing and eliminate all special characters. For example, you can add \"Cafe@NUS\" as a tag using \"Cafe-NUS\".","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"KrashKart"},"content":"**Q**: Why can\u0027t I find fields by whole words? There\u0027s too much clutter!\u003cbr\u003e","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"KrashKart"},"content":"**A**: We understand the importance of a neat and simple contact list. But, like search engines, we want to give you unparallelled control and flexibility over how you find contacts. As is often said, \"It is better ","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"KrashKart"},"content":"to give too much than to not give at all\", and we believe that finding by whole words is not enough and gives too little.","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"KrashKart"},"content":"**Q**: Why are tags case-sensitive? Now I can just add tags with different cases and clutter up CampusConnect...\u003cbr\u003e","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"KrashKart"},"content":"**A**: Again, we want to give you the flexibility to customise your own tags, so we allow this.","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"KrashKart"},"content":"**Q**: Why does the tags list not update when I `find` something? \u003cbr\u003e","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"KrashKart"},"content":"**A**: Our tags list is meant to span the entire contact list, which can serve as a reference if you require to find a contact to add a specific and easily-forgettable tag to.","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"KrashKart"},"content":"## Known Issues","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Jay Hong"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"KrashKart"},"content":"3. **If the value of a field is too long**, the display will not render the full value properly. However, we expect that the average contact will not have such a long name nor require a long tag name.","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"","isFullCredit":false}],"authorContributionMap":{"yooplo":18,"damithc":1,"KrashKart":66,"Jay Hong":1,"CYX22222003":23,"-":147,"Christopher Tan":108,"blackpanther9229":3}},{"path":"docs/_markbind/layouts/default.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Christopher Tan"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eCampusConnect\u003c/a\u003e","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"damithc"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Christopher Tan"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2425S1-CS2103T-F14a-4/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Christopher Tan"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#command-summary)","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KrashKart"},"content":"  * [Commands]({{ baseUrl }}/UserGuide.html#commands)","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KrashKart"},"content":"  * [Known Issues]({{ baseUrl }}/UserGuide.html#known-issues)","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KrashKart"},"content":"  * [Appendix: Future features]({{ baseUrl }}/DeveloperGuide.html#appendix-future-features)","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KrashKart"},"content":"  * [Appendix: Effort]({{ baseUrl }}/DeveloperGuide.html#appendix-effort)","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","isFullCredit":false}],"authorContributionMap":{"damithc":1,"KrashKart":4,"-":59,"Christopher Tan":3}},{"path":"docs/diagrams/AddTagSequenceDiagram.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"blackpanther9229"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blackpanther9229"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blackpanther9229"},"content":"skinparam ArrowFontStyle plain","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blackpanther9229"},"content":"box Logic LOGIC_COLOR_T1","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blackpanther9229"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blackpanther9229"},"content":"participant \":CampusConnectParser\" as CampusConnectParser LOGIC_COLOR","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blackpanther9229"},"content":"participant \":AddTagCommandParser\" as AddTagCommandParser LOGIC_COLOR","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blackpanther9229"},"content":"participant \"a:AddTagCommand\" as AddTagCommand LOGIC_COLOR","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blackpanther9229"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"endbox","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"box Model MODEL_COLOR_T1","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blackpanther9229"},"content":"participant \"m:Model\" as Model MODEL_COLOR","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blackpanther9229"},"content":"end box","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Christopher Tan"},"content":"[-\u003e LogicManager : execute(\"addtag 2 t/mate\")","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blackpanther9229"},"content":"activate LogicManager","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Christopher Tan"},"content":"LogicManager -\u003e CampusConnectParser : parseCommand(\"addtag 2 t/mate\")","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blackpanther9229"},"content":"activate CampusConnectParser","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blackpanther9229"},"content":"create AddTagCommandParser","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blackpanther9229"},"content":"CampusConnectParser -\u003e AddTagCommandParser","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blackpanther9229"},"content":"activate AddTagCommandParser","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blackpanther9229"},"content":"AddTagCommandParser --\u003e CampusConnectParser","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blackpanther9229"},"content":"deactivate AddTagCommandParser","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blackpanther9229"},"content":"CampusConnectParser -\u003e AddTagCommandParser: parse(\"2 t/mate\")","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blackpanther9229"},"content":"activate AddTagCommandParser","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blackpanther9229"},"content":"create AddTagCommand","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blackpanther9229"},"content":"AddTagCommandParser -\u003e AddTagCommand","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blackpanther9229"},"content":"activate AddTagCommand","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blackpanther9229"},"content":"AddTagCommand --\u003e AddTagCommandParser :","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blackpanther9229"},"content":"deactivate AddTagCommand","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"blackpanther9229"},"content":"AddTagCommandParser --\u003e CampusConnectParser : addTagCommand","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blackpanther9229"},"content":"AddTagCommandParser -[hidden]-\u003e CampusConnectParser","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blackpanther9229"},"content":"destroy AddTagCommandParser","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blackpanther9229"},"content":"CampusConnectParser --\u003e LogicManager : addTagCommand","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"blackpanther9229"},"content":"deactivate CampusConnectParser","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blackpanther9229"},"content":"LogicManager -\u003e AddTagCommand : execute(m)","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blackpanther9229"},"content":"activate AddTagCommand","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blackpanther9229"},"content":"AddTagCommand -\u003e Model : getFilteredPersonList()","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blackpanther9229"},"content":"activate Model","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blackpanther9229"},"content":"Model --\u003e AddTagCommand : lastShownList","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blackpanther9229"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"blackpanther9229"},"content":"AddTagCommand -\u003e Model : get(index)","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"blackpanther9229"},"content":"activate Model","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"blackpanther9229"},"content":"Model --\u003e AddTagCommand : personToEdit","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"blackpanther9229"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"AddTagCommand -\u003e Model : addPersonTags(person, tags)","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"blackpanther9229"},"content":"activate Model","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"blackpanther9229"},"content":"Model --\u003e AddTagCommand","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"blackpanther9229"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"blackpanther9229"},"content":"create CommandResult","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"blackpanther9229"},"content":"AddTagCommand -\u003e CommandResult","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"blackpanther9229"},"content":"activate CommandResult","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"blackpanther9229"},"content":"CommandResult --\u003e AddTagCommand : r","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"blackpanther9229"},"content":"deactivate CommandResult","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"blackpanther9229"},"content":"AddTagCommand --\u003e LogicManager","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"blackpanther9229"},"content":"deactivate AddTagCommand","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"blackpanther9229"},"content":"[\u003c-- LogicManager","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"blackpanther9229"},"content":"deactivate LogicManager","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"blackpanther9229"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"CYX22222003":4,"Christopher Tan":2,"blackpanther9229":74}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveCampusConnect(campusConnect)","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"yooplo":1,"-":38}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"CampusConnect *-right-\u003e \"1\" UniquePersonList","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"CampusConnect *-right-\u003e \"1\" UniqueTagList","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KrashKart"},"content":"UniquePersonList -right-\u003e \"*\" Person","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KrashKart"},"content":"Person *-up-\u003e \"*\" Tag","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KrashKart"},"content":"Person *--\u003e \"1\" Name","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KrashKart"},"content":"Person *--\u003e \"1\" Phone","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KrashKart"},"content":"Person *--\u003e \"1\" Email","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"yooplo":2,"KrashKart":5,"-":13}},{"path":"docs/diagrams/CommandClasses.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"KrashKart"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KrashKart"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"skinparam arrowThickness 1.1","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"skinparam arrowColor LOGIC_COLOR_T4","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"skinparam classBackgroundColor LOGIC_COLOR","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":"Class \"{abstract}\\nCommand\" as Command","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":"Class HiddenOutside #FFFFFF","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KrashKart"},"content":"package \"Command Classes\" as CommandClasses {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"    package \"Original AB3 Classes\" as OAC {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KrashKart"},"content":"    package \"CampusConnect Classes\" {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KrashKart"},"content":"        Class \"AddTagCommand\" as ATC","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KrashKart"},"content":"        Class \"CategorizeTagCommand\" as CTC","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KrashKart"},"content":"        Class \"DeleteTagCommand\" as DTC","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KrashKart"},"content":"        Class \"UndoCommand\" as UC","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Christopher Tan"},"content":"        Class \"RedoCommand\" as RC","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KrashKart"},"content":"        Class \"SuperFindCommand\" as SFC","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KrashKart"},"content":"}","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KrashKart"},"content":"HiddenOutside ..\u003e Command","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KrashKart"},"content":"ATC -u-|\u003e Command","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KrashKart"},"content":"ATC -[hidden]right CTC","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KrashKart"},"content":"CTC -u-|\u003e Command","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KrashKart"},"content":"CTC -[hidden]right DTC","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KrashKart"},"content":"DTC -u-|\u003e Command","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KrashKart"},"content":"DTC -[hidden]right UC","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KrashKart"},"content":"UC -u-|\u003e Command","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Christopher Tan"},"content":"UC -[hidden]right RC","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Christopher Tan"},"content":"RC -u-|\u003e Command","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KrashKart"},"content":"RC -[hidden]right SFC","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KrashKart"},"content":"SFC -u-|\u003e Command","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KrashKart"},"content":"OAC -u|\u003e Command","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KrashKart"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"KrashKart":39,"Christopher Tan":4}},{"path":"docs/diagrams/CommandClassesOriginal.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"KrashKart"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KrashKart"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"skinparam arrowThickness 1.1","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"skinparam arrowColor LOGIC_COLOR_T4","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"skinparam classBackgroundColor LOGIC_COLOR","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":"Class \"{abstract}\\nCommand\" as Command","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":"Class HiddenOutside #FFFFFF","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KrashKart"},"content":"package \"Original AB3 Classes\" {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KrashKart"},"content":"    Class \"AddCommand\" as AC","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KrashKart"},"content":"    Class \"ClearCommand\" as CC","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KrashKart"},"content":"    Class \"DeleteCommand\" as DC","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KrashKart"},"content":"    Class \"EditCommand\" as EdC","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KrashKart"},"content":"    Class \"ExitCommand\" as ExC","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KrashKart"},"content":"    Class \"HelpCommand\" as HC","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KrashKart"},"content":"    Class \"ListCommand\" as LC","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KrashKart"},"content":"}","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KrashKart"},"content":"HiddenOutside ..\u003e Command","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KrashKart"},"content":"AC -u-|\u003e Command","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KrashKart"},"content":"AC -[hidden]right- CC","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KrashKart"},"content":"CC -u-|\u003e Command","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KrashKart"},"content":"CC -[hidden]right- DC","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KrashKart"},"content":"DC -u-|\u003e Command","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KrashKart"},"content":"DC -[hidden]right- EdC","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KrashKart"},"content":"EdC -u-|\u003e Command","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KrashKart"},"content":"EdC -[hidden]right- ExC","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KrashKart"},"content":"ExC -u-|\u003e Command","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KrashKart"},"content":"ExC -[hidden]right- HC","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KrashKart"},"content":"HC -u-|\u003e Command","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KrashKart"},"content":"HC -[hidden]right- LC","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KrashKart"},"content":"LC -u-|\u003e Command","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KrashKart"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"KrashKart":43}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Christopher Tan"},"content":"scale 1.5","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skin rose","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ActivityFontSize 15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ArrowFontSize 12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"start","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":":User inputs and","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"executes command;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Christopher Tan"},"content":":Parse command;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"if () then ([command will modify CampusConnect])","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    :Purge undone states;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"    :Save current CampusConnect;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Christopher Tan"},"content":"    :Execute Command;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"    if () then ([command execution fails])","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"    :Recover to old version of","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"    CampusConnect;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"    else ([else])","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"    endif","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"else ([else])","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Christopher Tan"},"content":":Execute Command;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"endif","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"stop","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"CYX22222003":10,"-":12,"Christopher Tan":4}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"participant \":CampusConnectParser\" as CampusConnectParser LOGIC_COLOR","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"damithc"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"damithc"},"content":"participant \"m:Model\" as Model MODEL_COLOR","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"LogicManager -\u003e CampusConnectParser : parseCommand(\"delete 1\")","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"activate CampusConnectParser","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"CampusConnectParser -\u003e DeleteCommandParser","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"DeleteCommandParser --\u003e CampusConnectParser","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"CampusConnectParser -\u003e DeleteCommandParser : parse(\"1\")","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"damithc"},"content":"DeleteCommand --\u003e DeleteCommandParser :","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"DeleteCommandParser --\u003e CampusConnectParser : d","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"DeleteCommandParser -[hidden]-\u003e CampusConnectParser","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yooplo"},"content":"CampusConnectParser --\u003e LogicManager : d","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yooplo"},"content":"deactivate CampusConnectParser","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"damithc"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"damithc"},"content":"DeleteCommand --\u003e LogicManager : r","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"yooplo":10,"damithc":5,"-":55}},{"path":"docs/diagrams/DeleteTagSequenceDiagram.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"skinparam ArrowFontStyle plain","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"box Logic LOGIC_COLOR_T1","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"participant \":CampusConnectParser\" as CampusConnectParser LOGIC_COLOR","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"participant \":DeleteTagCommandParser\" as DeleteTagCommandParser LOGIC_COLOR","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"participant \"d:DeleteTagCommand\" as DeleteTagCommand LOGIC_COLOR","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"end box","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"box Model MODEL_COLOR_T1","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"participant \"m:Model\" as Model MODEL_COLOR","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"end box","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Christopher Tan"},"content":"[-\u003e LogicManager : execute(\"deltag 1 t/test\")","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"activate LogicManager","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Christopher Tan"},"content":"LogicManager -\u003e CampusConnectParser : parseCommand(\"deltag 1 t/test\")","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"activate CampusConnectParser","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"create DeleteTagCommandParser","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"CampusConnectParser -\u003e DeleteTagCommandParser","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"activate DeleteTagCommandParser","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommandParser --\u003e CampusConnectParser","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"deactivate DeleteTagCommandParser","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"CampusConnectParser -\u003e DeleteTagCommandParser: parse(\"1 t/test\")","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"activate DeleteTagCommandParser","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"create DeleteTagCommand","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommandParser -\u003e DeleteTagCommand","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"activate DeleteTagCommand","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommand --\u003e DeleteTagCommandParser :","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"deactivate DeleteTagCommand","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommandParser --\u003e CampusConnectParser : d","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommandParser -[hidden]-\u003e CampusConnectParser","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"destroy DeleteTagCommandParser","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"CampusConnectParser --\u003e LogicManager : d","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"deactivate CampusConnectParser","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CYX22222003"},"content":"LogicManager -\u003e DeleteTagCommand : execute(m)","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CYX22222003"},"content":"activate DeleteTagCommand","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommand -\u003e Model : getFilteredPersonList()","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CYX22222003"},"content":"activate Model","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CYX22222003"},"content":"Model --\u003e DeleteTagCommand : lastShownList","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CYX22222003"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommand -\u003e Model : get(index)","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CYX22222003"},"content":"activate Model","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CYX22222003"},"content":"Model --\u003e DeleteTagCommand : person","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CYX22222003"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommand -\u003e Model : deletePersonTag(person, tag)","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"activate Model","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CYX22222003"},"content":"Model --\u003e DeleteTagCommand","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CYX22222003"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CYX22222003"},"content":"create CommandResult","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommand -\u003e CommandResult","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CYX22222003"},"content":"activate CommandResult","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CYX22222003"},"content":"CommandResult --\u003e DeleteTagCommand : r","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CYX22222003"},"content":"deactivate CommandResult","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommand --\u003e LogicManager","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CYX22222003"},"content":"deactivate DeleteTagCommand","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CYX22222003"},"content":"[\u003c-- LogicManager","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CYX22222003"},"content":"deactivate LogicManager","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CYX22222003"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"CYX22222003":78,"Christopher Tan":2}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic as LogicPackage {","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"damithc"},"content":"package \"Parser Classes\" as ParserClasses{","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"damithc"},"content":"}","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"package \"Command Classes\" as CommandClasses{","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KrashKart"},"content":"}","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CommandResult","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class LogicManager","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Storage {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"damithc"},"content":"LogicManager -right-\u003e\"1\" ParserClasses","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KrashKart"},"content":"ParserClasses ..\u003e CommandClasses : \u003c\u003ccreate\u003e\u003e","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KrashKart"},"content":"CommandClasses -up-|\u003e Command","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"damithc"},"content":"LogicManager .left.\u003e Command : \u003c\u003ccall\u003e\u003e","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"damithc"},"content":"Command .up.\u003e CommandResult : \u003c\u003ccreate\u003e\u003e","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"damithc":5,"KrashKart":4,"-":38}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyCampusConnect\" as ReadOnlyCampusConnect","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"Class CampusConnect","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Email","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Name","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Phone","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Tag","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Christopher Tan"},"content":"Class TagManager","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Christopher Tan"},"content":"Class \"\u003c\u003cenumeration\u003e\u003e\\nTagCategory\" as TagCategory","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class I #FFFFFF","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"CampusConnect .up.|\u003e ReadOnlyCampusConnect","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"Model .left.\u003e ReadOnlyCampusConnect","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"ModelManager -left-\u003e \"1\" CampusConnect","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"CampusConnect *--\u003e \"1\" UniquePersonList","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Christopher Tan"},"content":"UniquePersonList -left-\u003e \"~* all\" Person","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Christopher Tan"},"content":"UniquePersonList --\u003e \"1\" TagManager","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Christopher Tan"},"content":"TagManager --\u003e \"~* all\" Tag","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KrashKart"},"content":"Person *--\u003e \"1\" Name","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KrashKart"},"content":"Person *--\u003e \"1\" Phone","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KrashKart"},"content":"Person *--\u003e \"1\" Email","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Christopher Tan"},"content":"Tag -left-\u003e \"1\" TagCategory","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KrashKart"},"content":"Phone -[hidden]right-\u003e Email","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"yooplo":6,"KrashKart":4,"-":40,"Christopher Tan":6}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":"package \"Command Classes\" as CommandClasses {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":"}","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"Class CampusConnectParser","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class XYZCommandParser","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class CliSyntax","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ParserUtil","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Prefix","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"HiddenOutside ..\u003e CampusConnectParser","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"CampusConnectParser .down.\u003e XYZCommandParser: \u003c\u003ccreate\u003e\u003e","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KrashKart"},"content":"XYZCommandParser ..\u003e CommandClasses : \u003c\u003ccreate\u003e\u003e","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"CampusConnectParser ..\u003e Command : \u003c\u003cuse\u003e\u003e","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KrashKart"},"content":"CommandClasses -up-|\u003e Command","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"yooplo":4,"KrashKart":4,"-":31}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"package \"CampusConnect Storage\" #F4F6F6{","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nCampusConnectStorage\" as CampusConnectStorage","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yooplo"},"content":"Class JsonCampusConnectStorage","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"Class JsonSerializableCampusConnect","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"StorageManager -up-\u003e \"1\" CampusConnectStorage","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"Storage -right-|\u003e CampusConnectStorage","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"JsonCampusConnectStorage .up.|\u003e CampusConnectStorage","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"JsonCampusConnectStorage ..\u003e JsonSerializableCampusConnect","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"JsonSerializableCampusConnect --\u003e \"*\" JsonAdaptedPerson","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"yooplo":9,"-":34}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"Class TagListPanel","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"Class TagCard","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"MainWindow *-down-\u003e \"1\" TagListPanel","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"TagListPanel -down-\u003e \"*\" TagCard","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"TagListPanel --|\u003e UiPart","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"TagCard --|\u003e UiPart","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"TagCard ..\u003e Model","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"TagListPanel -[hidden]left- HelpWindow","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yooplo"},"content":"PersonCard -[hidden]left- Model","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"yooplo":9,"-":60}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"title Initial state","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"package Future {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"package History {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"class State1 as \"\u003cu\u003ecc0:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"History -[hidden]left-\u003e Future","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","isFullCredit":false}],"authorContributionMap":{"CYX22222003":9,"-":13}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"package Future {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"package History {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    class State1 as \"\u003cu\u003ecc0:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"class State2 as \"\u003cu\u003ecc1:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"History -[hidden]left-\u003e Future","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"@end","isFullCredit":false}],"authorContributionMap":{"CYX22222003":7,"-":17}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"package Future {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"package History \u003c\u003crectangle\u003e\u003e {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    class State1 as \"\u003cu\u003ecc0:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"    class State2 as \"\u003cu\u003ecc1:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"class State3 as \"\u003cu\u003ecc2:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"History -[hidden]left-\u003e Future","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"@end","isFullCredit":false}],"authorContributionMap":{"CYX22222003":8,"-":17}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"undo\"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"package Future \u003c\u003crectangle\u003e\u003e {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"    class State3 as \"\u003cu\u003ecc2:CampusConnect\u003c/u\u003e\"\u003e\"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"package History \u003c\u003crectangle\u003e\u003e {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    class State1 as \"\u003cu\u003ecc0:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"class State2 as \"\u003cu\u003ecc1:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"History -[hidden]left-\u003e Future","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"@end","isFullCredit":false}],"authorContributionMap":{"CYX22222003":9,"-":17}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"title After command \"undo\"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"package Future \u003c\u003crectangle\u003e\u003e {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"    class State3 as \"\u003cu\u003ecc2:CampusConnect\u003c/u\u003e\"\u003e\"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"    class State1 as \"\u003cu\u003ecc1:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"package History {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"class State2 as \"\u003cu\u003ecc0:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"History -[hidden]left-\u003e Future","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"@end","isFullCredit":false}],"authorContributionMap":{"CYX22222003":11,"-":16}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"title After command \"redo\"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"package Future \u003c\u003crectangle\u003e\u003e {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"    class State3 as \"\u003cu\u003ecc2:CampusConnect\u003c/u\u003e\"\u003e\"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"package History \u003c\u003crectangle\u003e\u003e {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    class State1 as \"\u003cu\u003ecc0:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"class State2 as \"\u003cu\u003ecc1:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"History -[hidden]left-\u003e Future","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"Pointer -up-\u003e State2","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"@end","isFullCredit":false}],"authorContributionMap":{"CYX22222003":11,"-":15}},{"path":"docs/diagrams/UndoRedoState6.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"skinparam ClassFontColor #000000","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"skinparam ClassBorderColor #000000","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"skinparam ClassBackgroundColor #FFFFAA","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"title After command \"clear\"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"package Future {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"package History \u003c\u003crectangle\u003e\u003e {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"    class State1 as \"\u003cu\u003ecc0:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    class State2 as \"\u003cu\u003ecc1:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"class State3 as \"\u003cu\u003ecc3:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"History -[hidden]left-\u003e Future","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"State1 -[hidden]right-\u003e State2","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"State2 -[hidden]right-\u003e State3","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"class Pointer as \"Current State\" #FFFFFF","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"Pointer -up-\u003e State3","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"note right on link: State cc2 deleted and Future stack is cleared.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"@end","isFullCredit":false}],"authorContributionMap":{"CYX22222003":27}},{"path":"docs/diagrams/UndoSequenceDiagram-Logic.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"participant \":CampusConnectParser\" as CampusConnectParser LOGIC_COLOR","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"end box","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"LogicManager -\u003e CampusConnectParser : parseCommand(undo)","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"activate CampusConnectParser","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"CampusConnectParser -\u003e UndoCommand","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"UndoCommand --\u003e CampusConnectParser","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"CampusConnectParser --\u003e LogicManager : u","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"deactivate CampusConnectParser","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"UndoCommand -\u003e Model : undoCampusConnect()","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate UndoCommand","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"destroy UndoCommand","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"deactivate LogicManager","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"yooplo":8,"-":38}},{"path":"docs/diagrams/UndoSequenceDiagram-Model.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"damithc"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"damithc"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"damithc"},"content":"skinparam ArrowFontStyle plain","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"damithc"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"damithc"},"content":"box Model MODEL_COLOR_T1","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"damithc"},"content":"participant \":Model\" as Model MODEL_COLOR","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"participant \":CampusConnect\" as CampusConnect MODEL_COLOR","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"participant \":VersionedCampusConnect\" as VersionedCampusConnect MODEL_COLOR","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"damithc"},"content":"end box","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"damithc"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"[-\u003e Model : undoCampusConnect()","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"damithc"},"content":"activate Model","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"damithc"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"Model -\u003e CampusConnect: recoverPreviousState()","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"activate CampusConnect","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"CampusConnect -\u003e VersionedCampusConnect: extractOldData()","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"activate VersionedCampusConnect","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"VersionedCampusConnect -\u003e VersionedCampusConnect: saveCurrentData()","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"activate VersionedCampusConnect","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"damithc"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"VersionedCampusConnect --\u003e VersionedCampusConnect","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"deactivate VersionedCampusConnect","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"VersionedCampusConnect --\u003e CampusConnect:","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"deactivate VersionedCampusConnect","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"damithc"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"CampusConnect --\u003e Model: cc","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"deactivate CampusConnect","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"Model -\u003e Model: setCampusConnect(cc)","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"activate Model","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"Model --\u003e Model","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"damithc"},"content":"[\u003c-- Model","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"damithc"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"damithc"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"damithc"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"damithc":16,"yooplo":4,"CYX22222003":21}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"Participant \":CampusConnectParser\" as abp LOGIC_COLOR","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate logic","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"create ecp","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"create ec","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"ecp -\u003e ec ++: index, editPersonDescriptor","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"yooplo":1,"-":21}},{"path":"docs/index.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"# CampusConnect","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":"[![Java CI](https://github.com/AY2425S1-CS2103T-F14a-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2425S1-CS2103T-F14a-4/tp/actions)","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":"[![codecov](https://codecov.io/gh/AY2425S1-CS2103T-F14a-4/tp/graph/badge.svg?token\u003dWJ26AR9Y26)](https://codecov.io/gh/AY2425S1-CS2103T-F14a-4/tp)","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KrashKart"},"content":"\u003e \"Diversity in our university\"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KrashKart"},"content":"We believe that social interaction is the key to success in university. However, in a competitive environment with rising ","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KrashKart"},"content":"academic pressures, how can students ever find the time to remember names or contact details?","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KrashKart"},"content":"Presenting **CampusConnect**, the premium contact management app for NUS students. ","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KrashKart"},"content":"Featuring speedy finding and tagging features, **CampusConnect** is the number 1 most preferred contact management app on campus!","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KrashKart"},"content":"**More Information**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KrashKart"},"content":"* New to **CampusConnect**? Check out our [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KrashKart"},"content":"* Interested in working on **CampusConnect**? The [**Developer Guide**](DeveloperGuide.html) is a good place to start.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KrashKart"},"content":"* Like to know more about our developers? Check out the [**team behind CampusConnect**](AboutUs.md)!","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Acknowledgements**","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","isFullCredit":false}],"authorContributionMap":{"yooplo":1,"KrashKart":12,"-":15}},{"path":"docs/site.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"baseUrl\": \"\",","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Christopher Tan"},"content":"  \"titlePrefix\": \"CampusConnect\",","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"  \"faviconPath\": \"images/CampusConnectLogo.png\",","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \"style\": {","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"codeTheme\": \"light\"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"  },","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \"ignore\": [","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"_markbind/layouts/*\",","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"_markbind/logs/*\",","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"_site/*\",","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"site.json\",","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"*.md\",","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"*.njk\",","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \".git/*\",","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"node_modules/*\"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"  ],","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \"pagesExclude\": [\"node_modules/*\"],","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \"pages\": [","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \"glob\": [\"**/index.md\", \"**/*.md\"]","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  ],","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \"deploy\": {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"message\": \"Site Update.\"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  },","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"  \"timeZone\": \"Asia/Singapore\"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":1,"-":26,"Christopher Tan":1}},{"path":"docs/stylesheets/main.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"mark {","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  background-color: #ff0;","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  border-radius: 5px;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  padding-top: 0;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"  padding-bottom: 0;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":".indented {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"  padding-left: 20px;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":".theme-card img {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"  width: 100%;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/* Scrollbar */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":".slim-scroll::-webkit-scrollbar {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"  width: 5px;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":".slim-scroll::-webkit-scrollbar-thumb {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  background: #808080;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"  border-radius: 20px;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":".slim-scroll::-webkit-scrollbar-track {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"  background: transparent;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"  border-radius: 20px;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":".slim-scroll-blue::-webkit-scrollbar {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  width: 5px;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":".slim-scroll-blue::-webkit-scrollbar-thumb {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"  background: #00b0ef;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"  border-radius: 20px;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":".slim-scroll-blue::-webkit-scrollbar-track {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"  background: transparent;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"  border-radius: 20px;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"/* Layout containers */","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"#flex-body {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"  display: flex;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"  flex: 1;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"  align-items: start;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"#content-wrapper {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"  flex: 1;","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"  margin: 0 auto;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"  min-width: 0;","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"  max-width: 1000px;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"  overflow-x: auto;","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"  padding: 0.8rem 20px 0 20px;","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"  transition: 0.4s;","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"  -webkit-transition: 0.4s;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"#site-nav,","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"#page-nav {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"  display: flex;","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"  flex-direction: column;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"  position: sticky;","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"  top: var(--sticky-header-height);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"  flex: 0 0 auto;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"  max-width: 300px;","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"  max-height: calc(100vh - var(--sticky-header-height));","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"  width: 300px;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"#site-nav {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"  border-right: 1px solid lightgrey;","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"  padding-bottom: 20px;","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"  z-index: 999;","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":".site-nav-top {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"  margin: 0.8rem 0;","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"  padding: 0 12px 12px 12px;","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":".nav-component {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"  overflow-y: auto;","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"#page-nav {","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"  border-left: 1px solid lightgrey;","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"@media screen and (max-width: 1299.98px) {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"  #page-nav {","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    display: none;","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"  }","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"/* Bootstrap medium(md) responsive breakpoint */","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"@media screen and (max-width: 991.98px) {","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"  #site-nav {","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    display: none;","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"  }","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"/* Bootstrap small(sm) responsive breakpoint */","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"@media (max-width: 767.98px) {","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"  .indented {","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    padding-left: 10px;","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"  }","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"  #content-wrapper {","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    padding: 0 10px;","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"  }","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"/* Bootstrap extra small(xs) responsive breakpoint */","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"@media screen and (max-width: 575.98px) {","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"  #site-nav {","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    display: none;","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"  }","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"/* Hide site navigation when printing */","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"@media print {","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"  #site-nav {","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    display: none;","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"  }","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"  #page-nav {","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    display: none;","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"  }","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"damithc"},"content":"","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"damithc"},"content":"  /* Reduce font size when printing */","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"damithc"},"content":"  h1 {","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"damithc"},"content":"      font-size: 1.2rem !important;","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"damithc"},"content":"  }","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"damithc"},"content":"  h2 {","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"damithc"},"content":"      font-size: 1.0rem !important;","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"damithc"},"content":"  }","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"damithc"},"content":"  h3 {","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"damithc"},"content":"      font-size: 0.9rem !important;","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"damithc"},"content":"  }","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"damithc"},"content":"  h4 {","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"damithc"},"content":"      font-size: 0.8rem !important;","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"damithc"},"content":"  }","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"damithc"},"content":"  h5 {","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"damithc"},"content":"      font-size: 0.7rem !important;","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"damithc"},"content":"  }","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"damithc"},"content":"  body {","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"damithc"},"content":"      font-size: 0.65rem !important;","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"damithc"},"content":"  }","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"damithc"},"content":"  .btn {","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"damithc"},"content":"      font-size: 0.65rem !important;","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"damithc"},"content":"  }","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"damithc"},"content":"  img {","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"damithc"},"content":"      zoom: 0.8;  /* might not work on some browsers */","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"damithc"},"content":"  }","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"h2,","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"h3,","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"h4,","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"h5,","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"h6 {","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"  color: #e46c0a;","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"damithc":26,"-":144}},{"path":"docs/team/blackpanther9229.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"blackpanther9229"},"content":"---","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blackpanther9229"},"content":"  layout: default.md","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blackpanther9229"},"content":"  title: \"Nguyen\u0027s Project Portfolio Page\"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blackpanther9229"},"content":"---","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"### Project: CampusConnect","isFullCredit":false}],"authorContributionMap":{"yooplo":1,"blackpanther9229":5}},{"path":"docs/team/chrisjohntan.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KrashKart"},"content":"---","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KrashKart"},"content":"  layout: default.md","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"  title: \"Christopher\u0027s Project Portfolio Page\"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"---","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"### Project: CampusConnect","isFullCredit":false}],"authorContributionMap":{"KrashKart":6}},{"path":"docs/team/cyx22222003.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KrashKart"},"content":"---","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KrashKart"},"content":"  layout: default.md","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"  title: \"Yi Xun\u0027s Project Portfolio Page\"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"---","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"### Project: CampusConnect","isFullCredit":false}],"authorContributionMap":{"KrashKart":6}},{"path":"docs/team/justin.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yooplo"},"content":"---","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yooplo"},"content":"  layout: default.md","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yooplo"},"content":"  title: \"Justin\u0027s Project Portfolio Page\"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yooplo"},"content":"---","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"### Project: CampusConnect","isFullCredit":false}],"authorContributionMap":{"yooplo":6}},{"path":"docs/team/krashkart.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"  title: \"Zheng Jie\u0027s Project Portfolio Page\"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"### Project: CampusConnect","isFullCredit":false}],"authorContributionMap":{"yooplo":1,"KrashKart":1,"-":4}},{"path":"src/main/java/seedu/address/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"damithc"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below (if any) can be ignored.\");","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"damithc":1,"-":40}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.ReadOnlyCampusConnect;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.util.EmptyDataUtil;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"import seedu.address.storage.CampusConnectStorage;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"import seedu.address.storage.JsonCampusConnectStorage;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Christopher Tan"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 1, true);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KrashKart"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing CampusConnect ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yooplo"},"content":"        CampusConnectStorage campusConnectStorage \u003d new JsonCampusConnectStorage(userPrefs.getCampusConnectFilePath());","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"        storage \u003d new StorageManager(campusConnectStorage, userPrefsStorage);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yooplo"},"content":"        logger.info(\"Using data file : \" + storage.getCampusConnectFilePath());","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yooplo"},"content":"        Optional\u003cReadOnlyCampusConnect\u003e campusConnectOptional;","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yooplo"},"content":"        ReadOnlyCampusConnect initialData;","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yooplo"},"content":"            campusConnectOptional \u003d storage.readCampusConnect();","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yooplo"},"content":"            if (!campusConnectOptional.isPresent()) {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"KrashKart"},"content":"                logger.info(\"Creating a new data file at: \" + storage.getCampusConnectFilePath());","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"KrashKart"},"content":"            initialData \u003d campusConnectOptional.orElseGet(EmptyDataUtil::getSampleCampusConnect);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yooplo"},"content":"            logger.warning(\"Data file at \" + storage.getCampusConnectFilePath() + \" could not be loaded.\"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yooplo"},"content":"                    + \" Will be starting with an empty CampusConnect.\");","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yooplo"},"content":"            initialData \u003d new CampusConnect();","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Config initializedConfig;","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return initializedConfig;","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * reading from the file.","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return initializedPrefs;","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"KrashKart"},"content":"        logger.info(\"Starting CampusConnect \" + MainApp.VERSION);","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void stop() {","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"KrashKart"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping CampusConnect ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":14,"KrashKart":6,"-":164,"Christopher Tan":1}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"    private static final String LOG_FILE \u003d \"CampusConnect.log\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":1,"-":105}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.ReadOnlyCampusConnect;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"     * Returns the CampusConnect.","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"     * @see seedu.address.model.Model#getCampusConnect()","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"    ReadOnlyCampusConnect getCampusConnect();","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"    /** Returns a list of currently defined tags alphabetically sorted */","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"    ObservableList\u003cTag\u003e getListOfCurrentTags();","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KrashKart"},"content":"     * Returns the user prefs\u0027 CampusConnect file path.","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"    Path getCampusConnectFilePath();","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":9,"KrashKart":1,"-":44}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.ListCommand;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.logic.commands.RedoCommand;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"import seedu.address.logic.commands.SuperFindCommand;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.UndoCommand;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"import seedu.address.logic.parser.CampusConnectParser;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.ReadOnlyCampusConnect;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Model model;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Storage storage;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"    private final CampusConnectParser campusConnectParser;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.model \u003d model;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yooplo"},"content":"        campusConnectParser \u003d new CampusConnectParser();","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"        Command command \u003d campusConnectParser.parseCommand(commandText);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CYX22222003"},"content":"        if (shouldSaveCampusConnect(command)) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CYX22222003"},"content":"            model.saveCurrentCampusConnect();","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CYX22222003"},"content":"        CommandResult commandResult;","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"            commandResult \u003d command.execute(model);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"            storage.saveCampusConnect(model.getCampusConnect());","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"        } catch (CommandException e) {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"            if (!(command instanceof RedoCommand)) {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CYX22222003"},"content":"                model.undoExceptionalCommand();","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CYX22222003"},"content":"            }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CYX22222003"},"content":"            throw e;","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return commandResult;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yooplo"},"content":"    public ReadOnlyCampusConnect getCampusConnect() {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yooplo"},"content":"        return model.getCampusConnect();","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yooplo"},"content":"    public ObservableList\u003cTag\u003e getListOfCurrentTags() {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yooplo"},"content":"        return model.getListOfCurrentTags().sorted();","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yooplo"},"content":"    public Path getCampusConnectFilePath() {","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yooplo"},"content":"        return model.getCampusConnectFilePath();","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"CYX22222003"},"content":"    private boolean shouldSaveCampusConnect(Command c) {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yooplo"},"content":"        boolean isUndoCommand \u003d c instanceof UndoCommand;","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yooplo"},"content":"        boolean isRedoCommand \u003d c instanceof RedoCommand;","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yooplo"},"content":"        boolean isListCommand \u003d c instanceof ListCommand;","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yooplo"},"content":"        boolean isSuperFindCommand \u003d c instanceof SuperFindCommand;","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yooplo"},"content":"        boolean isSaveCommand \u003d !(isUndoCommand || isRedoCommand || isListCommand || isSuperFindCommand);","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yooplo"},"content":"        return isSaveCommand;","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":22,"CYX22222003":15,"-":77,"Christopher Tan":1}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_NO_TAG \u003d \"The person does not contain the tag\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_TAG_NOT_FOUND \u003d \"There is no tag presented in the command!\";","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_DELETE_TAG_SUCCESS \u003d \"Tag %1$s is deleted from student %2$s\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_ADD_TAG_EMPTY_TAGS \u003d \"Should not add empty tag to a person\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_UNDO_FAILURE \u003d \"Already at the oldest change\";","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_REDO_FAILURE \u003d \"Already at the latest change\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KrashKart"},"content":"        person.getOrderedTags().forEach(builder::append);","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return builder.toString();","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":1,"CYX22222003":6,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KrashKart"},"content":" * Adds a person to CampusConnect.","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KrashKart"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to CampusConnect. \"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KrashKart"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in CampusConnect\";","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Person toAdd;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(person);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":3,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/AddTagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blackpanther9229"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blackpanther9229"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"blackpanther9229"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blackpanther9229"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"blackpanther9229"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blackpanther9229"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blackpanther9229"},"content":"import seedu.address.commons.util.ToStringBuilder;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blackpanther9229"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blackpanther9229"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blackpanther9229"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blackpanther9229"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blackpanther9229"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blackpanther9229"},"content":"/**","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blackpanther9229"},"content":" * Add new tag(s) for an existing person","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blackpanther9229"},"content":" */","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blackpanther9229"},"content":"public class AddTagCommand extends Command {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Christopher Tan"},"content":"    public static final String COMMAND_WORD \u003d \"addtag\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KrashKart"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add tag(s) for the person identified \"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KrashKart"},"content":"            + \"by the index number used in the displayed person list\\n\"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KrashKart"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KrashKart"},"content":"            + PREFIX_TAG + \"TAG [\" + PREFIX_TAG + \"MORE_TAGS]...\\n\"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KrashKart"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_TAG + \"friend \" + PREFIX_TAG + \"owesMoney\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blackpanther9229"},"content":"    public static final String MESSAGE_ADD_TAG_SUCCESS \u003d \"Tag added: %1$s\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"blackpanther9229"},"content":"    public static final String MESSAGE_NOT_ADD \u003d \"At least one tag to be provided.\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_CONTAINS_DUPLICATE_TAG \u003d \"%1$s already contains some \"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"            + \"tags you want to add\";","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blackpanther9229"},"content":"    private final Index index;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"    private final Set\u003cTag\u003e tagSet;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"blackpanther9229"},"content":"    /**","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"     * Constructs add tag command object.","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blackpanther9229"},"content":"     */","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"    public AddTagCommand(Index index, Set\u003cTag\u003e tagSet) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"blackpanther9229"},"content":"        requireNonNull(index);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"        requireNonNull(tagSet);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"blackpanther9229"},"content":"        this.index \u003d index;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"        this.tagSet \u003d tagSet;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blackpanther9229"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blackpanther9229"},"content":"    @Override","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blackpanther9229"},"content":"    public CommandResult execute(Model model) throws CommandException {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blackpanther9229"},"content":"        assert model !\u003d null;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blackpanther9229"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blackpanther9229"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blackpanther9229"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blackpanther9229"},"content":"        }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"blackpanther9229"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CYX22222003"},"content":"        if (personToEdit.containsDuplicateTag(this.tagSet)) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CYX22222003"},"content":"            throw new CommandException(String.format(MESSAGE_CONTAINS_DUPLICATE_TAG,","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"                    Messages.format(personToEdit)));","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"        model.addPersonTags(personToEdit, this.tagSet);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KrashKart"},"content":"        // retrieve the person again for the new tags","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KrashKart"},"content":"        personToEdit \u003d model.getFilteredPersonList().get(index.getZeroBased());","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CYX22222003"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TAG_SUCCESS, Messages.format(personToEdit)));","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"blackpanther9229"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"blackpanther9229"},"content":"    @Override","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"blackpanther9229"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"blackpanther9229"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"blackpanther9229"},"content":"            return true;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"blackpanther9229"},"content":"        }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"blackpanther9229"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"blackpanther9229"},"content":"        if (!(other instanceof AddTagCommand)) {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"blackpanther9229"},"content":"            return false;","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"blackpanther9229"},"content":"        }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"blackpanther9229"},"content":"        AddTagCommand otherAddTagCommand \u003d (AddTagCommand) other;","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CYX22222003"},"content":"        return index.equals(otherAddTagCommand.index) \u0026\u0026 this.tagSet.equals(otherAddTagCommand.tagSet);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"blackpanther9229"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"blackpanther9229"},"content":"    @Override","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"blackpanther9229"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"blackpanther9229"},"content":"        return new ToStringBuilder(this)","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"blackpanther9229"},"content":"                .add(\"index\", index)","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CYX22222003"},"content":"                .add(\"tag list to add:\", tagSet)","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"blackpanther9229"},"content":"                .toString();","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"blackpanther9229"},"content":"    }","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"blackpanther9229"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":8,"CYX22222003":16,"Christopher Tan":1,"blackpanther9229":68}},{"path":"src/main/java/seedu/address/logic/commands/CategorizeTagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Christopher Tan"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Christopher Tan"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Christopher Tan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Christopher Tan"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Christopher Tan"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.tag.TagCategory;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Christopher Tan"},"content":"/**","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":" * Implements command to categorize all occurrences of specified tags.","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":" * Format: cattag t/TAG1 [t/TAG2 ... t/TAGn] CATEGORY","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Christopher Tan"},"content":" */","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Christopher Tan"},"content":"public class CategorizeTagCommand extends Command {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Christopher Tan"},"content":"    public static final String COMMAND_WORD \u003d \"cattag\";","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Christopher Tan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"            + \": Categorizes a tag. Changes all occurrences of the specified tag to the desired category.\\n\"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blackpanther9229"},"content":"            + \"Parameters: \" + PREFIX_TAG + \"TAG (existing tag label)\"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blackpanther9229"},"content":"            + \" [\" + PREFIX_TAG + \"TAG (existing tag label)]... CATEGORY\\n\"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_TAG + \"CS1101S acads\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Christopher Tan"},"content":"    public static final String MESSAGE_CAT_TAG_SUCCESS \u003d \"Category of tag(s) %1$s has been changed successfully.\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Christopher Tan"},"content":"    public static final String MESSAGE_TAG_NOT_EXIST \u003d \"Tag not found: %1$s\";","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Christopher Tan"},"content":"    public static final String MESSAGE_INVALID_CATEGORY \u003d \"Invalid category: %1$s\";","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Christopher Tan"},"content":"    public static final String MESSAGE_DUPLICATE_CATEGORY \u003d \"Current category of %s is already %s\";","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Christopher Tan"},"content":"    private final Set\u003cTag\u003e targetTags;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Christopher Tan"},"content":"    private final TagCategory updatedCategory;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Christopher Tan"},"content":"     * Constructs a command to categorize a tag.","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"    public CategorizeTagCommand(List\u003cTag\u003e targetTags, TagCategory updatedCategory) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"        requireNonNull(targetTags);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Christopher Tan"},"content":"        requireNonNull(updatedCategory);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Christopher Tan"},"content":"        this.targetTags \u003d new HashSet\u003c\u003e(targetTags);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Christopher Tan"},"content":"        this.updatedCategory \u003d updatedCategory;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Christopher Tan"},"content":"    @Override","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Christopher Tan"},"content":"    public CommandResult execute(Model model) throws CommandException {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Christopher Tan"},"content":"        assert model !\u003d null;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"        for (Tag targetTag : targetTags) {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Christopher Tan"},"content":"            if (!model.containsTag(targetTag)) {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Christopher Tan"},"content":"                throw new CommandException(String.format(MESSAGE_TAG_NOT_EXIST, targetTag));","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Christopher Tan"},"content":"            }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Christopher Tan"},"content":"            TagCategory existingCat \u003d model.getTagCategory(targetTag);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Christopher Tan"},"content":"            if (isDuplicateCategory(existingCat)) {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"                throw new CommandException(String.format(MESSAGE_DUPLICATE_CATEGORY, targetTag, updatedCategory));","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Christopher Tan"},"content":"            }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Christopher Tan"},"content":"            model.setTagsCategory(targetTag, updatedCategory);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Christopher Tan"},"content":"            model.refreshCampusConnect();","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"        }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Christopher Tan"},"content":"        String formattedTags \u003d formatTags(targetTags);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Christopher Tan"},"content":"        return new CommandResult(String.format(MESSAGE_CAT_TAG_SUCCESS, formattedTags));","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Christopher Tan"},"content":"    private boolean isDuplicateCategory(TagCategory cat) {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Christopher Tan"},"content":"        return updatedCategory.equals(cat);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Christopher Tan"},"content":"    private String formatTags(Set\u003cTag\u003e tags) {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Christopher Tan"},"content":"        String result \u003d tags.toString();","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Christopher Tan"},"content":"        return result.substring(1, result.length() - 1);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Christopher Tan"},"content":"    @Override","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Christopher Tan"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Christopher Tan"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Christopher Tan"},"content":"            return true;","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Christopher Tan"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Christopher Tan"},"content":"        if (!(other instanceof CategorizeTagCommand)) {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Christopher Tan"},"content":"            return false;","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Christopher Tan"},"content":"        CategorizeTagCommand otherCategorizeTagCommand \u003d (CategorizeTagCommand) other;","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yooplo"},"content":"        return targetTags.equals(otherCategorizeTagCommand.targetTags)","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Christopher Tan"},"content":"                \u0026\u0026 updatedCategory.equals(otherCategorizeTagCommand.updatedCategory);","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Christopher Tan"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":14,"Christopher Tan":75,"blackpanther9229":2}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":" * Clears CampusConnect","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"CampusConnect has been cleared!\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"        model.setCampusConnect(new CampusConnect());","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"            return true;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"        if (!(other instanceof ClearCommand)) {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"            return false;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"        return true;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":2,"KrashKart":1,"CYX22222003":14,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KrashKart"},"content":" * Deletes a person identified using it\u0027s displayed index from CampusConnect.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KrashKart"},"content":"    public static final String MESSAGE_DELETE_LIST_EMPTY \u003d \"\\nThe contact list is empty! :(\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KrashKart"},"content":"        String result \u003d String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete));","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KrashKart"},"content":"        if (model.getFilteredPersonList().isEmpty()) {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KrashKart"},"content":"            result +\u003d MESSAGE_DELETE_LIST_EMPTY;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KrashKart"},"content":"        }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KrashKart"},"content":"        return new CommandResult(result);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .toString();","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":9,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"/**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":" * Implements command to delete a tag from a person.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":" * format: deltag [INDEX] t/[TAG NAME].","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":" */","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"public class DeleteTagCommand extends Command {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Christopher Tan"},"content":"    public static final String COMMAND_WORD \u003d \"deltag\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"            + \": Deletes tag from the person identified by the index number used in the displayed person list.\\n\"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KrashKart"},"content":"            + \"Parameters: INDEX (must be a positive integer) t/TAG\\n\"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KrashKart"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + \"t/hello_world\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"    private final Index targetIndex;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"    private final Tag targetTag;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"     * Constructs new DeleteTag command.","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"     * @param targetIndex the index of the person in the list.","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"     * @param target the tag the user wants to delete.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"    public DeleteTagCommand(Index targetIndex, Tag target) {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"        assert targetIndex !\u003d null;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"        assert target !\u003d null;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"        this.targetIndex \u003d targetIndex;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"        this.targetTag \u003d target;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"     * Executes the command and delete a tag from a specific person.","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"    public CommandResult execute(Model model) throws CommandException {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CYX22222003"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CYX22222003"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CYX22222003"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CYX22222003"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CYX22222003"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CYX22222003"},"content":"        assert personToEdit !\u003d null;","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CYX22222003"},"content":"        if (!personToEdit.hasTag(this.targetTag)) {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CYX22222003"},"content":"            throw new CommandException(Messages.MESSAGE_NO_TAG);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CYX22222003"},"content":"        model.deletePersonTag(personToEdit, targetTag);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CYX22222003"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_DELETE_TAG_SUCCESS,","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CYX22222003"},"content":"                this.targetTag, personToEdit.getName()));","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CYX22222003"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CYX22222003"},"content":"            return true;","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CYX22222003"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CYX22222003"},"content":"        if (!(other instanceof DeleteTagCommand)) {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CYX22222003"},"content":"            return false;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CYX22222003"},"content":"        DeleteTagCommand otherDeleteTagCommand \u003d (DeleteTagCommand) other;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CYX22222003"},"content":"        return targetIndex.equals(otherDeleteTagCommand.targetIndex)","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CYX22222003"},"content":"                \u0026\u0026 targetTag.equals(otherDeleteTagCommand.targetTag);","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":2,"CYX22222003":75,"Christopher Tan":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KrashKart"},"content":" * Edits the details of an existing person in the CampusConnect.","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KrashKart"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in CampusConnect.\";","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final Index index;","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(index);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.index \u003d index;","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CYX22222003"},"content":"        model.deletePerson(personToEdit);","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CYX22222003"},"content":"        if (model.hasPerson(editedPerson)) {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CYX22222003"},"content":"            model.insertPerson(personToEdit, index.getZeroBased());","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CYX22222003"},"content":"        model.insertPerson(editedPerson, index.getZeroBased());","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"KrashKart"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedTags);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .toString();","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Name name;","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Phone phone;","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Email email;","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        /**","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * Copy constructor.","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        /**","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"KrashKart"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, tags);","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            this.name \u003d name;","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.email \u003d email;","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        /**","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        /**","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * if modification is attempted.","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"                return true;","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"                return false;","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public String toString() {","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    .toString();","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":4,"CYX22222003":5,"-":220}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting CampusConnect as requested...\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":" * Lists all persons in CampusConnect to the user.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Christopher Tan"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Christopher Tan"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Christopher Tan"},"content":"/**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Christopher Tan"},"content":" * Recovers previously undone versions of CampusConnect.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Christopher Tan"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Christopher Tan"},"content":"public class RedoCommand extends Command {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Christopher Tan"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Christopher Tan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"CampusConnect has gone back to the future!\";","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Christopher Tan"},"content":"    @Override","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"    public CommandResult execute(Model model) throws CommandException {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Christopher Tan"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Christopher Tan"},"content":"        model.redoCampusConnect();","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Christopher Tan"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Christopher Tan"},"content":"    @Override","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Christopher Tan"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Christopher Tan"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Christopher Tan"},"content":"            return true;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Christopher Tan"},"content":"        if (!(other instanceof RedoCommand)) {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Christopher Tan"},"content":"            return false;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Christopher Tan"},"content":"        return true;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Christopher Tan"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":2,"Christopher Tan":32}},{"path":"src/main/java/seedu/address/logic/commands/SuperFindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KrashKart"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":"import seedu.address.commons.util.ToStringBuilder;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.person.ContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KrashKart"},"content":"/**","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":" * Represents a command for finding persons in the CampusConnect based on specified keywords.","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":" * \u003cp\u003e","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":" * This command can filter persons according to their names, phone numbers, emails, or tags,","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":" * allowing users to search through the address book efficiently. It consolidates the functionality","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":" * of various find commands under a single command class, enabling complex search queries with","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yooplo"},"content":" * multiple keywords prefixed by their respective categories.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":" * \u003c/p\u003e","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":" *","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":" * \u003cp\u003e","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":" * The command utilizes a {@code ContainsKeywordsPredicate} to determine which persons match the","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":" * specified criteria. If no matching persons are found, a message is returned indicating the","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":" * failure to find any persons that match the search.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":" * \u003c/p\u003e","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":" *","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":" * \u003cp\u003e","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":" * This command follows the command pattern and extends the {@code Command} class.","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":" * \u003c/p\u003e","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KrashKart"},"content":" */","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"public class SuperFindCommand extends Command {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KrashKart"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KrashKart"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names, phone numbers, emails \"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KrashKart"},"content":"            + \"or tags contain any of the specified keywords (case-insensitive) and displays \"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KrashKart"},"content":"            + \"them as a list with indices.\\n\"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KrashKart"},"content":"            + \"Parameters: PREFIX/KEYWORD [PREFIX/MORE_KEYWORDS]...\\n\"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KrashKart"},"content":"            + \"Examples:\\n\"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KrashKart"},"content":"            + COMMAND_WORD + \" \" + PREFIX_NAME + \"alice \" + PREFIX_PHONE + \"80021234 \" + PREFIX_TAG + \"CS1101S\";","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KrashKart"},"content":"    public static final String MESSAGE_NO_PERSONS_FOUND \u003d \"No persons found!\";","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KrashKart"},"content":"    private final ContainsKeywordsPredicate predicate;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yooplo"},"content":"     * Constructs a {@code SuperFindCommand} with the specified predicate.","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"     * @param predicate The predicate to filter the list of persons.","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"    public SuperFindCommand(ContainsKeywordsPredicate predicate) {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yooplo"},"content":"        this.predicate \u003d requireNonNull(predicate, \"Predicate cannot be null\");","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"     * Retrieves the predicate for this command.","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yooplo"},"content":"     * @return The predicate used to filter persons.","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KrashKart"},"content":"    protected ContainsKeywordsPredicate getPredicate() {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KrashKart"},"content":"        return this.predicate;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yooplo"},"content":"     * Executes the command, filtering the list of persons based on the predicate.","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yooplo"},"content":"     * @param model The model to operate on.","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yooplo"},"content":"     * @return The result of the command execution.","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KrashKart"},"content":"    @Override","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KrashKart"},"content":"    public CommandResult execute(Model model) {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yooplo"},"content":"        requireNonNull(model, \"Model cannot be null\");","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KrashKart"},"content":"        model.updateFilteredPersonList(this.predicate);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yooplo"},"content":"        // If the resulting filtered list is empty","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KrashKart"},"content":"        if (model.getFilteredPersonList().isEmpty()) {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KrashKart"},"content":"            return new CommandResult(MESSAGE_NO_PERSONS_FOUND);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KrashKart"},"content":"        }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"KrashKart"},"content":"        return new CommandResult(","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"KrashKart"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yooplo"},"content":"     * Checks if this command is equal to another object.","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yooplo"},"content":"     * @param other The object to compare with this command.","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yooplo"},"content":"     * @return True if the other object is the same type and has the same predicate; false otherwise.","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yooplo"},"content":"    @Override","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yooplo"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yooplo"},"content":"        if (this \u003d\u003d other) {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yooplo"},"content":"            return true; // Check for reference equality","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yooplo"},"content":"        }","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yooplo"},"content":"        if (!(other instanceof SuperFindCommand)) {","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yooplo"},"content":"            return false; // Ensure the other object is of the same type","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yooplo"},"content":"        }","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand otherCommand \u003d (SuperFindCommand) other;","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yooplo"},"content":"        return this.predicate.equals(otherCommand.predicate); // Compare predicates","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yooplo"},"content":"     * Returns a string representation of this command.","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yooplo"},"content":"     * @return A string representation of the command state.","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"KrashKart"},"content":"    @Override","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"KrashKart"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"KrashKart"},"content":"        return new ToStringBuilder(this)","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"KrashKart"},"content":"                .add(\"predicate\", this.predicate)","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"KrashKart"},"content":"                .toString();","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"KrashKart"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":64,"KrashKart":53}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"/**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":" * Recovers the previous version of CampusConnect.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"public class UndoCommand extends Command {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KrashKart"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The previous command has been undone!\";","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"    public CommandResult execute(Model model) throws CommandException {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"        model.undoCampusConnect();","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"            return true;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"        if (!(other instanceof UndoCommand)) {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"            return false;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"        return true;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":1,"CYX22222003":33}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":" * Represents an error which occurs during execution of a Command.","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":1,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KrashKart"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KrashKart"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL)","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KrashKart"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KrashKart"},"content":"        Person person \u003d new Person(name, phone, email, tagList);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":4,"-":54}},{"path":"src/main/java/seedu/address/logic/parser/AddTagCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blackpanther9229"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"blackpanther9229"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.Messages.MESSAGE_ADD_TAG_EMPTY_TAGS;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"blackpanther9229"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.AddTagCommand.MESSAGE_NOT_ADD;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.AddTagCommand.MESSAGE_USAGE;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"blackpanther9229"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"blackpanther9229"},"content":"import java.util.Collection;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"blackpanther9229"},"content":"import java.util.Optional;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blackpanther9229"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"blackpanther9229"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"blackpanther9229"},"content":"import seedu.address.logic.commands.AddTagCommand;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"blackpanther9229"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blackpanther9229"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"blackpanther9229"},"content":"/**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"blackpanther9229"},"content":" * Parses input arguments and creates a new AddTagCommand object","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"blackpanther9229"},"content":" */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"blackpanther9229"},"content":"public class AddTagCommandParser implements Parser\u003cAddTagCommand\u003e {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"blackpanther9229"},"content":"    /**","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"blackpanther9229"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTagCommand","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"blackpanther9229"},"content":"     * and returns an AddTagCommand object for execution.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"blackpanther9229"},"content":"     * @throws ParseException if the user input does not conform the expected format","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blackpanther9229"},"content":"     */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"blackpanther9229"},"content":"    public AddTagCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"blackpanther9229"},"content":"        requireNonNull(args);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KrashKart"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blackpanther9229"},"content":"        Index index;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"blackpanther9229"},"content":"        try {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"blackpanther9229"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"blackpanther9229"},"content":"        } catch (ParseException pe) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE), pe);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"blackpanther9229"},"content":"        }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"        Optional\u003cSet\u003cTag\u003e\u003e op \u003d","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"                parseTagsToAdd(argMultimap.getAllValues(PREFIX_TAG));","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"        if (op.isEmpty()) {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"            throw new ParseException(MESSAGE_NOT_ADD);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CYX22222003"},"content":"        return new AddTagCommand(index, op.get());","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"blackpanther9229"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"blackpanther9229"},"content":"    /**","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"blackpanther9229"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"blackpanther9229"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"blackpanther9229"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"blackpanther9229"},"content":"     */","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"blackpanther9229"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsToAdd(Collection\u003cString\u003e tags) throws ParseException {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"blackpanther9229"},"content":"        assert tags !\u003d null;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"blackpanther9229"},"content":"        if (tags.isEmpty()) {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"blackpanther9229"},"content":"            return Optional.empty();","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"blackpanther9229"},"content":"        }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"        if (tags.contains(\"\")) {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_ADD_TAG_EMPTY_TAGS));","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CYX22222003"},"content":"        return Optional.of(ParserUtil.parseTags(tags));","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"blackpanther9229"},"content":"    }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"blackpanther9229"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":1,"CYX22222003":16,"blackpanther9229":51}},{"path":"src/main/java/seedu/address/logic/parser/CampusConnectParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"blackpanther9229"},"content":"import seedu.address.logic.commands.AddTagCommand;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.logic.commands.CategorizeTagCommand;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.logic.commands.RedoCommand;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"import seedu.address.logic.commands.SuperFindCommand;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.logic.commands.UndoCommand;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"public class CampusConnectParser {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CampusConnectParser.class);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        switch (commandWord) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"blackpanther9229"},"content":"        case AddTagCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"blackpanther9229"},"content":"            return new AddTagCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ClearCommand();","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yooplo"},"content":"        case SuperFindCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ListCommand();","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ExitCommand();","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new HelpCommand();","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CYX22222003"},"content":"        case DeleteTagCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CYX22222003"},"content":"            return new DeleteTagCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Christopher Tan"},"content":"        case CategorizeTagCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Christopher Tan"},"content":"            return new CategorizeTagCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CYX22222003"},"content":"        case UndoCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CYX22222003"},"content":"            return new UndoCommand();","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Christopher Tan"},"content":"        case RedoCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Christopher Tan"},"content":"            return new RedoCommand();","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        default:","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":4,"KrashKart":1,"CYX22222003":6,"-":82,"Christopher Tan":10,"blackpanther9229":4}},{"path":"src/main/java/seedu/address/logic/parser/CategorizeTagCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Christopher Tan"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Christopher Tan"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Christopher Tan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Christopher Tan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.logic.commands.CategorizeTagCommand;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.tag.TagCategory;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Christopher Tan"},"content":"/**","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":" * Parses input arguments and returns a new CategorizeTagCommand object.","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Christopher Tan"},"content":" */","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Christopher Tan"},"content":"public class CategorizeTagCommandParser implements Parser\u003cCategorizeTagCommand\u003e {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"    private static final String CATEGORY_GENERAL \u003d \"general\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"    private static final String CATEGORY_ACADEMICS \u003d \"acads\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"    private static final String CATEGORY_ACTIVITIES \u003d \"activity\";","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Christopher Tan"},"content":"    private static final String CATEGORY_NETWORKING \u003d \"network\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"    private static final String CATEGORY_MENTORSHIP \u003d \"mentor\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Christopher Tan"},"content":"     * Parses the given {@code String} of arguments in the context of the CategorizeTagCommand","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"     * and returns a CategorizeTagCommand object for execution.","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"     * @param args The input arguments as a string.","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":"     * @return A CategorizeTagCommand object for execution.","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Christopher Tan"},"content":"    public CategorizeTagCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Christopher Tan"},"content":"        requireNonNull(args);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Christopher Tan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"        List\u003cString\u003e parsedArgs \u003d argMultimap.getAllValues(PREFIX_TAG);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Christopher Tan"},"content":"        if (parsedArgs.isEmpty()) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Christopher Tan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CategorizeTagCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yooplo"},"content":"        String[] parsedArgsArray \u003d getStringsArray(parsedArgs);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yooplo"},"content":"        List\u003cTag\u003e tags \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yooplo"},"content":"        for (int i \u003d 0; i \u003c parsedArgsArray.length - 1; i++) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yooplo"},"content":"            tags.add(ParserUtil.parseTag(parsedArgsArray[i]));","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"        }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"        TagCategory category \u003d parseCategory(parsedArgsArray[parsedArgsArray.length - 1]);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"        return new CategorizeTagCommand(tags, category);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"    private String[] getStringsArray(List\u003cString\u003e parsedArgs) throws ParseException {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"        String[] argsArray \u003d parsedArgs.toArray(String[]::new);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yooplo"},"content":"        String[] lastTagAndCategory \u003d argsArray[argsArray.length - 1].split(\"\\\\s+\");","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"        if (lastTagAndCategory.length \u003c 2) { // ensure at least one tag is provided","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Christopher Tan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CategorizeTagCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yooplo"},"content":"        String[] allTagsAndCategory \u003d new String[argsArray.length + 1];","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yooplo"},"content":"        System.arraycopy(argsArray, 0, allTagsAndCategory, 0, argsArray.length - 1);","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yooplo"},"content":"        allTagsAndCategory[allTagsAndCategory.length - 2] \u003d lastTagAndCategory[0];","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yooplo"},"content":"        allTagsAndCategory[allTagsAndCategory.length - 1] \u003d lastTagAndCategory[1];","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yooplo"},"content":"        return allTagsAndCategory;","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yooplo"},"content":"     * Parses the given category string and returns the corresponding TagCategory.","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yooplo"},"content":"     * @param category The category string to parse.","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yooplo"},"content":"     * @return The corresponding TagCategory.","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yooplo"},"content":"     * @throws ParseException if the category is invalid.","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yooplo"},"content":"    private TagCategory parseCategory(String category) throws ParseException {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yooplo"},"content":"        switch (category) {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yooplo"},"content":"        case CATEGORY_GENERAL:","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Christopher Tan"},"content":"            return TagCategory.GENERAL;","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yooplo"},"content":"        case CATEGORY_ACADEMICS:","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Christopher Tan"},"content":"            return TagCategory.ACADEMICS;","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yooplo"},"content":"        case CATEGORY_ACTIVITIES:","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Christopher Tan"},"content":"            return TagCategory.ACTIVITIES;","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yooplo"},"content":"        case CATEGORY_NETWORKING:","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Christopher Tan"},"content":"            return TagCategory.NETWORKING;","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yooplo"},"content":"        case CATEGORY_MENTORSHIP:","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Christopher Tan"},"content":"            return TagCategory.MENTORSHIP;","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Christopher Tan"},"content":"        default:","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yooplo"},"content":"            throw new ParseException(String.format(CategorizeTagCommand.MESSAGE_INVALID_CATEGORY, category));","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Christopher Tan"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":56,"Christopher Tan":39}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTagCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.Messages.MESSAGE_TAG_NOT_FOUND;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.commands.DeleteTagCommand.MESSAGE_USAGE;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"/**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":" * Parses the delete tag command.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":" */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"public class DeleteTagCommandParser implements Parser\u003cDeleteTagCommand\u003e {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"     * Parses the given string of arguments in the context of delete tag command.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"     * and returns DeleteTagCommand object for execution.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"     * @throws ParseException if user input does not conform the expected input","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"    public DeleteTagCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"        requireNonNull(args);","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"        ArgumentMultimap argMultiMap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"        Index index;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"        try {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"            index \u003d ParserUtil.parseIndex(argMultiMap.getPreamble());","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"        } catch (ParseException pe) {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KrashKart"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE), pe);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"        argMultiMap.verifyNoDuplicatePrefixesFor(PREFIX_TAG);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"        if (argMultiMap.getValue(PREFIX_TAG).isEmpty()) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"            throw new ParseException(MESSAGE_TAG_NOT_FOUND);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"        Tag target \u003d ParserUtil.parseTag(argMultiMap.getValue(PREFIX_TAG).get());","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"        return new DeleteTagCommand(index, target);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":3,"CYX22222003":40}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KrashKart"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Index index;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KrashKart"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return Optional.empty();","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":2,"-":79}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"import java.util.function.Predicate;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"import seedu.address.logic.commands.SuperFindCommand;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.person.CombinedContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.person.ContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":" * Parses input arguments for the find command and constructs a new {@code SuperFindCommand} object.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":" * \u003cp\u003e","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":" * This class processes user input to extract keywords associated with different attributes of a person,","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":" * such as names, phone numbers, emails, and tags. It tokenizes the input arguments based on predefined","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":" * prefixes and builds a list of predicates used to filter persons in the address book.","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":" * \u003c/p\u003e","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":" *","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":" * \u003cp\u003e","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":" * The parser creates a {@code CombinedContainsKeywordsPredicate} that combines all individual predicates, allowing","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":" * for complex search queries. If no valid predicates are constructed from the input, a {@code ParseException}","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":" * is thrown to indicate an invalid command format.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":" * \u003c/p\u003e","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":" *","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":" * \u003cp\u003e","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":" * This class follows the parser pattern used in the logic layer of the application and is responsible for ensuring","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":" * that input is validated and correctly interpreted before creating command objects.","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":" * \u003c/p\u003e","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"public class FindCommandParser implements Parser\u003cSuperFindCommand\u003e {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"     * Parses the given arguments for find command and returns a {@code SuperFindCommand}.","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yooplo"},"content":"     * @param args The input arguments for the command.","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yooplo"},"content":"     * @throws ParseException if the arguments format is invalid.","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"    @Override","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"    public SuperFindCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"        requireNonNull(args, \"Arguments cannot be null.\");","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"        ArgumentMultimap argMultimap \u003d tokenizeArguments(args);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d buildPredicates(argMultimap);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"        if (predicates.isEmpty()) {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SuperFindCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"        ContainsKeywordsPredicate combinedPredicate \u003d new CombinedContainsKeywordsPredicate(predicates);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"        return new SuperFindCommand(combinedPredicate);","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yooplo"},"content":"     * Tokenizes the input arguments into an {@code ArgumentMultimap}.","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yooplo"},"content":"     * @param args The input arguments.","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yooplo"},"content":"     * @return The tokenized arguments.","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yooplo"},"content":"    private ArgumentMultimap tokenizeArguments(String args) {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yooplo"},"content":"        return ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG);","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yooplo"},"content":"     * Builds a list of predicates based on the tokenized input arguments.","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yooplo"},"content":"     * @param argMultimap The tokenized input arguments.","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yooplo"},"content":"     * @return A list of predicates for filtering persons.","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yooplo"},"content":"    private List\u003cPredicate\u003cPerson\u003e\u003e buildPredicates(ArgumentMultimap argMultimap) {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yooplo"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yooplo"},"content":"        buildNamePredicates(argMultimap, predicates);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yooplo"},"content":"        buildPhonePredicates(argMultimap, predicates);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yooplo"},"content":"        buildEmailPredicates(argMultimap, predicates);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yooplo"},"content":"        buildTagPredicates(argMultimap, predicates);","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yooplo"},"content":"        return predicates;","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yooplo"},"content":"    private void buildNamePredicates(ArgumentMultimap argMultimap, List\u003cPredicate\u003cPerson\u003e\u003e predicates) {","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yooplo"},"content":"        argMultimap.getValue(PREFIX_NAME)","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yooplo"},"content":"                .ifPresent(values -\u003e predicates.add(","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yooplo"},"content":"                        new NameContainsKeywordsPredicate(argMultimap.getAllValues(PREFIX_NAME))));","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yooplo"},"content":"    private void buildPhonePredicates(ArgumentMultimap argMultimap, List\u003cPredicate\u003cPerson\u003e\u003e predicates) {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yooplo"},"content":"        argMultimap.getValue(PREFIX_PHONE)","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yooplo"},"content":"                .ifPresent(values -\u003e predicates.add(","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yooplo"},"content":"                        new PhoneContainsKeywordsPredicate(argMultimap.getAllValues(PREFIX_PHONE))));","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yooplo"},"content":"    private void buildEmailPredicates(ArgumentMultimap argMultimap, List\u003cPredicate\u003cPerson\u003e\u003e predicates) {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yooplo"},"content":"        argMultimap.getValue(PREFIX_EMAIL)","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yooplo"},"content":"                .ifPresent(values -\u003e predicates.add(","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yooplo"},"content":"                        new EmailContainsKeywordsPredicate(argMultimap.getAllValues(PREFIX_EMAIL))));","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yooplo"},"content":"    private void buildTagPredicates(ArgumentMultimap argMultimap, List\u003cPredicate\u003cPerson\u003e\u003e predicates) {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yooplo"},"content":"        argMultimap.getValue(PREFIX_TAG)","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yooplo"},"content":"                .ifPresent(values -\u003e predicates.add(","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yooplo"},"content":"                        new TagContainsKeywordsPredicate(argMultimap.getAllValues(PREFIX_TAG))));","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":83,"KrashKart":11,"-":19}},{"path":"src/main/java/seedu/address/model/CampusConnect.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.exceptions.RedoException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.exceptions.UndoException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.tag.TagCategory;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":" * Wraps all data at the CampusConnect level.","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":" * Duplicates are not allowed.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"public class CampusConnect implements ReadOnlyCampusConnect {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"    private final VersionedCampusConnect versionedCampusConnect \u003d new VersionedCampusConnect();","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /*","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *   among constructors.","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"    public CampusConnect() {}","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"     * Creates an CampusConnect using the Persons in the {@code toBeCopied}","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"    public CampusConnect(ReadOnlyCampusConnect toBeCopied) {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CYX22222003"},"content":"     * Stores the current states of the CampusConnect.","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CYX22222003"},"content":"    public void saveCurrentState() {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect newCampusConnect \u003d new CampusConnect(this);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CYX22222003"},"content":"        versionedCampusConnect.saveOldData(newCampusConnect);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CYX22222003"},"content":"        versionedCampusConnect.clearUndoneData();","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CYX22222003"},"content":"     * Recovers from previous state.","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"    public ReadOnlyCampusConnect recoverPreviousState() throws UndoException {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect out \u003d versionedCampusConnect.extractOldData();","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"        versionedCampusConnect.saveCurrentData(new CampusConnect(this));","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Christopher Tan"},"content":"        return out;","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CYX22222003"},"content":"     * Recovers the previously undone state.","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CYX22222003"},"content":"    public ReadOnlyCampusConnect recoverUndoneState() throws RedoException {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect out \u003d versionedCampusConnect.extractUndoneData();","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CYX22222003"},"content":"        versionedCampusConnect.saveOldData(new CampusConnect(this));","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CYX22222003"},"content":"        return out;","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CYX22222003"},"content":"    public ReadOnlyCampusConnect recoverStateWithoutSaving() throws UndoException {","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CYX22222003"},"content":"        return versionedCampusConnect.extractOldData();","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yooplo"},"content":"     * Resets the existing data of this {@code CampusConnect} with {@code newData}.","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yooplo"},"content":"    public void resetData(ReadOnlyCampusConnect newData) {","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// person-level operations","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(person);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return persons.contains(person);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        persons.add(p);","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"CYX22222003"},"content":"     * Adds a person to the specific position of the CampusConnect.","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"CYX22222003"},"content":"     *","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CYX22222003"},"content":"    public void addPerson(Person p, int ind) {","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CYX22222003"},"content":"        persons.add(ind, p);","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"KrashKart"},"content":"     * {@code target} must exist in CampusConnect.","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"CYX22222003"},"content":"     * The person identity of {@code editedPerson} must not be the same as","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"KrashKart"},"content":"     * another existing person in CampusConnect.","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yooplo"},"content":"     * Removes {@code key} from this {@code CampusConnect}.","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"KrashKart"},"content":"     * {@code key} must exist in CampusConnect","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        persons.remove(key);","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"CYX22222003"},"content":"     * Deletes a tag from a person.","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"CYX22222003"},"content":"    public void removePersonTag(Person p, Tag t) {","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"CYX22222003"},"content":"        persons.deletePersonTag(p, t);","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"CYX22222003"},"content":"     * Adds a new Tag to a person.","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"Christopher Tan"},"content":"    public void addPersonTags(Person p, Set\u003cTag\u003e tagList) {","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"CYX22222003"},"content":"        persons.addPersonTags(p, tagList);","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Christopher Tan"},"content":"     * Gets the recorded {@code TagCategory} of {@Tag t}.","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Christopher Tan"},"content":"    public TagCategory getTagCategory(Tag t) {","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Christopher Tan"},"content":"        return persons.getTagCategory(t);","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    //// util methods","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"                .toString();","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"yooplo"},"content":"    @Override","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"yooplo"},"content":"    public ObservableList\u003cTag\u003e getTagList() {","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"yooplo"},"content":"        return persons.asTagList();","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Christopher Tan"},"content":"    public void setTagCategory(Tag t, TagCategory cat) {","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Christopher Tan"},"content":"        persons.updateTagCategory(t, cat);","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"yooplo"},"content":"        if (!(other instanceof CampusConnect otherCampusConnect)) {","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"yooplo"},"content":"        return persons.equals(otherCampusConnect.persons);","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return persons.hashCode();","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":14,"KrashKart":3,"CYX22222003":56,"-":113,"Christopher Tan":18}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.tag.TagCategory;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yooplo"},"content":"    Path getCampusConnectFilePath();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yooplo"},"content":"    void setCampusConnectFilePath(Path campusConnectFilePath);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"     * Replaces address book data with the data in {@code campusConnect}.","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"    void setCampusConnect(ReadOnlyCampusConnect campusConnect);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"    /** Returns the CampusConnect */","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"    ReadOnlyCampusConnect getCampusConnect();","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Christopher Tan"},"content":"     * Refreshes the current data in CampusConnect.","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Christopher Tan"},"content":"    void refreshCampusConnect();","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Deletes the given person.","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CYX22222003"},"content":"     * Deletes a tag from a person.","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CYX22222003"},"content":"     * The person must exist as well as the tag.","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CYX22222003"},"content":"    void deletePersonTag(Person p, Tag tag);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CYX22222003"},"content":"     * Adds a set of tag to person.","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Christopher Tan"},"content":"    void addPersonTags(Person p, Set\u003cTag\u003et);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Adds the given person.","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CYX22222003"},"content":"     * Inserts person at the specific position.","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CYX22222003"},"content":"    void insertPerson(Person p, int ind);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yooplo"},"content":"     * Returns a list of tags currently defined in CampusConnect","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yooplo"},"content":"    ObservableList\u003cTag\u003e getListOfCurrentTags();","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Christopher Tan"},"content":"     * Returns true if the specified {@code Tag} exists in CampusConnect","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Christopher Tan"},"content":"    boolean containsTag(Tag tag);","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Christopher Tan"},"content":"     * Sets {@code TagCategory cat} to be the category of {@code Tag t}.","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Christopher Tan"},"content":"    void setTagsCategory(Tag t, TagCategory cat);","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Christopher Tan"},"content":"     * Gets the recorded {@code TagCategory} of {@Tag t}.","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Christopher Tan"},"content":"    TagCategory getTagCategory(Tag t);","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"CYX22222003"},"content":"     * Undoes the previous actions of users.","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"CYX22222003"},"content":"    void undoCampusConnect() throws CommandException;","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"CYX22222003"},"content":"     * Restores state before previous undo actions of users.","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"CYX22222003"},"content":"    void redoCampusConnect() throws CommandException;","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"CYX22222003"},"content":"     * Saves current state of model before execution.","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"CYX22222003"},"content":"    void saveCurrentCampusConnect();","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"CYX22222003"},"content":"     * Undoes a state without saving current state when execution fails.","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"CYX22222003"},"content":"    void undoExceptionalCommand() throws CommandException;","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":11,"CYX22222003":35,"-":82,"Christopher Tan":24}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"import javafx.collections.FXCollections;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.tag.TagCategory;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"    private final CampusConnect campusConnect;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":"    private final ObservableList\u003cTag\u003e currentlyDefinedTags;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"     * Initializes a ModelManager with the given campusConnect and userPrefs.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"    public ModelManager(ReadOnlyCampusConnect campusConnect, ReadOnlyUserPrefs userPrefs) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"        requireAllNonNull(campusConnect, userPrefs);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KrashKart"},"content":"        logger.fine(\"Initializing CampusConnect: \" + campusConnect + \" and user prefs \" + userPrefs);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"        this.campusConnect \u003d new CampusConnect(campusConnect);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"        this.filteredPersons \u003d new FilteredList\u003c\u003e(this.campusConnect.getPersonList());","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yooplo"},"content":"        this.currentlyDefinedTags \u003d FXCollections.observableArrayList();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yooplo"},"content":"        this(new CampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yooplo"},"content":"    public Path getCampusConnectFilePath() {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yooplo"},"content":"        return userPrefs.getCampusConnectFilePath();","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yooplo"},"content":"    public void setCampusConnectFilePath(Path campusConnectFilePath) {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yooplo"},"content":"        requireNonNull(campusConnectFilePath);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yooplo"},"content":"        userPrefs.setCampusConnectFilePath(campusConnectFilePath);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yooplo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CampusConnect \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yooplo"},"content":"    public void setCampusConnect(ReadOnlyCampusConnect campusConnect) {","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yooplo"},"content":"        this.campusConnect.resetData(campusConnect);","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yooplo"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yooplo"},"content":"    public ReadOnlyCampusConnect getCampusConnect() {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yooplo"},"content":"        return campusConnect;","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Christopher Tan"},"content":"    public void refreshCampusConnect() {","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Christopher Tan"},"content":"        this.setCampusConnect(campusConnect);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(person);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yooplo"},"content":"        return campusConnect.hasPerson(person);","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yooplo"},"content":"        campusConnect.removePerson(target);","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yooplo"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CYX22222003"},"content":"    public void deletePersonTag(Person p, Tag t) {","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CYX22222003"},"content":"        campusConnect.removePersonTag(p, t);","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"CYX22222003"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Christopher Tan"},"content":"    public void addPersonTags(Person p, Set\u003cTag\u003e t) {","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"CYX22222003"},"content":"        campusConnect.addPersonTags(p, t);","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"CYX22222003"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yooplo"},"content":"        campusConnect.addPerson(person);","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yooplo"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"CYX22222003"},"content":"    public void insertPerson(Person p, int ind) {","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"CYX22222003"},"content":"        campusConnect.addPerson(p, ind);","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"CYX22222003"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yooplo"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yooplo"},"content":"        campusConnect.setPerson(target, editedPerson);","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yooplo"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yooplo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return filteredPersons;","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yooplo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Tag List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yooplo"},"content":"     * Refreshes and returns an unmodifiable view of the list of tags currently in CampusConnect","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yooplo"},"content":"    private void refreshTagList() {","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yooplo"},"content":"        currentlyDefinedTags.setAll(campusConnect.getTagList()); // Assume getAllTags aggregates unique tags","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yooplo"},"content":"    public ObservableList\u003cTag\u003e getListOfCurrentTags() {","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"yooplo"},"content":"        return FXCollections.unmodifiableObservableList(currentlyDefinedTags);","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Christopher Tan"},"content":"    @Override","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Christopher Tan"},"content":"    public boolean containsTag(Tag t) {","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Christopher Tan"},"content":"        requireAllNonNull(t);","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Christopher Tan"},"content":"        return currentlyDefinedTags.contains(t);","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Christopher Tan"},"content":"    @Override","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Christopher Tan"},"content":"    public void setTagsCategory(Tag t, TagCategory cat) {","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Christopher Tan"},"content":"        requireAllNonNull(t, cat);","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"Christopher Tan"},"content":"        campusConnect.setTagCategory(t, cat);","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"Christopher Tan"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Christopher Tan"},"content":"    @Override","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Christopher Tan"},"content":"    public TagCategory getTagCategory(Tag t) {","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Christopher Tan"},"content":"        requireNonNull(t);","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Christopher Tan"},"content":"        return campusConnect.getTagCategory(t);","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"yooplo"},"content":"        return campusConnect.equals(otherModelManager.campusConnect)","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"yooplo"},"content":"    @Override","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"yooplo"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"yooplo"},"content":"        // Hash based on essential components of the model manager","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"yooplo"},"content":"        return campusConnect.hashCode() + userPrefs.hashCode() + filteredPersons.hashCode();","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"CYX22222003"},"content":"    public void undoCampusConnect() throws CommandException {","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect newCampusConnect \u003d campusConnect.recoverPreviousState();","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"CYX22222003"},"content":"        this.setCampusConnect(newCampusConnect);","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"Christopher Tan"},"content":"    @Override","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"CYX22222003"},"content":"    public void redoCampusConnect() throws CommandException {","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"Christopher Tan"},"content":"        ReadOnlyCampusConnect newCampusConnect \u003d campusConnect.recoverUndoneState();","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"Christopher Tan"},"content":"        this.setCampusConnect(newCampusConnect);","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"CYX22222003"},"content":"    public void saveCurrentCampusConnect() {","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"CYX22222003"},"content":"        campusConnect.saveCurrentState();","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"CYX22222003"},"content":"    public void undoExceptionalCommand() throws CommandException {","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect cc \u003d campusConnect.recoverStateWithoutSaving();","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"CYX22222003"},"content":"        this.setCampusConnect(cc);","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false}],"authorContributionMap":{"yooplo":50,"KrashKart":1,"CYX22222003":34,"-":128,"Christopher Tan":28}},{"path":"src/main/java/seedu/address/model/ReadOnlyCampusConnect.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":"public interface ReadOnlyCampusConnect {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yooplo"},"content":"     * Returns a list of persons as a list of strings representing their tags.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"    ObservableList\u003cTag\u003e getTagList();","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":7,"-":16}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"    Path getCampusConnectFilePath();","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":1,"-":15}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"    private Path campusConnectFilePath \u003d Paths.get(\"data\" , \"campusConnect.json\");","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"        setCampusConnectFilePath(newUserPrefs.getCampusConnectFilePath());","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"    public Path getCampusConnectFilePath() {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"        return campusConnectFilePath;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"    public void setCampusConnectFilePath(Path campusConnectFilePath) {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"        requireNonNull(campusConnectFilePath);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"        this.campusConnectFilePath \u003d campusConnectFilePath;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yooplo"},"content":"                \u0026\u0026 campusConnectFilePath.equals(otherUserPrefs.campusConnectFilePath);","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yooplo"},"content":"        return Objects.hash(guiSettings, campusConnectFilePath);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yooplo"},"content":"        sb.append(\"\\nLocal data file location : \" + campusConnectFilePath);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":10,"-":78}},{"path":"src/main/java/seedu/address/model/VersionedCampusConnect.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.Messages.MESSAGE_REDO_FAILURE;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNDO_FAILURE;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"import java.util.Stack;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.exceptions.RedoException;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.exceptions.UndoException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"/**","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":" * Class to store past and undone CampusConnect data.","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":" */","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"public class VersionedCampusConnect {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"    private final Stack\u003cReadOnlyCampusConnect\u003e history \u003d new Stack\u003c\u003e();","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"    private final Stack\u003cReadOnlyCampusConnect\u003e future \u003d new Stack\u003c\u003e();","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"     * Extracts CampusConnect snapshots that have been undone.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"     *","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"     * @return data in forms of ReadOnlyCampusConnect.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"     * @throws RedoException when future stack is empty.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"    public ReadOnlyCampusConnect extractUndoneData() throws RedoException {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"        if (future.isEmpty()) {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"            throw new RedoException(MESSAGE_REDO_FAILURE);","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"        return future.pop();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"     * Extracts history data.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"     *","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"     * @return Old version of data in the form of ReadOnlyCampusConnect.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"     * @throws UndoException when the storage is empty.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"    public ReadOnlyCampusConnect extractOldData() throws UndoException {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"        if (history.isEmpty()) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"            throw new UndoException(MESSAGE_UNDO_FAILURE);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"        return history.pop();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"     * Saves history data into history stack.","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CYX22222003"},"content":"     * Data should not be null.","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CYX22222003"},"content":"    public void saveOldData(ReadOnlyCampusConnect data) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CYX22222003"},"content":"        assert data !\u003d null;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CYX22222003"},"content":"        history.add(data);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CYX22222003"},"content":"     * Saves current data into future stack.","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CYX22222003"},"content":"     * Data should not be null.","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CYX22222003"},"content":"    public void saveCurrentData(ReadOnlyCampusConnect data) {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CYX22222003"},"content":"        future.add(data);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"     * Clears all undone data in the future stack.","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"    public void clearUndoneData() {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CYX22222003"},"content":"        future.clear();","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":67}},{"path":"src/main/java/seedu/address/model/exceptions/RedoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.model.exceptions;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":" * Exception when fail to execute redo.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"public class RedoException extends CommandException {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"    public RedoException(String message) {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"        super(message);","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"    public RedoException(String message, Throwable cause) {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"        super(message, cause);","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":16}},{"path":"src/main/java/seedu/address/model/exceptions/UndoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.model.exceptions;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":" * Exception when fails to execute undo.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"public class UndoException extends CommandException {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"    public UndoException(String message) {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"        super(message);","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"    public UndoException(String message, Throwable cause) {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"        super(message, cause);","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":16}},{"path":"src/main/java/seedu/address/model/person/CombinedContainsKeywordsPredicate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yooplo"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yooplo"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yooplo"},"content":"import java.util.function.Predicate;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":" * Combines multiple keyword predicates into one.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":" */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":"public class CombinedContainsKeywordsPredicate extends ContainsKeywordsPredicate {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":"    private final List\u003cPredicate\u003cPerson\u003e\u003e predicates;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"     * Constructs a {@code CombinedContainsKeywordsPredicate} with the given list of predicates.","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"     * This predicate will evaluate to true if the provided {@code Person} satisfies all the predicates.","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"     * @param predicates A list of predicates that each evaluate a specific criterion on a {@code Person}.","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"     *                   This allows combining various keyword predicates for fields like name, phone, email, or tag","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"     *                   to enable multi-condition filtering functionality.","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"    public CombinedContainsKeywordsPredicate(List\u003cPredicate\u003cPerson\u003e\u003e predicates) {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"        super(null); // Pass null or an empty list if you don\u0027t need it for composite","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"        this.predicates \u003d predicates;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"    @Override","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"    public boolean test(Person person) {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"        return predicates.stream().allMatch(predicate -\u003e predicate.test(person));","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"    @Override","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"            return true;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"        }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"        if (!(other instanceof CombinedContainsKeywordsPredicate)) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"            return false;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"        }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"        CombinedContainsKeywordsPredicate otherPredicate \u003d (CombinedContainsKeywordsPredicate) other;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"        return predicates.equals(otherPredicate.predicates);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yooplo"},"content":"    @Override","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yooplo"},"content":"        return String.format(\"%s%s\", getClass().getCanonicalName(), predicates);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":48}},{"path":"src/main/java/seedu/address/model/person/ContainsKeywordsPredicate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KrashKart"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"import java.util.function.Predicate;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"import seedu.address.commons.util.ToStringBuilder;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":"/**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KrashKart"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"public abstract class ContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KrashKart"},"content":"    private final List\u003cString\u003e keywords;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KrashKart"},"content":"    public ContainsKeywordsPredicate(List\u003cString\u003e keywords) {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KrashKart"},"content":"        this.keywords \u003d keywords;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KrashKart"},"content":"    protected List\u003cString\u003e getKeywords() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KrashKart"},"content":"        return this.keywords;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KrashKart"},"content":"    @Override","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KrashKart"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KrashKart"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KrashKart"},"content":"            return true;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KrashKart"},"content":"        }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KrashKart"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"        if (!(other instanceof ContainsKeywordsPredicate otherNameContainsKeywordsPredicate)) {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KrashKart"},"content":"            return false;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KrashKart"},"content":"        }","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KrashKart"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KrashKart"},"content":"    @Override","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KrashKart"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KrashKart"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KrashKart"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":1,"KrashKart":39}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":" * Represents a Person\u0027s email in the CampusConnect.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":1,"-":78}},{"path":"src/main/java/seedu/address/model/person/EmailContainsKeywordsPredicate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KrashKart"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"import seedu.address.commons.util.ToStringBuilder;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":"/**","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given.","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KrashKart"},"content":"public class EmailContainsKeywordsPredicate extends ContainsKeywordsPredicate {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"     * Constructs an {@code EmailContainsKeywordsPredicate} with the specified keywords.","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"     * @param keywords List of keywords to match against a person\u0027s email.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KrashKart"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KrashKart"},"content":"        super(keywords);","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"     * Tests if any of the keywords match the email address of the given person.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"     * @param person the {@code Person} to test.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"     * @return true if any keyword matches the person\u0027s email address, false otherwise.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KrashKart"},"content":"    @Override","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KrashKart"},"content":"    public boolean test(Person person) {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KrashKart"},"content":"        return super.getKeywords().stream()","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"                .anyMatch(keyword -\u003e person.getEmail().value.toLowerCase().contains(keyword.toLowerCase()));","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"     * Checks if this predicate is equal to another object.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"     * @param other the object to compare with this predicate.","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"     * @return true if the other object is the same type and has the same keywords, false otherwise.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KrashKart"},"content":"    @Override","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KrashKart"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"        if (this \u003d\u003d other) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"            return true; // Check for reference equality","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KrashKart"},"content":"        }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"        // Check if the other object is an instance of EmailContainsKeywordsPredicate","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KrashKart"},"content":"        if (!(other instanceof EmailContainsKeywordsPredicate)) {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KrashKart"},"content":"            return false;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KrashKart"},"content":"        }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"        EmailContainsKeywordsPredicate otherPredicate \u003d (EmailContainsKeywordsPredicate) other;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"        return getKeywords().equals(otherPredicate.getKeywords());","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"     * Returns a string representation of this predicate.","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"     * @return string representation of the object\u0027s state.","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KrashKart"},"content":"    @Override","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KrashKart"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"        return new ToStringBuilder(this)","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"                .add(\"keywords\", getKeywords())","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yooplo"},"content":"                .toString();","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KrashKart"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":32,"KrashKart":33}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KrashKart"},"content":"public class NameContainsKeywordsPredicate extends ContainsKeywordsPredicate {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"     * Constructs a {@code NameContainsKeywordsPredicate} with the specified keywords.","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"     * @param keywords List of keywords to match against a person\u0027s name.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KrashKart"},"content":"        super(keywords);","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"     * Tests if any of the keywords match the name of the given person.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"     * @param person the {@code Person} whose name is to be tested.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"     * @return true if any keyword matches the person\u0027s name, false otherwise.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"        return getKeywords().stream()","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"                .anyMatch(keyword -\u003e person.getName().fullName.toLowerCase().contains(keyword.toLowerCase()));","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"     * Checks if this predicate is equal to another object.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"     * @param other the object to compare with this predicate.","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"     * @return true if the other object is the same type and has the same keywords, false otherwise.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"        if (this \u003d\u003d other) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"            return true; // Check for reference equality","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"        // Check if the other object is an instance of NameContainsKeywordsPredicate","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"        NameContainsKeywordsPredicate otherPredicate \u003d (NameContainsKeywordsPredicate) other;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"        return getKeywords().equals(otherPredicate.getKeywords());","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"     * Returns a string representation of this predicate.","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"     * @return string representation of the object\u0027s state.","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"        return new ToStringBuilder(this)","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"                .add(\"keywords\", getKeywords())","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yooplo"},"content":"                .toString();","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":32,"KrashKart":2,"-":31}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"import java.util.Comparator;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KrashKart"},"content":"import java.util.stream.Stream;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KrashKart"},"content":"    public Person(Name name, Phone phone, Email email, Set\u003cTag\u003e tags) {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KrashKart"},"content":"        requireAllNonNull(name, phone, email, tags);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Name getName() {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return name;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return phone;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Email getEmail() {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return email;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * if modification is attempted.","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KrashKart"},"content":"    /**","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KrashKart"},"content":"     * Returns an immutable tag stream with order, which throws {@code UnsupportedOperationException}","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KrashKart"},"content":"     * if modification is attempted.","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KrashKart"},"content":"     */","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KrashKart"},"content":"    public Stream\u003cTag\u003e getOrderedTags() {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KrashKart"},"content":"        return tags.stream().sorted(Comparator.comparing(tag -\u003e tag.tagName));","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Christopher Tan"},"content":"     * Checks for duplicates in emails in the contact list.","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Christopher Tan"},"content":"     * @param otherPerson The Person object to compare against.","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Christopher Tan"},"content":"     * @return True if both persons have the same email address.","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CYX22222003"},"content":"    public boolean hasSameEmail(Person otherPerson) {","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CYX22222003"},"content":"        return otherPerson !\u003d null \u0026\u0026 otherPerson.getEmail().equals(this.getEmail());","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Christopher Tan"},"content":"     * Checks for duplicates in phone numbers in the contact list.","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Christopher Tan"},"content":"     * @param otherPerson The Person object to compare against.","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Christopher Tan"},"content":"     * @return True if both persons have the same phone number.","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Christopher Tan"},"content":"    public boolean hasSamePhoneNumber(Person otherPerson) {","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Christopher Tan"},"content":"        return otherPerson !\u003d null \u0026\u0026 otherPerson.getPhone().equals(this.getPhone());","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Christopher Tan"},"content":"     * Checks for duplicated contact information between Person instances.","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Christopher Tan"},"content":"     * This is to avoid adding duplicate contacts in the contact list.","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Christopher Tan"},"content":"     * Checked fields: name, phone, email.","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Christopher Tan"},"content":"     * @param otherPerson The Person object to compare against.","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Christopher Tan"},"content":"     * @return True if two contacts are considered as duplicates.","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CYX22222003"},"content":"    public boolean hasDuplicateInfo(Person otherPerson) {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Christopher Tan"},"content":"        return this.isSamePerson(otherPerson)","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Christopher Tan"},"content":"                || this.hasSameEmail(otherPerson)","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Christopher Tan"},"content":"                || this.hasSamePhoneNumber(otherPerson);","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Christopher Tan"},"content":"     * Checks whether the person has the tags with the same tag name.","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"CYX22222003"},"content":"    public boolean hasTag(Tag t) {","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"CYX22222003"},"content":"        return this.getTags().contains(t);","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"CYX22222003"},"content":"     * Removes a tag from a person.","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"CYX22222003"},"content":"    public Person removeTag(Tag t) {","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"CYX22222003"},"content":"        Set\u003cTag\u003e newTagSet \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"CYX22222003"},"content":"        newTagSet.addAll(this.getTags());","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"CYX22222003"},"content":"        newTagSet.remove(t);","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"CYX22222003"},"content":"        return new Person(this.name, this.phone, this.email, newTagSet);","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"CYX22222003"},"content":"     * Adds a tag into a person.","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"CYX22222003"},"content":"     * Assumes the person does not contain any tag in the new tag set.","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"CYX22222003"},"content":"    public Person addTag(Set\u003c? extends Tag\u003e tagSet) {","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"CYX22222003"},"content":"        Set\u003cTag\u003e newTagSet \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"CYX22222003"},"content":"        newTagSet.addAll(this.getTags());","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"CYX22222003"},"content":"        newTagSet.addAll(tagSet);","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"CYX22222003"},"content":"        return new Person(this.name, this.phone, this.email, newTagSet);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Christopher Tan"},"content":"     * Overwrites the person\u0027s tag set.","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Christopher Tan"},"content":"    public Person setAllTags(Set\u003cTag\u003e tagSet) {","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"Christopher Tan"},"content":"        return new Person(this.name, this.phone, this.email, tagSet);","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"CYX22222003"},"content":"     * Returns true if person contain any tag in the new tag set.","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"CYX22222003"},"content":"    public boolean containsDuplicateTag(Set\u003c? extends Tag\u003e tagSet) {","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"CYX22222003"},"content":"        for (Tag t : this.tags) {","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"CYX22222003"},"content":"            if (tagSet.contains(t)) {","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"CYX22222003"},"content":"                return true;","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"CYX22222003"},"content":"            }","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"CYX22222003"},"content":"        return false;","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"KrashKart"},"content":"        return Objects.hash(name, phone, email, tags);","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"                .toString();","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":13,"CYX22222003":51,"-":106,"Christopher Tan":27}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KrashKart"},"content":"            \"Phone numbers should only contain numbers, start with 6, 8 or 9, and it must be 8 digits long\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KrashKart"},"content":"    public static final String VALIDATION_REGEX \u003d \"[689]\\\\d{7}\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":2,"-":59}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsKeywordsPredicate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KrashKart"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"import seedu.address.commons.util.ToStringBuilder;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":"/**","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches any of the keywords given.","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KrashKart"},"content":"public class PhoneContainsKeywordsPredicate extends ContainsKeywordsPredicate {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"     * Constructs a {@code PhoneContainsKeywordsPredicate} with the specified keywords.","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"     * @param keywords List of keywords to match against a person\u0027s phone number.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KrashKart"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KrashKart"},"content":"        super(keywords);","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"     * Tests if any of the keywords match the phone number of the given person.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"     * @param person the {@code Person} to test.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"     * @return true if any keyword matches the person\u0027s phone number, false otherwise.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KrashKart"},"content":"    @Override","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KrashKart"},"content":"    public boolean test(Person person) {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"        return getKeywords().stream()","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"                .anyMatch(keyword -\u003e person.getPhone().value.toLowerCase().contains(keyword.toLowerCase()));","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"     * Checks if this predicate is equal to another object.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"     * @param other the object to compare with this predicate.","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"     * @return true if the other object is the same type and has the same keywords, false otherwise.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KrashKart"},"content":"    @Override","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KrashKart"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"        if (this \u003d\u003d other) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"            return true; // Check for reference equality","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KrashKart"},"content":"        }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"        // Check if the other object is an instance of PhoneContainsKeywordsPredicate","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KrashKart"},"content":"        if (!(other instanceof PhoneContainsKeywordsPredicate)) {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KrashKart"},"content":"            return false;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KrashKart"},"content":"        }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"        PhoneContainsKeywordsPredicate otherPredicate \u003d (PhoneContainsKeywordsPredicate) other;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"        return getKeywords().equals(otherPredicate.getKeywords());","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"     * Returns a string representation of this predicate.","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"     * @return string representation of the object\u0027s state.","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KrashKart"},"content":"    @Override","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KrashKart"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"        return new ToStringBuilder(this)","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"                .add(\"keywords\", getKeywords())","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yooplo"},"content":"                .toString();","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KrashKart"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":33,"KrashKart":32}},{"path":"src/main/java/seedu/address/model/person/TagContainsKeywordsPredicate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KrashKart"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"import seedu.address.commons.util.ToStringBuilder;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":"/**","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":" * Tests that a {@code Person}\u0027s {@code Tag} matches any of the keywords given.","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KrashKart"},"content":"public class TagContainsKeywordsPredicate extends ContainsKeywordsPredicate {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"     * Constructs a {@code TagContainsKeywordsPredicate} with the specified keywords.","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"     * @param keywords List of keywords to match against a person\u0027s tags.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KrashKart"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KrashKart"},"content":"        super(keywords);","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"     * Tests if any of the keywords match the tags of the given person.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"     * @param person the {@code Person} whose tags are to be tested.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"     * @return true if any keyword matches the person\u0027s tags, false otherwise.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KrashKart"},"content":"    @Override","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KrashKart"},"content":"    public boolean test(Person person) {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"        return getKeywords().stream()","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KrashKart"},"content":"                .anyMatch(keyword -\u003e person.getTags().toString().toLowerCase().contains(keyword.toLowerCase()));","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"     * Checks if this predicate is equal to another object.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"     * @param other the object to compare with this predicate.","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"     * @return true if the other object is the same type and has the same keywords, false otherwise.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KrashKart"},"content":"    @Override","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KrashKart"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"        if (this \u003d\u003d other) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"            return true; // Check for reference equality","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KrashKart"},"content":"        }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"        // Check if the other object is an instance of TagContainsKeywordsPredicate","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KrashKart"},"content":"        if (!(other instanceof TagContainsKeywordsPredicate)) {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KrashKart"},"content":"            return false;","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KrashKart"},"content":"        }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"        TagContainsKeywordsPredicate otherPredicate \u003d (TagContainsKeywordsPredicate) other;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"        return getKeywords().equals(otherPredicate.getKeywords());","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"     * Returns a string representation of this predicate.","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"     * @return string representation of the object\u0027s state.","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KrashKart"},"content":"    @Override","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KrashKart"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"        return new ToStringBuilder(this)","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"                .add(\"keywords\", getKeywords())","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yooplo"},"content":"                .toString();","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KrashKart"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":31,"KrashKart":34}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Christopher Tan"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Iterator;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.tag.TagCategory;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.tag.TagManager;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" *","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" *","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Christopher Tan"},"content":"    private final TagManager tagManager \u003d new TagManager();","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"        return internalList.stream().anyMatch(toCheck::hasDuplicateInfo);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Christopher Tan"},"content":"        Set\u003cTag\u003e trackedTags \u003d addTagsToManager(toAdd.getTags());","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Christopher Tan"},"content":"        toAdd \u003d toAdd.setAllTags(trackedTags);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Christopher Tan"},"content":"     * Adds a person to the specific position of the list.","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"     * The index must be valid","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"    public void add(int ind, Person toAdd) {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CYX22222003"},"content":"        requireNonNull(toAdd);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CYX22222003"},"content":"        if (contains(toAdd)) {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CYX22222003"},"content":"            throw new DuplicatePersonException();","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Christopher Tan"},"content":"        Set\u003cTag\u003e trackedTags \u003d addTagsToManager(toAdd.getTags());","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Christopher Tan"},"content":"        toAdd \u003d toAdd.setAllTags(trackedTags);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CYX22222003"},"content":"        internalList.add(ind, toAdd);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Christopher Tan"},"content":"     * Adds tags to the tagManager to be tracked.","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Christopher Tan"},"content":"     * Returns a set of tracked tag objects.","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Christopher Tan"},"content":"    private Set\u003cTag\u003e addTagsToManager(Set\u003cTag\u003e tagSet) {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Christopher Tan"},"content":"        Set\u003cTag\u003e deduplicatedTags \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Christopher Tan"},"content":"        for (Tag tag : tagSet) {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Christopher Tan"},"content":"            Tag trackedTag \u003d tagManager.getOrCreateTag(tag);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Christopher Tan"},"content":"            deduplicatedTags.add(trackedTag);","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Christopher Tan"},"content":"        return deduplicatedTags;","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Christopher Tan"},"content":"        tagManager.removeTagOccurrence(target.getTags());","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Christopher Tan"},"content":"        Set\u003cTag\u003e trackedTags \u003d addTagsToManager(editedPerson.getTags());","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Christopher Tan"},"content":"        editedPerson \u003d editedPerson.setAllTags(trackedTags);","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Christopher Tan"},"content":"        tagManager.removeTagOccurrence(toRemove.getTags());","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Christopher Tan"},"content":"        tagManager.clearAllTags();","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Christopher Tan"},"content":"        List\u003cPerson\u003e newPersons \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Christopher Tan"},"content":"        for (Person p : persons) {","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Christopher Tan"},"content":"            Set\u003cTag\u003e trackedTags \u003d tagManager.getOrCreateTag(p.getTags());","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Christopher Tan"},"content":"            newPersons.add(p.setAllTags(trackedTags));","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"Christopher Tan"},"content":"        internalList.setAll(newPersons);","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"CYX22222003"},"content":"     * Deletes a tag from a person.","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"CYX22222003"},"content":"    public void deletePersonTag(Person p, Tag t) {","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"CYX22222003"},"content":"        requireNonNull(p);","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"CYX22222003"},"content":"        Person replace \u003d p.removeTag(t);","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"Christopher Tan"},"content":"        // NOTE: no need to remove tag from tagManager here, setPerson takes care of it.","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"CYX22222003"},"content":"        setPerson(p, replace);","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"CYX22222003"},"content":"     * Adds a set of tag to a person.","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Christopher Tan"},"content":"    public void addPersonTags(Person p, Set\u003cTag\u003e t) {","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"CYX22222003"},"content":"        requireNonNull(p);","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"Christopher Tan"},"content":"        // remove tags already added to p","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"Christopher Tan"},"content":"        Set\u003cTag\u003e uniqueTags \u003d filterUniqueTags(p.getTags(), t);","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Christopher Tan"},"content":"        Person replace \u003d p.addTag(uniqueTags);","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Christopher Tan"},"content":"        // Note: no need to add tag to tagManager here, setPerson takes care of it.","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"CYX22222003"},"content":"        setPerson(p, replace);","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Christopher Tan"},"content":"    private Set\u003cTag\u003e filterUniqueTags(Set\u003cTag\u003e fixed, Set\u003cTag\u003e toFilter) {","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Christopher Tan"},"content":"        Set\u003cTag\u003e uniqueTags \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Christopher Tan"},"content":"        for (Tag t : toFilter) {","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Christopher Tan"},"content":"            if (!fixed.contains(t)) {","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Christopher Tan"},"content":"                uniqueTags.add(t);","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Christopher Tan"},"content":"            }","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Christopher Tan"},"content":"        return uniqueTags;","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Christopher Tan"},"content":"     * Returns the tag list of the Persons recorded.","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"yooplo"},"content":"    public ObservableList\u003cTag\u003e asTagList() {","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"Christopher Tan"},"content":"        return FXCollections.observableArrayList(tagManager.asTagList());","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Christopher Tan"},"content":"     * Updates the category of all occurrences of a {@code Tag}.","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Christopher Tan"},"content":"     * @param t {@code Tag} to be updated","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"Christopher Tan"},"content":"     * @param cat updated {@code TagCategory}","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Christopher Tan"},"content":"    public void updateTagCategory(Tag t, TagCategory cat) {","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Christopher Tan"},"content":"        tagManager.setTagCategory(t.tagName, cat);","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Christopher Tan"},"content":"     * Returns the {@TagCategory} of a tracked {@Tag}.","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Christopher Tan"},"content":"    public TagCategory getTagCategory(Tag t) {","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Christopher Tan"},"content":"        return tagManager.getTagCategory(t);","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return internalList.iterator();","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return internalList.toString();","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    return false;","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"                }","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        return true;","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":7,"CYX22222003":29,"-":150,"Christopher Tan":64}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Christopher Tan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tag names should be alphanumeric. \"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Christopher Tan"},"content":"            + \"Tags that have multiple words can be separated by a hyphen (-)\";","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Christopher Tan"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+(-\\\\p{Alnum}+)*\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Christopher Tan"},"content":"    private TagCategory tagCategory;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Christopher Tan"},"content":"    private int occurrences \u003d 0;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Christopher Tan"},"content":"     * Category of the tag is {@code GENERAL} by default.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Christopher Tan"},"content":"        this(tagName, TagCategory.GENERAL);","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Christopher Tan"},"content":"     * Constructs a {@code Tag}.","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Christopher Tan"},"content":"     *","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Christopher Tan"},"content":"     * @param tagName A valid tag name.","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Christopher Tan"},"content":"     * @param category A valid {@code TagCategory}.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Christopher Tan"},"content":"    public Tag(String tagName, TagCategory category) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Christopher Tan"},"content":"        this.tagCategory \u003d category;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Christopher Tan"},"content":"     * Set the tag category.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Christopher Tan"},"content":"     * @param tagCategory","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Christopher Tan"},"content":"    public void setTagCategory(TagCategory tagCategory) {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Christopher Tan"},"content":"        assert tagCategory !\u003d null;","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Christopher Tan"},"content":"        this.tagCategory \u003d tagCategory;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Christopher Tan"},"content":"     * Returns the tag category.","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Christopher Tan"},"content":"    public TagCategory getTagCategory() {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Christopher Tan"},"content":"        return this.tagCategory;","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Christopher Tan"},"content":"     * Returns the colour code corresponding to the tag category.","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Christopher Tan"},"content":"     * @return String containing the hex code for the colour.","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Christopher Tan"},"content":"    public String getTagColour() {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Christopher Tan"},"content":"        return this.tagCategory.getColorCode();","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Christopher Tan"},"content":"    public int getOccurrences() {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Christopher Tan"},"content":"        return occurrences;","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Christopher Tan"},"content":"     * Tncrease the recorded occurrences by 1.","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Christopher Tan"},"content":"    public void incrementOccurrences() {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Christopher Tan"},"content":"        occurrences \u003d occurrences + 1;","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Christopher Tan"},"content":"     * Decrease the recorded occurrences by 1.","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Christopher Tan"},"content":"    public void decrementOccurrences() {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Christopher Tan"},"content":"        occurrences \u003d occurrences - 1;","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"-":60,"Christopher Tan":59}},{"path":"src/main/java/seedu/address/model/tag/TagCategory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Christopher Tan"},"content":"package seedu.address.model.tag;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Christopher Tan"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Christopher Tan"},"content":" * Provides categories to sort Tags into, as well as colour codes for display in the UI.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Christopher Tan"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Christopher Tan"},"content":"public enum TagCategory {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":"    GENERAL(\"#A9A9A9\"), // Dark Grey for default color","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Christopher Tan"},"content":"    ACADEMICS(\"#FFD700\"), // Gold","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Christopher Tan"},"content":"    ACTIVITIES(\"#1E90FF\"), // Dodger Blue","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Christopher Tan"},"content":"    NETWORKING(\"#32CD32\"), // Lime Green","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Christopher Tan"},"content":"    MENTORSHIP(\"#FF69B4\"); // Hot Pink","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KrashKart"},"content":"    private static final String INVALID_CATEGORY \u003d \"Error! %s is not a valid category!\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Christopher Tan"},"content":"    private final String colorCode;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Christopher Tan"},"content":"    TagCategory(String colorCode) {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Christopher Tan"},"content":"        this.colorCode \u003d colorCode;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KrashKart"},"content":"    /**","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KrashKart"},"content":"     * Returns TagCategory from a String.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KrashKart"},"content":"     * @return TagCategory represented by the String.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KrashKart"},"content":"     */","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KrashKart"},"content":"    public static TagCategory fromString(String category) throws IllegalValueException {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KrashKart"},"content":"        switch (category) {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KrashKart"},"content":"        case \"ACADEMICS\":","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KrashKart"},"content":"            return ACADEMICS;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KrashKart"},"content":"        case \"ACTIVITIES\":","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KrashKart"},"content":"            return ACTIVITIES;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KrashKart"},"content":"        case \"NETWORKING\":","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KrashKart"},"content":"            return NETWORKING;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KrashKart"},"content":"        case \"MENTORSHIP\":","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KrashKart"},"content":"            return MENTORSHIP;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KrashKart"},"content":"        case \"GENERAL\":","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KrashKart"},"content":"            return GENERAL;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KrashKart"},"content":"        default:","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KrashKart"},"content":"            throw new IllegalValueException(String.format(INVALID_CATEGORY, category));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KrashKart"},"content":"        }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Christopher Tan"},"content":"     * Returns the colour code of the {@code TagCategory}.","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Christopher Tan"},"content":"     * @return String containing the hex code for the colour.","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Christopher Tan"},"content":"    public String getColorCode() {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Christopher Tan"},"content":"        return this.colorCode;","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Christopher Tan"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":1,"KrashKart":29,"Christopher Tan":25}},{"path":"src/main/java/seedu/address/model/tag/TagManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Christopher Tan"},"content":"package seedu.address.model.tag;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Christopher Tan"},"content":"import java.util.Collection;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Christopher Tan"},"content":"import java.util.HashMap;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Christopher Tan"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Christopher Tan"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Christopher Tan"},"content":"/**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Christopher Tan"},"content":" * The manager of all the tags currently being used.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Christopher Tan"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Christopher Tan"},"content":"public class TagManager {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Christopher Tan"},"content":"    private final HashMap\u003cString, Tag\u003e tagMap;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Christopher Tan"},"content":"     * Constructs a new TagManager to track Tag usages.","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Christopher Tan"},"content":"    public TagManager() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Christopher Tan"},"content":"        this.tagMap \u003d new HashMap\u003c\u003e();","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Christopher Tan"},"content":"     * Returns true if the Tag is being tracked in the TagManager.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Christopher Tan"},"content":"    public boolean containsTag(Tag t) {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Christopher Tan"},"content":"        String tagName \u003d t.tagName;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Christopher Tan"},"content":"        return tagMap.containsKey(tagName);","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Christopher Tan"},"content":"     * Returns the Tag with the corresponding tag name.","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Christopher Tan"},"content":"     * If the tag already exists, return the stored tag object.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Christopher Tan"},"content":"     * Else if the tag does not yet exist, create a new tag and return it. \u003cbr\u003e","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Christopher Tan"},"content":"     * \u003cstrong\u003eWarning:\u003c/strong\u003e only use this method if you want to add or increase tag tracking.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Christopher Tan"},"content":"     * @param tagName String of the tag name","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Christopher Tan"},"content":"     * @return The new or existing tag with the corresponding tag name","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Christopher Tan"},"content":"    public Tag getOrCreateTag(String tagName) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Christopher Tan"},"content":"        Tag tagToIncrement \u003d tagMap.computeIfAbsent(tagName, Tag::new);","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Christopher Tan"},"content":"        tagToIncrement.incrementOccurrences();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Christopher Tan"},"content":"        return tagToIncrement;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Christopher Tan"},"content":"    public Tag getOrCreateTag(Tag tag) {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Christopher Tan"},"content":"        if (!tagMap.containsKey(tag.tagName)) {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Christopher Tan"},"content":"            tagMap.put(tag.tagName, new Tag(tag.tagName, tag.getTagCategory()));","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Christopher Tan"},"content":"        Tag tagToIncrement \u003d tagMap.get(tag.tagName);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Christopher Tan"},"content":"        tagToIncrement.incrementOccurrences();","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Christopher Tan"},"content":"        return tagToIncrement;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Christopher Tan"},"content":"     * Returns a set of tags that are being tracked by TagManager, corresponding to the input set.","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Christopher Tan"},"content":"    public Set\u003cTag\u003e getOrCreateTag(Set\u003cTag\u003e tags) {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Christopher Tan"},"content":"        Set\u003cTag\u003e trackedSet \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Christopher Tan"},"content":"        for (Tag t : tags) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Christopher Tan"},"content":"            trackedSet.add(getOrCreateTag(t));","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Christopher Tan"},"content":"        return trackedSet;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Christopher Tan"},"content":"     * Reduces the usage count of the tag and removes it if no more occurrences remain.","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Christopher Tan"},"content":"    public void removeTagOccurrence(Tag t) {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Christopher Tan"},"content":"        String tagName \u003d t.tagName;","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Christopher Tan"},"content":"        Tag tagToDecrement \u003d tagMap.get(tagName);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Christopher Tan"},"content":"        assert tagToDecrement !\u003d null;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Christopher Tan"},"content":"        if (tagToDecrement.getOccurrences() \u003c\u003d 1) {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Christopher Tan"},"content":"            tagMap.remove(tagToDecrement.tagName);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Christopher Tan"},"content":"            return;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Christopher Tan"},"content":"        tagToDecrement.decrementOccurrences();","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Christopher Tan"},"content":"     * Reduces the usage count of each tag in the given set and removes it if no more occurrences remain.","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Christopher Tan"},"content":"    public void removeTagOccurrence(Set\u003cTag\u003e tags) {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Christopher Tan"},"content":"        for (Tag t : tags) {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Christopher Tan"},"content":"            removeTagOccurrence(t);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Christopher Tan"},"content":"     * Returns the stored category of the tag with same name as the passed {@code Tag t}.","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Christopher Tan"},"content":"    public TagCategory getTagCategory(Tag t) {","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Christopher Tan"},"content":"        String tagName \u003d t.tagName;","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Christopher Tan"},"content":"        return tagMap.get(tagName).getTagCategory();","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Christopher Tan"},"content":"     * Set the category of a tag.","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Christopher Tan"},"content":"     * Assumes that the tag already exists in the TagManager.","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Christopher Tan"},"content":"    public void setTagCategory(String tagName, TagCategory cat) {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Christopher Tan"},"content":"        Tag tag \u003d tagMap.get(tagName);","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Christopher Tan"},"content":"        tag.setTagCategory(cat);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Christopher Tan"},"content":"     * Clears the TagManager of all stored tags to an empty state.","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Christopher Tan"},"content":"    public void clearAllTags() {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Christopher Tan"},"content":"        tagMap.clear();","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Christopher Tan"},"content":"     * Remove all the tags from the passed set, regardless of how many occurrences remain.","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Christopher Tan"},"content":"     * @see TagManager#removeTagOccurrence(Set) removeTagOccurrence","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Christopher Tan"},"content":"    public void removeTags(Set\u003cTag\u003e tagSet) {","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Christopher Tan"},"content":"        for (Tag t : tagSet) {","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Christopher Tan"},"content":"            tagMap.remove(t.tagName);","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Christopher Tan"},"content":"    /**","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Christopher Tan"},"content":"     * Returns the existing tags as a Collection.","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Christopher Tan"},"content":"     */","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Christopher Tan"},"content":"    public Collection\u003cTag\u003e asTagList() {","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Christopher Tan"},"content":"        return tagMap.values();","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Christopher Tan"},"content":"}","isFullCredit":false}],"authorContributionMap":{"Christopher Tan":129}},{"path":"src/main/java/seedu/address/model/util/EmptyDataUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KrashKart"},"content":"package seedu.address.model.util;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.ReadOnlyCampusConnect;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":" * Contains utility method for populating {@code CampusConnect} with empty data.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":" */","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":"public class EmptyDataUtil {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KrashKart"},"content":"    public static ReadOnlyCampusConnect getSampleCampusConnect() {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"        return new CampusConnect();","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KrashKart"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":13}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.tag.TagCategory;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":" * Contains utility methods for populating {@code CampusConnect} with sample data.","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new Person[] {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        };","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KrashKart"},"content":"    // Schedule for deletion","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KrashKart"},"content":"    /*","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"    public static ReadOnlyCampusConnect getSampleCampusConnect() {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"        CampusConnect sampleAb \u003d new CampusConnect();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return sampleAb;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KrashKart"},"content":"    }*/","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KrashKart"},"content":"     * Returns a tag set containing the list of name strings given.","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KrashKart"},"content":"     * @param names Varargs array containing the names of the tags.","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KrashKart"},"content":"     * @return Set containing the tags.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KrashKart"},"content":"    public static Set\u003cTag\u003e getTagSet(String... names) {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KrashKart"},"content":"        return Arrays.stream(names)","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .map(Tag::new)","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KrashKart"},"content":"    /**","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KrashKart"},"content":"     * Returns a tag set containing tags with the names and categories specified.","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KrashKart"},"content":"     * @param names Array of names for the tags.","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KrashKart"},"content":"     * @param categories Array of categories to be attached to the respective names.","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KrashKart"},"content":"     * @return Set containing the tags.","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KrashKart"},"content":"     * @throws IllegalValueException thrown when a tag category is not valid.","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KrashKart"},"content":"     */","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KrashKart"},"content":"    public static Set\u003cTag\u003e getTagSet(String[] names, String[] categories) throws IllegalValueException {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KrashKart"},"content":"        List\u003cTag\u003e resultTags \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KrashKart"},"content":"        TagCategory tagCat;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KrashKart"},"content":"        // assume both arrays same length, since this is a helper for test functions","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KrashKart"},"content":"        // so no need to test for inconsistent length","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KrashKart"},"content":"        for (int i \u003d 0; i \u003c names.length; i++) {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KrashKart"},"content":"            tagCat \u003d TagCategory.fromString(categories[i]);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KrashKart"},"content":"            resultTags.add(new Tag(names[i], tagCat));","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KrashKart"},"content":"        }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KrashKart"},"content":"        return resultTags.stream().collect(Collectors.toSet());","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":3,"KrashKart":31,"-":44}},{"path":"src/main/java/seedu/address/storage/CampusConnectStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yooplo"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yooplo"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yooplo"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"import java.util.Optional;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.ReadOnlyCampusConnect;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"/**","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":" * Represents a storage for {@link CampusConnect}.","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":" */","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"public interface CampusConnectStorage {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"     * Returns the file path of the data file.","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yooplo"},"content":"    Path getCampusConnectFilePath();","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"     * Returns CampusConnect data as a {@link ReadOnlyCampusConnect}.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"    Optional\u003cReadOnlyCampusConnect\u003e readCampusConnect() throws DataLoadingException;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"     * @see #getCampusConnectFilePath()","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"    Optional\u003cReadOnlyCampusConnect\u003e readCampusConnect(Path filePath) throws DataLoadingException;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"     * Saves the given {@link ReadOnlyCampusConnect} to the storage.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"     * @param campusConnect cannot be null.","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"     * @throws IOException if there was any problem writing to the file.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"    void saveCampusConnect(ReadOnlyCampusConnect campusConnect) throws IOException;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"     * @see #saveCampusConnect(ReadOnlyCampusConnect)","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yooplo"},"content":"    void saveCampusConnect(ReadOnlyCampusConnect campusConnect, Path filePath) throws IOException;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String name;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String phone;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String email;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KrashKart"},"content":"            @JsonProperty(\"email\") String email,","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"KrashKart"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelTags);","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":2,"-":95}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.tag.TagCategory;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String tagName;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KrashKart"},"content":"    private final String tagCategory;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KrashKart"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName} and {@code tagCategory}.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @JsonCreator","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KrashKart"},"content":"    public JsonAdaptedTag(@JsonProperty(\"tagName\") String tagName,","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KrashKart"},"content":"                          @JsonProperty(\"tagCategory\") String tagCategory) {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KrashKart"},"content":"        this.tagCategory \u003d tagCategory;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KrashKart"},"content":"    /**","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KrashKart"},"content":"     * Overloaded constructor for default tag creation.","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KrashKart"},"content":"     */","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KrashKart"},"content":"    @JsonCreator","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KrashKart"},"content":"    public JsonAdaptedTag(String tagName) {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KrashKart"},"content":"        this(tagName, \"GENERAL\");","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KrashKart"},"content":"        tagCategory \u003d source.getTagCategory().toString();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KrashKart"},"content":"        TagCategory tagCat \u003d TagCategory.fromString(tagCategory); // convert to TagCategory enum","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KrashKart"},"content":"        return new Tag(tagName, tagCat);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":16,"-":41}},{"path":"src/main/java/seedu/address/storage/JsonCampusConnectStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yooplo"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yooplo"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"import java.util.Optional;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"import seedu.address.commons.util.FileUtil;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"import seedu.address.commons.util.JsonUtil;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.ReadOnlyCampusConnect;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"/**","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":" * A class to access CampusConnect data stored as a json file on the hard disk.","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yooplo"},"content":" */","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"public class JsonCampusConnectStorage implements CampusConnectStorage {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonCampusConnectStorage.class);","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"    private Path filePath;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"    public JsonCampusConnectStorage(Path filePath) {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"        this.filePath \u003d filePath;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"    public Path getCampusConnectFilePath() {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":"        return filePath;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"    @Override","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"    public Optional\u003cReadOnlyCampusConnect\u003e readCampusConnect() throws DataLoadingException {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"        return readCampusConnect(filePath);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"     * Similar to {@link #readCampusConnect()}.","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"     * @param filePath location of the data. Cannot be null.","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"    public Optional\u003cReadOnlyCampusConnect\u003e readCampusConnect(Path filePath) throws DataLoadingException {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yooplo"},"content":"        requireNonNull(filePath);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yooplo"},"content":"        Optional\u003cJsonSerializableCampusConnect\u003e jsonCampusConnect \u003d JsonUtil.readJsonFile(","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yooplo"},"content":"                filePath, JsonSerializableCampusConnect.class);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"        if (!jsonCampusConnect.isPresent()) {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"            return Optional.empty();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"        }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"        try {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"            return Optional.of(jsonCampusConnect.get().toModelType());","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"        } catch (IllegalValueException ive) {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"            throw new DataLoadingException(ive);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yooplo"},"content":"        }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"    @Override","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yooplo"},"content":"    public void saveCampusConnect(ReadOnlyCampusConnect campusConnect) throws IOException {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yooplo"},"content":"        saveCampusConnect(campusConnect, filePath);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yooplo"},"content":"     * Similar to {@link #saveCampusConnect(ReadOnlyCampusConnect)}.","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yooplo"},"content":"     *","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yooplo"},"content":"     * @param filePath location of the data. Cannot be null.","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yooplo"},"content":"    public void saveCampusConnect(ReadOnlyCampusConnect campusConnect, Path filePath) throws IOException {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yooplo"},"content":"        requireNonNull(campusConnect);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yooplo"},"content":"        requireNonNull(filePath);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yooplo"},"content":"        FileUtil.createIfMissing(filePath);","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yooplo"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableCampusConnect(campusConnect), filePath);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":80}},{"path":"src/main/java/seedu/address/storage/JsonSerializableCampusConnect.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.ReadOnlyCampusConnect;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":" * An Immutable CampusConnect that is serializable to JSON format.","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yooplo"},"content":"@JsonRootName(value \u003d \"CampusConnect\")","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"class JsonSerializableCampusConnect {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"     * Constructs a {@code JsonSerializableCampusConnect} with the given persons.","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"    public JsonSerializableCampusConnect(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"     * Converts a given {@code ReadOnlyCampusConnect} into this class for Jackson use.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableCampusConnect}.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"    public JsonSerializableCampusConnect(ReadOnlyCampusConnect source) {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yooplo"},"content":"     * Converts this address book into the model\u0027s {@code CampusConnect} object.","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yooplo"},"content":"    public CampusConnect toModelType() throws IllegalValueException {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yooplo"},"content":"        CampusConnect campusConnect \u003d new CampusConnect();","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"            if (campusConnect.hasPerson(person)) {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"            campusConnect.addPerson(person);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"        return campusConnect;","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":16,"-":44}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.ReadOnlyCampusConnect;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"public interface Storage extends CampusConnectStorage, UserPrefsStorage {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"    Path getCampusConnectFilePath();","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"    Optional\u003cReadOnlyCampusConnect\u003e readCampusConnect() throws DataLoadingException;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"    void saveCampusConnect(ReadOnlyCampusConnect campusConnect) throws IOException;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.ReadOnlyCampusConnect;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":" * Manages storage of CampusConnect data in local storage.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"    private CampusConnectStorage campusConnectStorage;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"     * Creates a {@code StorageManager} with the given {@code CampusConnectStorage} and {@code UserPrefStorage}.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"    public StorageManager(CampusConnectStorage campusConnectStorage, UserPrefsStorage userPrefsStorage) {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"        this.campusConnectStorage \u003d campusConnectStorage;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yooplo"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CampusConnect methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"    public Path getCampusConnectFilePath() {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yooplo"},"content":"        return campusConnectStorage.getCampusConnectFilePath();","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"    public Optional\u003cReadOnlyCampusConnect\u003e readCampusConnect() throws DataLoadingException {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"        return readCampusConnect(campusConnectStorage.getCampusConnectFilePath());","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"    public Optional\u003cReadOnlyCampusConnect\u003e readCampusConnect(Path filePath) throws DataLoadingException {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yooplo"},"content":"        return campusConnectStorage.readCampusConnect(filePath);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yooplo"},"content":"    public void saveCampusConnect(ReadOnlyCampusConnect campusConnect) throws IOException {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yooplo"},"content":"        saveCampusConnect(campusConnect, campusConnectStorage.getCampusConnectFilePath());","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yooplo"},"content":"    public void saveCampusConnect(ReadOnlyCampusConnect campusConnect, Path filePath) throws IOException {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yooplo"},"content":"        campusConnectStorage.saveCampusConnect(campusConnect, filePath);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":17,"-":61}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"import javafx.application.Application;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":"import javafx.scene.control.Hyperlink;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Controller for a help page","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KrashKart"},"content":"    public static final String USER_GUIDE_URL \u003d \"https://ay2425s1-cs2103t-f14a-4.github.io/tp/UserGuide.html\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KrashKart"},"content":"    public static final String HELP_MESSAGE \u003d \"Need some help? Refer to our user guide at: \";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KrashKart"},"content":"    // For implementing web functionality -- we need to get the user\u0027s current hosting service","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KrashKart"},"content":"    private final Application currApp \u003d new CampusConnectApp();","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Label helpMessage;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KrashKart"},"content":"    private Hyperlink ugLink;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(FXML, root);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KrashKart"},"content":"        // hyperlink setups: set hyperlink as unclicked, hyperlink text, handle onAction logic","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KrashKart"},"content":"        setHyperlink();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KrashKart"},"content":"        ugLink.setText(USER_GUIDE_URL);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KrashKart"},"content":"        ugLink.setOnAction(event -\u003e {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KrashKart"},"content":"            currApp.getHostServices().showDocument(USER_GUIDE_URL);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KrashKart"},"content":"            this.setHyperlink();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KrashKart"},"content":"        });","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public HelpWindow() {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this(new Stage());","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Shows the help window.","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void show() {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KrashKart"},"content":"        logger.fine(\"Showing help page for CampusConnect.\");","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        getRoot().show();","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Hides the help window.","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void hide() {","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        getRoot().hide();","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void focus() {","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"KrashKart"},"content":"     * Resets the hyperlink to an unclicked state.","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"KrashKart"},"content":"    public void resetHyperlink() {","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"KrashKart"},"content":"        ugLink.setVisited(false);","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"KrashKart"},"content":"    /**","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"KrashKart"},"content":"     * Sets hyperlink to a clicked state.","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"KrashKart"},"content":"     * No other class or method should be touching this except the event handler of the hyperlink in HelpWindow,","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"KrashKart"},"content":"     * where the hyperlink logic is handled.","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"KrashKart"},"content":"     */","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"KrashKart"},"content":"    private void setHyperlink() {","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"KrashKart"},"content":"        ugLink.setVisited(true);","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"KrashKart"},"content":"    /**","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"KrashKart"},"content":"     * Handles extraction of default browser to HelpWindow.","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"KrashKart"},"content":"     * This is to enable the use the {@code getInstance} method, which gets the user\u0027s default browser.","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"KrashKart"},"content":"     * Necessary for hyperlink to open.","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"KrashKart"},"content":"     */","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"KrashKart"},"content":"    private static class CampusConnectApp extends Application {","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"KrashKart"},"content":"        private static CampusConnectApp mInstance;","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"KrashKart"},"content":"        public static CampusConnectApp getInstance() {","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"KrashKart"},"content":"            return mInstance;","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"KrashKart"},"content":"        }","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"KrashKart"},"content":"        /**","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"KrashKart"},"content":"         * Empty overridden start method from {@code Application}.","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"KrashKart"},"content":"         * This is to enable the extension of the abstract {@code Application} class.","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"KrashKart"},"content":"         */","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"KrashKart"},"content":"        @Override","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"KrashKart"},"content":"        public void start(Stage primaryStage) {","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"KrashKart"},"content":"        }","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":49,"-":89}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KrashKart"},"content":"    private static final String LIST_EMPTY_MESSAGE \u003d \"The contact list is empty! :(\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"    private TagListPanel tagListPanel;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"    @FXML","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"    private StackPane tagsListPanelPlaceholder;","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        /*","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"                event.consume();","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        });","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yooplo"},"content":"        tagListPanel \u003d new TagListPanel(logic.getListOfCurrentTags(), this);","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yooplo"},"content":"        tagsListPanelPlaceholder.getChildren().add(tagListPanel.getRoot());","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"KrashKart"},"content":"        if (logic.getFilteredPersonList().isEmpty()) {","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yooplo"},"content":"            updateResultDisplay(LIST_EMPTY_MESSAGE);","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"KrashKart"},"content":"        }","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yooplo"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getCampusConnectFilePath());","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yooplo"},"content":"        populateTagsList();","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yooplo"},"content":"     * Populates the tag list panel in the GUI with the tags available in alphabetical order.","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yooplo"},"content":"    private void populateTagsList() {","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yooplo"},"content":"        tagListPanel.updateTagList(logic.getListOfCurrentTags());","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yooplo"},"content":"     * Updates the ResultDisplay","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yooplo"},"content":"     * @param details the String to be displayed","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yooplo"},"content":"    public void updateResultDisplay(String details) {","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yooplo"},"content":"        resultDisplay.setFeedbackToUser(details);","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"KrashKart"},"content":"     * This also resets the hyperlink status to unclicked.","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void handleHelp() {","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"KrashKart"},"content":"            helpWindow.resetHyperlink();","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            helpWindow.show();","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        } else {","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"            helpWindow.focus();","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    void show() {","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        primaryStage.show();","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Closes the application.","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private void handleExit() {","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        helpWindow.hide();","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        primaryStage.hide();","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return personListPanel;","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"yooplo"},"content":"            populateTagsList();","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"yooplo"},"content":"            updateResultDisplay(commandResult.getFeedbackToUser());","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"                handleHelp();","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"                handleExit();","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return commandResult;","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"yooplo"},"content":"            updateResultDisplay(e.getMessage());","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"            throw e;","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":28,"KrashKart":6,"-":192}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Christopher Tan"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on CampusConnect level 4\u003c/a\u003e","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public final Person person;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private HBox cardPane;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label name;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label id;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label phone;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label email;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private FlowPane tags;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        super(FXML);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.person \u003d person;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"        syncPersonTagDetails(person);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KrashKart"},"content":"        // add horizontal and vertical gaps for the tags FlowPane","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KrashKart"},"content":"        tags.setHgap(5);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KrashKart"},"content":"        tags.setVgap(5);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"    private void syncPersonTagDetails(Person person) {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"        person.getOrderedTags().forEach(tag -\u003e {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yooplo"},"content":"            Label tagLabel \u003d new Label(tag.tagName);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yooplo"},"content":"            tagLabel.setStyle(\"-fx-padding: 2; -fx-background-color: \" + tag.getTagColour());","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"            tags.getChildren().add(tagLabel);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"        });","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":8,"KrashKart":4,"-":51,"Christopher Tan":1}},{"path":"src/main/java/seedu/address/ui/TagCard.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yooplo"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yooplo"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yooplo"},"content":"import javafx.scene.control.Label;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"import javafx.scene.layout.HBox;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"import javafx.scene.layout.Region;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":"/**","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":" * An UI component that displays information of a {@code Tag}.","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":" */","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"public class TagCard extends UiPart\u003cRegion\u003e {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"    private static final String FXML \u003d \"TagCard.fxml\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"    public final Tag tag;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"    @FXML","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yooplo"},"content":"    private HBox cardPane;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"    @FXML","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"    private Label tagName;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"    private MainWindow mainWindow;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"     * Creates a {@code TagCard} with the given {@code Tag} and index to display.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"    public TagCard(Tag tag, int displayedIndex, MainWindow mainWindow) {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"        super(FXML);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"        this.mainWindow \u003d mainWindow;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":"        this.tag \u003d tag;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"        tagName.setText((displayedIndex + 1) + \". \" + tag.tagName);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"        String color \u003d tag.getTagColour();","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"        tagName.setStyle(\"-fx-text-fill: \" + color + \";\");","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"        tagName.setOnMouseClicked(event -\u003e showTagDetails());","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"     * Displays tag details in the ResultDisplay component of MainWindow.","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"    private void showTagDetails() {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yooplo"},"content":"        String details \u003d \"Tag Name: \" + tag.tagName + \"\\nCategory: \" + tag.getTagCategory().toString();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"        mainWindow.updateResultDisplay(details);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":47}},{"path":"src/main/java/seedu/address/ui/TagListPanel.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yooplo"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yooplo"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"import javafx.collections.FXCollections;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"import javafx.fxml.FXML;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"import javafx.scene.control.ListCell;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":"import javafx.scene.control.ListView;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":"import javafx.scene.layout.Region;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"/**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":" * Panel containing the list of tags.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":" */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"public class TagListPanel extends UiPart\u003cRegion\u003e {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yooplo"},"content":"    private static final String FXML \u003d \"TagListPanel.fxml\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TagListPanel.class);","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"    @FXML","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"    private ListView\u003cTag\u003e tagListView;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"    private MainWindow mainWindow;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"     * Creates a {@code TagListPanel} with the given {@code ObservableList}.","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"    public TagListPanel(ObservableList\u003cTag\u003e tagList, MainWindow mainWindow) {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":"        super(FXML);","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"        tagListView.setItems(FXCollections.observableArrayList(tagList));","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"        tagListView.setCellFactory(listView -\u003e new TagListViewCell());","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"        this.mainWindow \u003d mainWindow;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"     * Updates the tag list with new data.","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"    public void updateTagList(ObservableList\u003cTag\u003e tagList) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"        ObservableList\u003cTag\u003e sortedTags \u003d FXCollections","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"                .observableArrayList(tagList);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"        tagListView.setItems(sortedTags);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yooplo"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Tag} using a {@code TagCard}.","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yooplo"},"content":"    class TagListViewCell extends ListCell\u003cTag\u003e {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"        @Override","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"        protected void updateItem(Tag tag, boolean empty) {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"            super.updateItem(tag, empty);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"            if (empty || tag \u003d\u003d null) {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"                setGraphic(null);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"                setText(null);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"            } else {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"                setGraphic(new TagCard(tag, getIndex(), mainWindow).getRoot());","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yooplo"},"content":"            }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yooplo"},"content":"        }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":62}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KrashKart"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/CampusConnectLogo.png\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yooplo"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/CampusConnectTheme.css\");","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":1,"KrashKart":1,"-":86}},{"path":"src/main/resources/view/CampusConnectExtensions.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"yooplo"},"content":".error {","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yooplo"},"content":"    -fx-text-fill: #FF4500 !important; /* Bright orange for error messages */","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":".list-cell:empty {","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"    /* Empty cells will be filled with a base theme color */","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"    -fx-background-color: #2B3A67; /* Deep blue background */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":".tag-selector {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"    -fx-border-width: 1;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"    -fx-border-color: #FFA500;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"    -fx-border-radius: 3;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"    -fx-background-radius: 3;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":".tooltip-text {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"    -fx-text-fill: #2B3A67; /* Ensure tooltip text remains white for legibility */","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":19}},{"path":"src/main/resources/view/CampusConnectTheme.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"yooplo"},"content":".background {","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yooplo"},"content":"    -fx-background-color: #2B3A67; /* Deep blue background */","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yooplo"},"content":".pane-with-border {","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"    -fx-background-color: #ADD8E6;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":".result-display {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":"    -fx-font-size: 12pt; /* Increase font size for better visibility */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":"    -fx-font-family: \"Segoe UI\", sans-serif; /* Use a clean, modern font */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"    -fx-text-fill: #1E90FF; /* Dodger blue color for the text */","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"    -fx-font-weight: bold;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"    -fx-border-width: 0px;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"    -fx-border-color: transparent;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"    -fx-border-radius: 5px;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"    -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.1), 2, 0, 0, 1);","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yooplo"},"content":".label {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"    -fx-font-size: 11pt;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"    -fx-text-fill: #FFA500; /* Orange text */","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"    -fx-opacity: 0.9;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":".label:hover {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"    -fx-cursor: hand;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":".label-bright {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":"    -fx-font-size: 11pt;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"    -fx-text-fill: white;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"    -fx-opacity: 1;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":".label-header {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"    -fx-font-size: 32pt;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"    -fx-font-family: \"Segoe UI Light\";","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"    -fx-text-fill: #FFA500; /* Orange text for headers */","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"    -fx-opacity: 1;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yooplo"},"content":".text-field {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"    -fx-font-size: 12pt;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yooplo"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yooplo"},"content":"    -fx-background-color: #2D4059; /* Slightly lighter blue */","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yooplo"},"content":"    -fx-text-fill: white;","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yooplo"},"content":"    -fx-padding: 4px;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"    -fx-border-radius: 4px;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yooplo"},"content":"/* Table and List Views */","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":".table-view {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"    -fx-base: #2B3A67;","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"    -fx-control-inner-background: #2B3A67;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"    -fx-background-color: #2B3A67;","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"    -fx-table-cell-border-color: transparent;","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yooplo"},"content":"    -fx-table-header-border-color: transparent;","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yooplo"},"content":"    -fx-padding: 5;","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yooplo"},"content":".table-view .column-header-background {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yooplo"},"content":"    -fx-background-color: transparent;","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yooplo"},"content":".table-view .column-header, .table-view .filler {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yooplo"},"content":"    -fx-size: 35;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yooplo"},"content":"    -fx-border-width: 0 0 1 0;","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yooplo"},"content":"    -fx-background-color: transparent;","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yooplo"},"content":"    -fx-border-color: transparent transparent #FFA500 transparent; /* Orange bottom border */","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yooplo"},"content":".table-view .column-header .label {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yooplo"},"content":"    -fx-font-size: 20pt;","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yooplo"},"content":"    -fx-font-family: \"Segoe UI Light\";","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yooplo"},"content":"    -fx-text-fill: white;","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yooplo"},"content":"    -fx-alignment: center-left;","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yooplo"},"content":"    -fx-opacity: 1;","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yooplo"},"content":".list-cell:filled:even {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yooplo"},"content":"    -fx-background-color: #3C4B76; /* Intermediate blue */","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yooplo"},"content":".list-cell:filled:odd {","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yooplo"},"content":"    -fx-background-color: #445C87; /* Another shade for contrast */","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yooplo"},"content":".list-cell:filled:selected {","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yooplo"},"content":"    -fx-background-color: #FFA500; /* Orange for selection */","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yooplo"},"content":"    -fx-text-fill: #2B3A67;","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yooplo"},"content":"/* Styling for selected cardPane in list */","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yooplo"},"content":".list-cell:filled:selected #cardPane {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yooplo"},"content":"    -fx-border-color: #FF8C00; /* Darker orange border */","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yooplo"},"content":"    -fx-border-width: 1;","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yooplo"},"content":"/* Styling for cards when not selected and hovered over */","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yooplo"},"content":".list-cell:filled:hover {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yooplo"},"content":"    -fx-background-color: #2B3A67; /* darker blue on hover */","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yooplo"},"content":"    -fx-cursor: hand;","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yooplo"},"content":"/* Styling for cards when selected and hovered over */","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yooplo"},"content":".list-cell:selected:hover {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yooplo"},"content":"    -fx-background-color: #FF8C00; /* Dark orange when selected and hovered */","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yooplo"},"content":"    -fx-cursor: hand;","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yooplo"},"content":".list-cell .label {","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yooplo"},"content":"    -fx-text-fill: white;","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yooplo"},"content":"/* Button Styles */","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yooplo"},"content":".button {","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yooplo"},"content":"    -fx-padding: 5 22 5 22;","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yooplo"},"content":"    -fx-border-color: #FFA500; /* Orange border */","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yooplo"},"content":"    -fx-border-width: 2;","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yooplo"},"content":"    -fx-background-radius: 5;","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yooplo"},"content":"    -fx-background-color: #2B3A67;","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yooplo"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yooplo"},"content":"    -fx-font-size: 11pt;","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yooplo"},"content":"    -fx-text-fill: #FFFFFF; /* White text */","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yooplo"},"content":"    -fx-transition: background-color 0.3s, color 0.3s;","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yooplo"},"content":".menu-bar {","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yooplo"},"content":"    -fx-background-color: #34495E; /* A lighter blue than background */","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yooplo"},"content":".menu-bar .label {","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yooplo"},"content":"    -fx-font-size: 13pt;","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yooplo"},"content":"    -fx-font-family: \"Segoe UI SemiBold\";","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yooplo"},"content":"    -fx-text-fill: #FF8C00;","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yooplo"},"content":"    -fx-opacity: 0.9;","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yooplo"},"content":"    -fx-font-weight: bold;","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yooplo"},"content":".status-bar {","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yooplo"},"content":"    -fx-background-color: #2D4059; /* Dark blue for status bar */","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yooplo"},"content":".status-bar .label {","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yooplo"},"content":"    -fx-font-family: \"Segoe UI Light\";","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yooplo"},"content":"    -fx-text-fill: white;","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yooplo"},"content":"    -fx-padding: 6px;","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yooplo"},"content":"    -fx-pref-height: 30px;","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yooplo"},"content":"#commandTypeLabel {","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yooplo"},"content":"    -fx-font-size: 11px;","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yooplo"},"content":"    -fx-text-fill: #FFA500; /* Orange for label text */","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yooplo"},"content":"#tags .label {","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yooplo"},"content":"    -fx-text-fill: white;","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yooplo"},"content":"    -fx-background-color: #3e7b91; /* Consistent with subdued blue tone */","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yooplo"},"content":"    -fx-padding: 3px 5px;","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yooplo"},"content":"    -fx-border-radius: 3;","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yooplo"},"content":"    -fx-background-radius: 3;","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yooplo"},"content":"/* Panel Styling */","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yooplo"},"content":".tag-list-panel, .person-list-panel {","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yooplo"},"content":"    -fx-background-color: #2B3A67; /* Deep blue for consistency */","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yooplo"},"content":"    -fx-padding: 10px;","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yooplo"},"content":"    -fx-border-color: #FF8C00; /* Darker orange border */","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yooplo"},"content":"    -fx-border-width: 2;","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yooplo"},"content":"    -fx-border-radius: 5;","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yooplo"},"content":"    -fx-background-radius: 5;","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false}],"authorContributionMap":{"yooplo":176}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"KrashKart"},"content":"#helpMessage {","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"#ugLink {","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"    -fx-text-fill: #11BBFF; /* Slightly different blue for contrast with bg */","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":"    -fx-opacity: 0.9;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":"    -fx-border-color: transparent;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"#ugLink:hover {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KrashKart"},"content":"    -fx-text-fill: #FFA500; /* Orange text */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KrashKart"},"content":"    -fx-opacity: 1.0;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KrashKart"},"content":"    -fx-border-color: transparent;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KrashKart"},"content":"    -fx-cursor: hand;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KrashKart"},"content":"#ugLink:visited {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KrashKart"},"content":"    -fx-text-fill: #966afc; /* Purple text */","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KrashKart"},"content":"    -fx-opacity: 0.9;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KrashKart"},"content":"    -fx-border-color: transparent;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KrashKart"},"content":"/* Same font, background as the main CampusConnectTheme*/","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"#helpMessageContainer {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KrashKart"},"content":"    -fx-font-size: 10pt;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KrashKart"},"content":"    -fx-font-family: \"Segoe UI\", sans-serif;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KrashKart"},"content":"    -fx-background-color: #2B3A67;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":18,"-":11}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"\u003c?import javafx.scene.control.Hyperlink?\u003e","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KrashKart"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"CampusConnect Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KrashKart"},"content":"    \u003cImage url\u003d\"@/images/HelpWindowLogo.png\" requestedWidth\u003d\"100\"/\u003e","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KrashKart"},"content":"              \u003cInsets left\u003d\"3.0\" top\u003d\"3.0\" right\u003d\"0.0\"/\u003e","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KrashKart"},"content":"          \u003cHyperlink fx:id\u003d\"ugLink\"\u003e","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KrashKart"},"content":"              \u003cInsets top\u003d\"3.0\" left\u003d\"0.0\"/\u003e","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KrashKart"},"content":"            \u003cpadding\u003e","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KrashKart"},"content":"              \u003cInsets top\u003d\"0.1\" left\u003d\"0.1\"/\u003e","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KrashKart"},"content":"            \u003c/padding\u003e","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KrashKart"},"content":"          \u003c/Hyperlink\u003e","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","isFullCredit":false}],"authorContributionMap":{"KrashKart":10,"-":36}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KrashKart"},"content":"         title\u003d\"CampusConnect\" minWidth\u003d\"640\" minHeight\u003d\"480\" onCloseRequest\u003d\"#handleExit\"\u003e","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KrashKart"},"content":"    \u003cImage url\u003d\"@/images/CampusConnectLogo.png\" /\u003e","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"        \u003cURL value\u003d\"@CampusConnectTheme.css\" /\u003e","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"        \u003cURL value\u003d\"@CampusConnectExtensions.css\" /\u003e","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"        \u003cURL value\u003d\"@TagCardStyles.css\" /\u003e","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KrashKart"},"content":"                   minHeight\u003d\"115\" prefHeight\u003d\"115\" maxHeight\u003d\"115\"\u003e","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"        \u003cSplitPane VBox.vgrow\u003d\"ALWAYS\"\u003e","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"          \u003c!-- Person List Section --\u003e","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yooplo"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yooplo"},"content":"          \u003c!-- Tags List Section --\u003e","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"          \u003cVBox fx:id\u003d\"tagsList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"300\" prefWidth\u003d\"300\" VBox.vgrow\u003d\"ALWAYS\"\u003e","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"            \u003cpadding\u003e","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yooplo"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yooplo"},"content":"            \u003c/padding\u003e","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yooplo"},"content":"            \u003cStackPane fx:id\u003d\"tagsListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yooplo"},"content":"          \u003c/VBox\u003e","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yooplo"},"content":"        \u003c/SplitPane\u003e","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","isFullCredit":false}],"authorContributionMap":{"yooplo":15,"KrashKart":3,"-":55}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"person-card\"\u003e","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KrashKart"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"75\" GridPane.columnIndex\u003d\"0\"\u003e","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Baskar Gopinath"},"content":"      \u003cHBox spacing\u003d\"0.5\" alignment\u003d\"CENTER_LEFT\"\u003e","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","isFullCredit":false}],"authorContributionMap":{"yooplo":1,"KrashKart":1,"Baskar Gopinath":1,"-":32}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"person-list-panel\"/\u003e","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","isFullCredit":false}],"authorContributionMap":{"yooplo":1,"-":7}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17\"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" prefHeight\u003d\"115\"/\u003e","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","isFullCredit":false}],"authorContributionMap":{"KrashKart":1,"-":8}},{"path":"src/main/resources/view/TagCard.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yooplo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yooplo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yooplo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"tag-card\"\u003e","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"    \u003cchildren\u003e","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"        \u003cLabel fx:id\u003d\"tagName\" /\u003e","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":"    \u003c/children\u003e","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":"\u003c/HBox\u003e","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false}],"authorContributionMap":{"yooplo":12}},{"path":"src/main/resources/view/TagCardStyles.css","fileType":"css","lines":[{"lineNumber":1,"author":{"gitId":"yooplo"},"content":".tag-card {","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yooplo"},"content":"    -fx-padding: 8px;","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yooplo"},"content":"    -fx-border-width: 1;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yooplo"},"content":"    -fx-border-radius: 10;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"    -fx-margin: 5px;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"    -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.2), 5, 0, 0, 1);","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":".tag-card .label {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":"    -fx-font-size: 12pt;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"    -fx-font-family: \"Segoe UI SemiBold\";","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"    -fx-text-fill: white;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"    -fx-opacity: 0.9;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"    -fx-alignment: center; /* Center text */","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":15}},{"path":"src/main/resources/view/TagListPanel.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yooplo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yooplo"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yooplo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"    \u003cListView fx:id\u003d\"tagListView\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"tag-list-panel\"/\u003e","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"\u003c/VBox\u003e","isFullCredit":false}],"authorContributionMap":{"yooplo":8}},{"path":"src/test/data/JsonSerializableCampusConnectTest/typicalPersonsCampusConnect.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yooplo"},"content":"  \"_comment\": \"CampusConnect save file which contains the same Person values as in TypicalPersons#getTypicalCampusConnect()\",","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"tags\" : [ \"friends\" ]","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"tags\" : [ \"owesMoney\", \"friends\" ]","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }, {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"tags\" : [ ]","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"tags\" : [ \"friends\" ]","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KrashKart"},"content":"    \"phone\" : \"84822246\",","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"tags\" : [ ]","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KrashKart"},"content":"    \"phone\" : \"64824274\",","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"tags\" : [ ]","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KrashKart"},"content":"    \"phone\" : \"64824432\",","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"tags\" : [ ]","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"  } ]","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":1,"KrashKart":3,"-":42}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"  \"campusConnectFilePath\" : \"CampusConnect.json\"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"json","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":"  \"campusConnectFilePath\" : \"CampusConnect.json\"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":1,"-":10}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"        assertNotNull(AppUtil.getImage(\"/images/campusConnect.png\"));","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.ReadOnlyCampusConnect;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"import seedu.address.storage.JsonCampusConnectStorage;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yooplo"},"content":"        JsonCampusConnectStorage campusConnectStorage \u003d","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yooplo"},"content":"                new JsonCampusConnectStorage(temporaryFolder.resolve(\"CampusConnect.json\"));","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"        StorageManager storage \u003d new StorageManager(campusConnectStorage, userPrefsStorage);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            String expectedMessage) {","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yooplo"},"content":"        Model expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yooplo"},"content":"        // Inject LogicManager with an CampusConnectStorage that throws the IOException e when saving","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yooplo"},"content":"        JsonCampusConnectStorage campusConnectStorage \u003d new JsonCampusConnectStorage(prefPath) {","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            @Override","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yooplo"},"content":"            public void saveCampusConnect(ReadOnlyCampusConnect campusConnect, Path filePath)","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    throws IOException {","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"                throw e;","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        };","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yooplo"},"content":"        StorageManager storage \u003d new StorageManager(campusConnectStorage, userPrefsStorage);","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yooplo"},"content":"        // Triggers the saveCampusConnect method by executing an add command","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"KrashKart"},"content":"                + EMAIL_DESC_AMY;","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":11,"KrashKart":1,"-":162}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"        model \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"        Model expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"        Person personInList \u003d model.getCampusConnect().getPersonList().get(0);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":4,"-":44}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.ReadOnlyCampusConnect;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.tag.TagCategory;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yooplo"},"content":"        public Path getCampusConnectFilePath() {","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yooplo"},"content":"        public void setCampusConnectFilePath(Path campusConnectFilePath) {","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yooplo"},"content":"        public void setCampusConnect(ReadOnlyCampusConnect campusConnect) {","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yooplo"},"content":"        public ReadOnlyCampusConnect getCampusConnect() {","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Christopher Tan"},"content":"        @Override","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Christopher Tan"},"content":"        public void refreshCampusConnect() {","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"CYX22222003"},"content":"        @Override","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"CYX22222003"},"content":"        public void deletePersonTag(Person p, Tag tag) {","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"CYX22222003"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yooplo"},"content":"        @Override","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yooplo"},"content":"        public ObservableList\u003cTag\u003e getListOfCurrentTags() {","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yooplo"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yooplo"},"content":"        }","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"CYX22222003"},"content":"        @Override","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"CYX22222003"},"content":"        public void insertPerson(Person p, int ind) {","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"CYX22222003"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"CYX22222003"},"content":"        @Override","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"CYX22222003"},"content":"        public void undoCampusConnect() {","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"CYX22222003"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"Christopher Tan"},"content":"        @Override","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"Christopher Tan"},"content":"        public void redoCampusConnect() {","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"Christopher Tan"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"CYX22222003"},"content":"        @Override","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"CYX22222003"},"content":"        public void saveCurrentCampusConnect() {","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"CYX22222003"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"CYX22222003"},"content":"        @Override","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"Christopher Tan"},"content":"        public void addPersonTags(Person p, Set\u003cTag\u003e tags) {","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"CYX22222003"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"Christopher Tan"},"content":"        @Override","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"Christopher Tan"},"content":"        public boolean containsTag(Tag tag) {","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"Christopher Tan"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"Christopher Tan"},"content":"        @Override","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"Christopher Tan"},"content":"        public void setTagsCategory(Tag t, TagCategory cat) {","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Christopher Tan"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Christopher Tan"},"content":"        @Override","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Christopher Tan"},"content":"        public TagCategory getTagCategory(Tag t) {","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Christopher Tan"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"Christopher Tan"},"content":"        }","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"CYX22222003"},"content":"        @Override","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"CYX22222003"},"content":"        public void undoExceptionalCommand() {","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"CYX22222003"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        private final Person person;","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"            requireNonNull(person);","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"            this.person \u003d person;","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"            requireNonNull(person);","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"            requireNonNull(person);","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"            requireNonNull(person);","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"yooplo"},"content":"        public ReadOnlyCampusConnect getCampusConnect() {","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"yooplo"},"content":"            return new CampusConnect();","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":14,"CYX22222003":27,"-":201,"Christopher Tan":24}},{"path":"src/test/java/seedu/address/logic/commands/AddTagCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KrashKart"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KrashKart"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KrashKart"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KrashKart"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KrashKart"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KrashKart"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KrashKart"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KrashKart"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KrashKart"},"content":"public class AddTagCommandTest {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KrashKart"},"content":"    private Model model;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KrashKart"},"content":"    private Model expectedModel;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KrashKart"},"content":"    @BeforeEach","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KrashKart"},"content":"    public void setUp() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KrashKart"},"content":"        model \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KrashKart"},"content":"        expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KrashKart"},"content":"    public void execute_invalidIndex_throwsCommandException() {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KrashKart"},"content":"        int startingModelSize \u003d model.getCampusConnect().getPersonList().size();","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KrashKart"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(List.of(new Tag(\"sample\")));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KrashKart"},"content":"        // index \u003e\u003d size of PersonList","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KrashKart"},"content":"        Index index \u003d Index.fromZeroBased(startingModelSize);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KrashKart"},"content":"        AddTagCommand addTagCommand \u003d new AddTagCommand(index, tags);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KrashKart"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KrashKart"},"content":"        assertCommandFailure(addTagCommand, model, expectedMessage);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KrashKart"},"content":"    public void execute_duplicateTag_throwsCommandException() {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KrashKart"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(List.of(new Tag(\"friends\"), new Tag(\"owesMoney\")));","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KrashKart"},"content":"        Index indexOne \u003d Index.fromZeroBased(0);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KrashKart"},"content":"        Index indexTwo \u003d Index.fromZeroBased(1);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KrashKart"},"content":"        // one conflict: one duplicate tag","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KrashKart"},"content":"        // two conflict: both tags are duplicates","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KrashKart"},"content":"        AddTagCommand addTagCommandOneConflict \u003d new AddTagCommand(indexOne, tags);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KrashKart"},"content":"        AddTagCommand addTagCommandTwoConflict \u003d new AddTagCommand(indexTwo, tags);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KrashKart"},"content":"        String expectedMessageOne \u003d String.format(AddTagCommand.MESSAGE_CONTAINS_DUPLICATE_TAG,","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KrashKart"},"content":"                Messages.format(ALICE));","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KrashKart"},"content":"        String expectedMessageTwo \u003d String.format(AddTagCommand.MESSAGE_CONTAINS_DUPLICATE_TAG,","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KrashKart"},"content":"                Messages.format(BENSON));","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KrashKart"},"content":"        assertCommandFailure(addTagCommandOneConflict, model, expectedMessageOne);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KrashKart"},"content":"        assertCommandFailure(addTagCommandTwoConflict, model, expectedMessageTwo);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KrashKart"},"content":"    public void execute_validTagsAndIndex_tagsAdded() {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"KrashKart"},"content":"        AddTagCommand addTagCommand;","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KrashKart"},"content":"        String expectedMessage;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KrashKart"},"content":"        Set\u003cTag\u003e oneTag \u003d new HashSet\u003c\u003e(List.of(new Tag(\"colleagues\")));","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KrashKart"},"content":"        Set\u003cTag\u003e twoTags \u003d new HashSet\u003c\u003e(","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KrashKart"},"content":"                List.of(new Tag(\"CS2100\"), new Tag(\"classmate\")));","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KrashKart"},"content":"        Index indexOne \u003d Index.fromZeroBased(0);","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KrashKart"},"content":"        Index indexLast \u003d Index.fromZeroBased(6);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"KrashKart"},"content":"        // add one valid tag to person with pre-existing tag","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"KrashKart"},"content":"        addTagCommand \u003d new AddTagCommand(indexOne, oneTag);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"KrashKart"},"content":"        expectedModel.addPersonTags(ALICE, oneTag); // add the tag to ALICE through the expected model","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"KrashKart"},"content":"        Person newAlice \u003d ALICE.addTag(oneTag); // add the tag to ALICE manually to get the success message","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"KrashKart"},"content":"        expectedMessage \u003d String.format(AddTagCommand.MESSAGE_ADD_TAG_SUCCESS, Messages.format(newAlice));","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"KrashKart"},"content":"        assertCommandSuccess(addTagCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"KrashKart"},"content":"        // add multiple valid tags to person without pre-existing tag","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"KrashKart"},"content":"        addTagCommand \u003d new AddTagCommand(indexLast, twoTags);","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"KrashKart"},"content":"        expectedModel.addPersonTags(GEORGE, twoTags); // add tags to GEORGE for the expected model","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"KrashKart"},"content":"        Person newGeorge \u003d GEORGE.addTag(twoTags); // add the tags to GEORGE manually for success message","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"KrashKart"},"content":"        expectedMessage \u003d String.format(AddTagCommand.MESSAGE_ADD_TAG_SUCCESS, Messages.format(newGeorge));","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"KrashKart"},"content":"        assertCommandSuccess(addTagCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"KrashKart"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"KrashKart"},"content":"        Index indexZero \u003d Index.fromZeroBased(0);","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"KrashKart"},"content":"        Index indexOne \u003d Index.fromZeroBased(1);","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"KrashKart"},"content":"        Set\u003cTag\u003e tagsZero \u003d new HashSet\u003c\u003e(List.of(new Tag(\"sample\")));","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"KrashKart"},"content":"        Set\u003cTag\u003e tagsOne \u003d new HashSet\u003c\u003e(List.of(new Tag(\"sample\"), new Tag(\"honkydonky\")));","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"KrashKart"},"content":"        AddTagCommand addTagZeroCommand \u003d new AddTagCommand(indexZero, tagsZero);","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"KrashKart"},"content":"        AddTagCommand addTagOneCommand;","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"KrashKart"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"KrashKart"},"content":"        assertEquals(addTagZeroCommand, addTagZeroCommand);","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"KrashKart"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"KrashKart"},"content":"        AddTagCommand addTagZeroCommandCopy \u003d new AddTagCommand(indexZero, tagsZero);","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"KrashKart"},"content":"        assertEquals(addTagZeroCommand, addTagZeroCommandCopy);","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"KrashKart"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"KrashKart"},"content":"        assertNotEquals(1, addTagZeroCommand);","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"KrashKart"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"KrashKart"},"content":"        assertNotEquals(null, addTagZeroCommand);","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"KrashKart"},"content":"        // different index -\u003e returns false","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"KrashKart"},"content":"        addTagOneCommand \u003d new AddTagCommand(indexOne, tagsZero);","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"KrashKart"},"content":"        assertNotEquals(addTagZeroCommand, addTagOneCommand);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"KrashKart"},"content":"        // different tags -\u003e returns false","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"KrashKart"},"content":"        addTagOneCommand \u003d new AddTagCommand(indexZero, tagsOne);","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"KrashKart"},"content":"        assertNotEquals(addTagZeroCommand, addTagOneCommand);","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"KrashKart"},"content":"}","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false}],"authorContributionMap":{"KrashKart":131}},{"path":"src/test/java/seedu/address/logic/commands/CategorizeTagCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Christopher Tan"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Christopher Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Christopher Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Christopher Tan"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.tag.TagCategory;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Christopher Tan"},"content":"public class CategorizeTagCommandTest {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"    private static final String TEST_TAG_1 \u003d \"test\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"    private static final String TEST_TAG_2 \u003d \"test2\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Christopher Tan"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"        CategorizeTagCommand commandA \u003d new CategorizeTagCommand(List.of(new Tag(TEST_TAG_1)), TagCategory.ACADEMICS);","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"        CategorizeTagCommand commandB \u003d new CategorizeTagCommand(List.of(new Tag(TEST_TAG_2)), TagCategory.ACADEMICS);","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"        CategorizeTagCommand commandC \u003d new CategorizeTagCommand(List.of(new Tag(TEST_TAG_1)), TagCategory.GENERAL);","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"        CategorizeTagCommand commandD \u003d new CategorizeTagCommand(List.of(new Tag(TEST_TAG_1)), TagCategory.ACADEMICS);","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"        CategorizeTagCommand commandE \u003d new CategorizeTagCommand(","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"                Arrays.asList(new Tag(TEST_TAG_1), new Tag(TEST_TAG_2)), TagCategory.ACADEMICS);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"        // Same object -\u003e returns true","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"        assertTrue(commandA.equals(commandA));","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"        // Same tags and category -\u003e returns true","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":"        assertTrue(commandA.equals(commandD));","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"        // Different tags -\u003e returns false","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"        assertFalse(commandA.equals(commandB));","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"        // Different categories -\u003e returns false","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"        assertFalse(commandA.equals(commandC));","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"        // Different number of tags -\u003e returns false","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"        assertFalse(commandA.equals(commandE));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"        // Different object type -\u003e returns false","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"        assertFalse(commandA.equals(new Object()));","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Christopher Tan"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":29,"Christopher Tan":16}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"    public void execute_emptyCampusConnect_success() {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"    public void execute_nonEmptyCampusConnect_success() {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"        Model model \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"        expectedModel.setCampusConnect(new CampusConnect());","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"        ClearCommand c1 \u003d new ClearCommand();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"        ClearCommand c2 \u003d new ClearCommand();","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(c1.equals(c2));","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":7,"CYX22222003":9,"-":25}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KrashKart"},"content":"    public static final String VALID_PHONE_AMY \u003d \"91111111\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KrashKart"},"content":"    public static final String VALID_PHONE_BOB \u003d \"82222222\";","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CYX22222003"},"content":"    public static final String INVALID_TAG_DESC_NO_SPACE \u003d PREFIX_TAG + \"hubby*\";","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    static {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KrashKart"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KrashKart"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            Model expectedModel) {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            Model expectedModel) {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yooplo"},"content":"        CampusConnect expectedCampusConnect \u003d new CampusConnect(actualModel.getCampusConnect());","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yooplo"},"content":"        assertEquals(expectedCampusConnect, actualModel.getCampusConnect());","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CYX22222003"},"content":"     * Executes the given code command without comparing data model","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"CYX22222003"},"content":"     *","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"CYX22222003"},"content":"     * @param command command object to be executed","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"CYX22222003"},"content":"     * @param model model to be executed on","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CYX22222003"},"content":"     * @param expectedMsg expected message to be thrown","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"CYX22222003"},"content":"    public static void assertCommandFailureWithoutModel(Command command, Model model, String expectedMsg) {","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"CYX22222003"},"content":"        assertThrows(CommandException.class, expectedMsg, () -\u003e command.execute(model));","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":3,"KrashKart":4,"CYX22222003":13,"-":114}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"    private Model model \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KrashKart"},"content":"                Messages.format(personToDelete) + DeleteCommand.MESSAGE_DELETE_LIST_EMPTY);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"        Model expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yooplo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getCampusConnect().getPersonList().size());","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":5,"KrashKart":1,"-":114}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTagCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalPersons.FRIEND_TAG;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalPersons.OWES_MONEY_TAG;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"public class DeleteTagCommandTest {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"    private static final Model model \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"    private static final String DEFAULT_TAG \u003d \"test\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"    private static final String DEFAULT_TAG_SECOND \u003d \"test2\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"    private static final String TEST_EMAIL \u003d \"test@test\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"    private static final String TEST_PHONE \u003d \"84209817\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"    private static final String TEST_USER \u003d \"test user\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"    public void execute_validIndexPersonList_success() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"        Person p \u003d new PersonBuilder(firstPerson).withName(TEST_USER).withEmail(TEST_EMAIL)","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"                .withPhone(TEST_PHONE).withTags(FRIEND_TAG, OWES_MONEY_TAG).build();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"        model.setPerson(firstPerson, p);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"        Person expectedPerson \u003d new PersonBuilder(firstPerson).withName(TEST_USER).withEmail(TEST_EMAIL)","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"                .withPhone(TEST_PHONE).withTags(OWES_MONEY_TAG).build();","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"        expectedModel.setPerson(firstPerson, expectedPerson);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, new Tag(FRIEND_TAG));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_DELETE_TAG_SUCCESS,","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CYX22222003"},"content":"                new Tag(FRIEND_TAG), p.getName());","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CYX22222003"},"content":"        assertCommandSuccess(deleteTagCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CYX22222003"},"content":"    public void execute_invalidIndexPersonList_throwsCommandException() {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CYX22222003"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CYX22222003"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(outOfBoundIndex, new Tag(DEFAULT_TAG));","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CYX22222003"},"content":"        assertCommandFailure(deleteTagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CYX22222003"},"content":"    public void execute_personHasNoTag_throwsCommandException() {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CYX22222003"},"content":"        Index lastIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CYX22222003"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(lastIndex, new Tag(DEFAULT_TAG));","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"        assertCommandFailure(deleteTagCommand, model, Messages.MESSAGE_NO_TAG);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CYX22222003"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CYX22222003"},"content":"        DeleteTagCommand deleteTagCommandA \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, new Tag(DEFAULT_TAG));","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CYX22222003"},"content":"        DeleteTagCommand deleteTagCommandB \u003d new DeleteTagCommand(INDEX_SECOND_PERSON, new Tag(DEFAULT_TAG));","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CYX22222003"},"content":"        DeleteTagCommand deleteTagCommandC \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, new Tag(DEFAULT_TAG_SECOND));","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CYX22222003"},"content":"        DeleteTagCommand deleteTagCommandD \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, new Tag(DEFAULT_TAG));","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(deleteTagCommandA.equals(deleteTagCommandD));","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(deleteTagCommandA.equals(deleteTagCommandA));","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(deleteTagCommandA.equals(deleteTagCommandB));","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(deleteTagCommandA.equals(deleteTagCommandC));","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":77}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"blackpanther9229"},"content":"import static org.junit.jupiter.api.Assertions.fail;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailureWithoutModel;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"blackpanther9229"},"content":"import static seedu.address.logic.commands.EditCommand.MESSAGE_DUPLICATE_PERSON;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"blackpanther9229"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"blackpanther9229"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommandTest {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"    private Model model \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"        Model expectedModel \u003d new ModelManager(new CampusConnect(model.getCampusConnect()), new UserPrefs());","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CYX22222003"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CYX22222003"},"content":"        expectedModel.deletePerson(firstPerson);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CYX22222003"},"content":"        expectedModel.insertPerson(editedPerson, INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CYX22222003"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CYX22222003"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CYX22222003"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).withEmail(VALID_EMAIL_BOB).build();","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yooplo"},"content":"        Model expectedModel \u003d new ModelManager(new CampusConnect(model.getCampusConnect()), new UserPrefs());","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yooplo"},"content":"        Model expectedModel \u003d new ModelManager(new CampusConnect(model.getCampusConnect()), new UserPrefs());","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CYX22222003"},"content":"        Person firstPerson \u003d expectedModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CYX22222003"},"content":"        expectedModel.deletePerson(firstPerson);","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CYX22222003"},"content":"        expectedModel.insertPerson(firstPerson, INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CYX22222003"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList)","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Christopher Tan"},"content":"                .withName(VALID_NAME_BOB)","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Christopher Tan"},"content":"                .withEmail(VALID_EMAIL_BOB)","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Christopher Tan"},"content":"                .withPhone(VALID_PHONE_BOB).build();","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Christopher Tan"},"content":"        EditCommand editCommand \u003d new EditCommand(","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Christopher Tan"},"content":"                INDEX_FIRST_PERSON,","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Christopher Tan"},"content":"                new EditPersonDescriptorBuilder()","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Christopher Tan"},"content":"                        .withName(VALID_NAME_BOB)","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Christopher Tan"},"content":"                        .withEmail(VALID_EMAIL_BOB)","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Christopher Tan"},"content":"                        .withPhone(VALID_PHONE_BOB).build()","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Christopher Tan"},"content":"        );","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yooplo"},"content":"        Model expectedModel \u003d new ModelManager(new CampusConnect(model.getCampusConnect()), new UserPrefs());","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CYX22222003"},"content":"        expectedModel.deletePerson(personInFilteredList);","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CYX22222003"},"content":"        expectedModel.insertPerson(editedPerson, INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"blackpanther9229"},"content":"        assertCommandFailure(editCommand, model, MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yooplo"},"content":"        Person personInList \u003d model.getCampusConnect().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"CYX22222003"},"content":"        assertCommandFailureWithoutModel(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yooplo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getCampusConnect().getPersonList().size());","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"blackpanther9229"},"content":"    @Test","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"blackpanther9229"},"content":"    public void executeMethodCheckDuplicate1() {","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"blackpanther9229"},"content":"        Model testModel \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"blackpanther9229"},"content":"        Index index \u003d Index.fromOneBased(4);","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"blackpanther9229"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"blackpanther9229"},"content":"        editPersonDescriptor.setName(new Name(\"Alice Pauline\"));","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"blackpanther9229"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"blackpanther9229"},"content":"        try {","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"blackpanther9229"},"content":"            editCommand.execute(testModel);","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"blackpanther9229"},"content":"            fail(\"CommandException expected\");","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"blackpanther9229"},"content":"        } catch (CommandException e) {","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"blackpanther9229"},"content":"            assertEquals(e.getMessage(), MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"blackpanther9229"},"content":"        }","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"blackpanther9229"},"content":"    }","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"blackpanther9229"},"content":"    @Test","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"blackpanther9229"},"content":"    public void executeMethodCheckDuplicate2() {","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"blackpanther9229"},"content":"        Model testModel \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"blackpanther9229"},"content":"        Index index \u003d Index.fromOneBased(1);","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"blackpanther9229"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"blackpanther9229"},"content":"        editPersonDescriptor.setName(new Name(\"Alice Pauline\"));","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"blackpanther9229"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"blackpanther9229"},"content":"        try {","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"blackpanther9229"},"content":"            editCommand.execute(testModel);","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"blackpanther9229"},"content":"        } catch (CommandException e) {","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"blackpanther9229"},"content":"            fail(\"No Exception Expected\");","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"blackpanther9229"},"content":"        }","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"blackpanther9229"},"content":"    }","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"blackpanther9229"},"content":"","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":9,"CYX22222003":17,"-":165,"Christopher Tan":10,"blackpanther9229":38}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KrashKart"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", tags\u003d\"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":1,"-":64}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"        model \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"        expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":3,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Christopher Tan"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Christopher Tan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Christopher Tan"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Christopher Tan"},"content":"public class RedoCommandTest {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Christopher Tan"},"content":"    private Model model \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"    public void execute_emptyFutureAndHistoryStack_failure() {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"        assertCommandFailure(new RedoCommand(), model, Messages.MESSAGE_REDO_FAILURE);","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"    public void execute_emptyFutureStack_failure() {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"        model.saveCurrentCampusConnect();","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"        Person person \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"        model.deletePerson(person);","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"        assertCommandFailure(new RedoCommand(), model, Messages.MESSAGE_REDO_FAILURE);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"    public void execute_nonEmptyFutureStack_success() {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"        String expectedUndoMessage \u003d UndoCommand.MESSAGE_SUCCESS;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"        String expectedRedoMessage \u003d RedoCommand.MESSAGE_SUCCESS;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"        model.saveCurrentCampusConnect();","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"        Person person \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"        model.deletePerson(person);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"        ModelManager expectedRedoneModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"        assertCommandSuccess(undoCommand, model, expectedUndoMessage, expectedModel);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CYX22222003"},"content":"        assertCommandSuccess(new RedoCommand(), model, expectedRedoMessage, expectedRedoneModel);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Christopher Tan"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":32,"Christopher Tan":16}},{"path":"src/test/java/seedu/address/logic/commands/SuperFindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yooplo"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yooplo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yooplo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.person.ContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"public class SuperFindCommandTest {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"    private Model model;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"    private final String nameKeyword \u003d \"Alice\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"    private final String phoneKeyword \u003d \"94351253\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"    private final String tagKeyword \u003d \"Friend\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"    private final String emailKeyword \u003d \"alice@example.com\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":"    @BeforeEach","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"    public void setUp() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"        model \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"    public void execute_validNameKeyword_success() {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"        ContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(nameKeyword));","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand command \u003d new SuperFindCommand(predicate);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"        Model expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"        expectedModel.updateFilteredPersonList(predicate);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yooplo"},"content":"    public void execute_emptyNameKeyword_success() {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"        ContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"\"));","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand command \u003d new SuperFindCommand(predicate);","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yooplo"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"        Model expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"        expectedModel.updateFilteredPersonList(predicate);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"        // should return all persons","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"    public void execute_validEmailKeyword_success() {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yooplo"},"content":"        ContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(emailKeyword));","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand command \u003d new SuperFindCommand(predicate);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yooplo"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yooplo"},"content":"        Model expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yooplo"},"content":"        expectedModel.updateFilteredPersonList(predicate);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yooplo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yooplo"},"content":"    public void execute_emptyEmailKeyword_success() {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yooplo"},"content":"        ContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"\"));","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand command \u003d new SuperFindCommand(predicate);","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yooplo"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yooplo"},"content":"        Model expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yooplo"},"content":"        expectedModel.updateFilteredPersonList(predicate);","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yooplo"},"content":"        // should return all persons","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yooplo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yooplo"},"content":"    public void execute_emptyPhoneKeyword_success() {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yooplo"},"content":"        ContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"\"));","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand command \u003d new SuperFindCommand(predicate);","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yooplo"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yooplo"},"content":"        Model expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yooplo"},"content":"        expectedModel.updateFilteredPersonList(predicate);","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yooplo"},"content":"        // should return all persons","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yooplo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yooplo"},"content":"    public void execute_validPhoneKeyword_success() {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yooplo"},"content":"        ContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(phoneKeyword));","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand command \u003d new SuperFindCommand(predicate);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yooplo"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yooplo"},"content":"        Model expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yooplo"},"content":"        expectedModel.updateFilteredPersonList(predicate);","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yooplo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yooplo"},"content":"    public void execute_validTagKeyword_success() {","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yooplo"},"content":"        ContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(tagKeyword));","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand command \u003d new SuperFindCommand(predicate);","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yooplo"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yooplo"},"content":"        Model expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yooplo"},"content":"        expectedModel.updateFilteredPersonList(predicate);","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yooplo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yooplo"},"content":"    public void execute_emptyTagKeyword_success() {","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yooplo"},"content":"        ContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"\"));","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand command \u003d new SuperFindCommand(predicate);","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yooplo"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yooplo"},"content":"        Model expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yooplo"},"content":"        expectedModel.updateFilteredPersonList(predicate);","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yooplo"},"content":"        // should return all persons","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yooplo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yooplo"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yooplo"},"content":"        ContainsKeywordsPredicate predicateA \u003d new NameContainsKeywordsPredicate(Arrays.asList(nameKeyword));","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yooplo"},"content":"        ContainsKeywordsPredicate predicateB \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(phoneKeyword));","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand commandA \u003d new SuperFindCommand(predicateA);","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand commandB \u003d new SuperFindCommand(predicateB);","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand commandC \u003d new SuperFindCommand(predicateA);","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yooplo"},"content":"        assertTrue(commandA.equals(commandC));","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yooplo"},"content":"        assertFalse(commandA.equals(commandB));","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yooplo"},"content":"        assertFalse(commandA.equals(null));","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yooplo"},"content":"        assertFalse(commandA.equals(new Object()));","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":149}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNDO_FAILURE;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"public class UndoCommandTest {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"    private Model model \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"    public void execute_emptyHistoryStack_failure() {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"        assertCommandFailure(undoCommand, expectedModel, MESSAGE_UNDO_FAILURE);","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"    public void execute_nonEmptyHistoryStack_success() {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_SUCCESS;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"        model.saveCurrentCampusConnect();","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"        Person person \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"        model.deletePerson(person);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"        UndoCommand u1 \u003d new UndoCommand();","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"        UndoCommand u2 \u003d new UndoCommand();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(u1.equals(u1));","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(u1.equals(u2));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(u1.equals(null));","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":47}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // whitespace only preamble","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KrashKart"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KrashKart"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KrashKart"},"content":"                + TAG_DESC_FRIEND;","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple names","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple phones","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple emails","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // multiple fields repeated","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KrashKart"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"KrashKart"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_EMAIL, PREFIX_PHONE));","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid name","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid email","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid phone","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid name","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid email","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid phone","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // zero tags","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"KrashKart"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY,","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // missing name prefix","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"KrashKart"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"                expectedMessage);","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // missing phone prefix","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"KrashKart"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB,","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                expectedMessage);","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // missing email prefix","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"KrashKart"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB,","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"                expectedMessage);","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // all prefixes missing","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"KrashKart"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB,","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"                expectedMessage);","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // invalid name","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"KrashKart"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid phone","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"KrashKart"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // invalid email","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"KrashKart"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // invalid tag","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"KrashKart"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"KrashKart"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB,","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // non-empty preamble","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"KrashKart"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":16,"-":154}},{"path":"src/test/java/seedu/address/logic/parser/AddTagCommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KrashKart"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.commands.AddTagCommand.MESSAGE_NOT_ADD;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.commands.AddTagCommand.MESSAGE_USAGE;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC_NO_SPACE;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KrashKart"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KrashKart"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KrashKart"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KrashKart"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KrashKart"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KrashKart"},"content":"import seedu.address.logic.commands.AddTagCommand;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KrashKart"},"content":"public class AddTagCommandParserTest {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KrashKart"},"content":"    private AddTagCommandParser parser \u003d new AddTagCommandParser();","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KrashKart"},"content":"    public void parse_invalidFormat_throwsParseException() {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KrashKart"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE);","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KrashKart"},"content":"        assertParseFailure(parser, \"abcs\" + TAG_DESC_HUSBAND, expectedMessage);","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KrashKart"},"content":"    public void parse_invalidTagCharacter_throwsParseException() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KrashKart"},"content":"        String expectedMessage \u003d String.format(Tag.MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KrashKart"},"content":"        // one invalid tag","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_TAG_DESC_NO_SPACE, expectedMessage);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KrashKart"},"content":"        // two invalid tags","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"        assertParseFailure(parser, \"2 \" + INVALID_TAG_DESC_NO_SPACE + \" t/c#lassmate\", expectedMessage);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KrashKart"},"content":"    public void parse_emptyTag_throwsParseException() {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KrashKart"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NOT_ADD);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KrashKart"},"content":"        assertParseFailure(parser, \"2\", expectedMessage);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KrashKart"},"content":"    public void parse_validTagAndIndex_success() {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KrashKart"},"content":"        Index index \u003d Index.fromOneBased(3);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KrashKart"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(List.of(new Tag(\"walkie-talkie\"), new Tag(\"Samsung\")));","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KrashKart"},"content":"        AddTagCommand expectedCommand \u003d new AddTagCommand(index, tags);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KrashKart"},"content":"        assertParseSuccess(parser, \"3 t/     walkie-talkie   \\t\\n    t/Samsung\", expectedCommand);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KrashKart"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":52,"CYX22222003":3}},{"path":"src/test/java/seedu/address/logic/parser/CampusConnectParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"import seedu.address.logic.commands.Command;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.logic.commands.RedoCommand;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"import seedu.address.logic.commands.SuperFindCommand;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.person.CombinedContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"public class CampusConnectParserTest {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"    private final CampusConnectParser parser \u003d new CampusConnectParser();","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KrashKart"},"content":"    public void parseCommand_findByName() throws Exception {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand expectedCommand \u003d new SuperFindCommand(","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yooplo"},"content":"                new CombinedContainsKeywordsPredicate(List.of(","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yooplo"},"content":"                        new NameContainsKeywordsPredicate(keywords))","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yooplo"},"content":"                )","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yooplo"},"content":"        );","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yooplo"},"content":"        String input \u003d SuperFindCommand.COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yooplo"},"content":"                + keywords.stream()","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"KrashKart"},"content":"                        .map(keyword -\u003e PREFIX_NAME + keyword)","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yooplo"},"content":"                        .collect(Collectors.joining(\" \"));","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yooplo"},"content":"        Command command \u003d parser.parseCommand(input);","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yooplo"},"content":"        assertEquals(expectedCommand, command);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"KrashKart"},"content":"    public void parseCommand_findByPhone() throws Exception {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"KrashKart"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"995\", \"91234567\", \"132\");","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yooplo"},"content":"        // Adjust expectation if using combined predicates through AbstractFindCommand instead.","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand expectedCommand \u003d new SuperFindCommand(","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yooplo"},"content":"                new CombinedContainsKeywordsPredicate(List.of(","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yooplo"},"content":"                        new PhoneContainsKeywordsPredicate(keywords))","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yooplo"},"content":"                )","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yooplo"},"content":"        );","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yooplo"},"content":"        String input \u003d SuperFindCommand.COMMAND_WORD + \" \"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yooplo"},"content":"                + keywords.stream()","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"KrashKart"},"content":"                        .map(keyword -\u003e PREFIX_PHONE + keyword)","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yooplo"},"content":"                        .collect(Collectors.joining(\" \"));","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yooplo"},"content":"        Command command \u003d parser.parseCommand(input);","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yooplo"},"content":"        assertEquals(expectedCommand, command);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Christopher Tan"},"content":"    public void parseCommand_redo() throws Exception {","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Christopher Tan"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD) instanceof RedoCommand);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Christopher Tan"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD + \" 3\") instanceof RedoCommand);","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":26,"KrashKart":11,"-":94,"Christopher Tan":7}},{"path":"src/test/java/seedu/address/logic/parser/CategorizeTagCommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Christopher Tan"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Christopher Tan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Christopher Tan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Christopher Tan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Christopher Tan"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.logic.commands.CategorizeTagCommand;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Christopher Tan"},"content":"import seedu.address.model.tag.TagCategory;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Christopher Tan"},"content":"public class CategorizeTagCommandParserTest {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Christopher Tan"},"content":"    private CategorizeTagCommandParser parser \u003d new CategorizeTagCommandParser();","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Christopher Tan"},"content":"    public void parse_emptyArgs_throwsParseException() {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Christopher Tan"},"content":"        assertParseFailure(parser, \"   \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Christopher Tan"},"content":"                CategorizeTagCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Christopher Tan"},"content":"    public void parse_missingCategoryInArgs_throwsParseException() {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Christopher Tan"},"content":"        assertParseFailure(parser, \" t/test\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Christopher Tan"},"content":"                CategorizeTagCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Christopher Tan"},"content":"        assertParseFailure(parser, \" t/test  \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Christopher Tan"},"content":"                CategorizeTagCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Christopher Tan"},"content":"    public void parse_invalidCategoryArg_throwsParseException() {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Christopher Tan"},"content":"        assertParseFailure(parser, \"cattag t/test invalid \",","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Christopher Tan"},"content":"                String.format(CategorizeTagCommand.MESSAGE_INVALID_CATEGORY, \"invalid\"));","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"    public void parse_validSingleTagCategoryArg_success() {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Christopher Tan"},"content":"        CategorizeTagCommand expectedCatTagCommand \u003d","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"                new CategorizeTagCommand(Arrays.asList(new Tag(\"test\")), TagCategory.ACTIVITIES);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Christopher Tan"},"content":"        assertParseSuccess(parser, \"cattag t/test activity\", expectedCatTagCommand);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yooplo"},"content":"    public void parse_validMultipleTagsCategoryArg_success() {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yooplo"},"content":"        CategorizeTagCommand expectedCatTagCommand \u003d","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yooplo"},"content":"                new CategorizeTagCommand(Arrays.asList(new Tag(\"test1\"), new Tag(\"test2\")), TagCategory.ACADEMICS);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yooplo"},"content":"        assertParseSuccess(parser, \"cattag t/test1 t/test2 acads\", expectedCatTagCommand);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yooplo"},"content":"    public void parse_validTagsWithMixedSpacing_success() {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"        CategorizeTagCommand expectedCatTagCommand \u003d","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"                new CategorizeTagCommand(Arrays.asList(new Tag(\"test\"), new Tag(\"test2\")), TagCategory.GENERAL);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"        assertParseSuccess(parser, \"cattag  t/test   t/test2   general\", expectedCatTagCommand);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yooplo"},"content":"    public void parse_categoryInDifferentFormats_throwsParseException() {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"        assertParseFailure(parser, \"cattag t/test 1invalid\",","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"                String.format(CategorizeTagCommand.MESSAGE_INVALID_CATEGORY, \"1invalid\"));","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yooplo"},"content":"        assertParseFailure(parser, \"cattag t/test# invalidcategory\",","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yooplo"},"content":"                Tag.MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Christopher Tan"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":26,"Christopher Tan":40}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"        assertParseFailure(parser, \"a\",","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":2,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTagCommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"public class DeleteTagCommandParserTest {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    private DeleteTagCommandParser parser \u003d new DeleteTagCommandParser();","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"    public void parse_validArgs_returnsDeleteTagCommand() {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"        assertParseSuccess(parser, \"1 t/hello\",","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"                new DeleteTagCommand(INDEX_FIRST_PERSON, new Tag(\"hello\")));","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"    public void parse_invalidArgs_throwsParseException() {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"        assertParseFailure(parser, \"a\",","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":28}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no index specified","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no field specified","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index and no field specified","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // negative index","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // zero index","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"KrashKart"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"KrashKart"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"KrashKart"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // name","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // phone","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // email","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // tags","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // valid followed by invalid","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // invalid followed by valid","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"KrashKart"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"KrashKart"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"KrashKart"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"KrashKart"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // multiple invalid values","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"KrashKart"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_EMAIL_DESC","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"KrashKart"},"content":"                + INVALID_PHONE_DESC + INVALID_EMAIL_DESC;","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"KrashKart"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":10,"-":185}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yooplo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yooplo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"import seedu.address.logic.commands.SuperFindCommand;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.person.CombinedContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.person.EmailContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KrashKart"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KrashKart"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"                SuperFindCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"    public void parse_validArgs_returnsAbstractFindCommandWithNames() {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"        CombinedContainsKeywordsPredicate expectedPredicate \u003d","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"                new CombinedContainsKeywordsPredicate(List.of(namePredicate));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand expectedFindCommand \u003d new SuperFindCommand(expectedPredicate);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KrashKart"},"content":"        assertParseSuccess(parser, \" n/Alice n/Bob\", expectedFindCommand);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KrashKart"},"content":"        assertParseSuccess(parser, \" n/ \\n Alice \\n n/ \\t Bob  \\t\", expectedFindCommand);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"    public void parse_validArgs_returnsAbstractFindCommandWithPhones() {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yooplo"},"content":"        PhoneContainsKeywordsPredicate phonePredicate \u003d","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"                new PhoneContainsKeywordsPredicate(Arrays.asList(\"91234567\", \"995\"));","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"        CombinedContainsKeywordsPredicate expectedPredicate \u003d","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"                new CombinedContainsKeywordsPredicate(List.of(phonePredicate));","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand expectedFindCommand \u003d new SuperFindCommand(expectedPredicate);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KrashKart"},"content":"        // no leading and trailing whitespaces","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KrashKart"},"content":"        assertParseSuccess(parser, \" p/ 91234567 p/ 995\", expectedFindCommand);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KrashKart"},"content":"        // multiple whitespaces between keywords","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KrashKart"},"content":"        assertParseSuccess(parser, \" p/ \\n 91234567 \\n p/\\t 995  \\t\", expectedFindCommand);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yooplo"},"content":"    public void parse_validArgs_returnsAbstractFindCommandWithEmails() {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yooplo"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yooplo"},"content":"                new EmailContainsKeywordsPredicate(Arrays.asList(\"ryan@gmail.com\", \"tasha@gmail.com\"));","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yooplo"},"content":"        CombinedContainsKeywordsPredicate expectedPredicate \u003d","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yooplo"},"content":"                new CombinedContainsKeywordsPredicate(List.of(emailPredicate));","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand expectedFindCommand \u003d new SuperFindCommand(expectedPredicate);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yooplo"},"content":"        // no leading and trailing whitespaces","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KrashKart"},"content":"        assertParseSuccess(parser, \" e/ ryan@gmail.com e/tasha@gmail.com\", expectedFindCommand);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yooplo"},"content":"        // multiple whitespaces between keywords","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KrashKart"},"content":"        assertParseSuccess(parser, \" e/ \\n ryan@gmail.com \\n e/\\t tasha@gmail.com  \\t\", expectedFindCommand);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yooplo"},"content":"    public void parse_validArgs_returnsAbstractFindCommandWithTags() {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yooplo"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yooplo"},"content":"                new TagContainsKeywordsPredicate(Arrays.asList(\"PC2174ALecturer\", \"PC2032classmate\"));","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yooplo"},"content":"        CombinedContainsKeywordsPredicate expectedPredicate \u003d","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yooplo"},"content":"                new CombinedContainsKeywordsPredicate(List.of(tagPredicate));","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand expectedFindCommand \u003d new SuperFindCommand(expectedPredicate);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"KrashKart"},"content":"        assertParseSuccess(parser, \" t/PC2174ALecturer t/PC2032classmate\", expectedFindCommand);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"KrashKart"},"content":"        assertParseSuccess(parser, \" t/ \\n PC2174ALecturer \\n t/\\t PC2032classmate  \\t\", expectedFindCommand);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yooplo"},"content":"    public void parse_combinedArgs_returnsAppropriateFindCommand() {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yooplo"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yooplo"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\"));","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yooplo"},"content":"        PhoneContainsKeywordsPredicate phonePredicate \u003d","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yooplo"},"content":"                new PhoneContainsKeywordsPredicate(Arrays.asList(\"91234567\"));","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yooplo"},"content":"        CombinedContainsKeywordsPredicate expectedPredicate \u003d","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yooplo"},"content":"                new CombinedContainsKeywordsPredicate(List.of(namePredicate, phonePredicate));","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand expectedFindCommand \u003d new SuperFindCommand(expectedPredicate);","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"yooplo"},"content":"        assertParseSuccess(parser, \" n/Alice p/91234567\", expectedFindCommand);","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"yooplo"},"content":"    public void parse_caseInsensitiveKeywords_success() {","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"yooplo"},"content":"        // Sample persons","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"yooplo"},"content":"        Person alice \u003d new PersonBuilder().withName(\"ALICE\").build();","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"yooplo"},"content":"        Person bob \u003d new PersonBuilder().withName(\"BOb\").build();","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yooplo"},"content":"        Person charlie \u003d new PersonBuilder().withName(\"ChaRLie\").build();","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yooplo"},"content":"        List\u003cPerson\u003e personList \u003d Arrays.asList(alice, bob, charlie);","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yooplo"},"content":"        // Setting up case-insensitive predicates","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yooplo"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"yooplo"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"alice\", \"bob\")); // Lowercase for input","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"yooplo"},"content":"        CombinedContainsKeywordsPredicate expectedPredicate \u003d","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"yooplo"},"content":"                new CombinedContainsKeywordsPredicate(List.of(namePredicate));","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand expectedFindCommand \u003d new SuperFindCommand(expectedPredicate);","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yooplo"},"content":"        // Filter using the predicate created from parsing","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yooplo"},"content":"        List\u003cPerson\u003e filteredPersons \u003d personList.stream()","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"yooplo"},"content":"                .filter(expectedPredicate)","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"yooplo"},"content":"                .collect(Collectors.toList());","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yooplo"},"content":"        // Assertions to confirm the output is correct","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yooplo"},"content":"        assertTrue(filteredPersons.contains(alice)); // Alice should be in the result","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"yooplo"},"content":"        assertTrue(filteredPersons.contains(bob)); // Bob should be in the result","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"yooplo"},"content":"        assertFalse(filteredPersons.contains(charlie)); // Charlie should not be in the result","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"yooplo"},"content":"        assertEquals(2, filteredPersons.size()); // Expected size of filtered persons to be 2","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"yooplo"},"content":"    public void parse_emptyPrefixBetweenValidones_validParse() {","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"yooplo"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"yooplo"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"yooplo"},"content":"        Person charlie \u003d new PersonBuilder().withName(\"Charlie\").build();","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"yooplo"},"content":"        List\u003cPerson\u003e personList \u003d Arrays.asList(alice, bob, charlie);","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yooplo"},"content":"        // Setting up the predicates","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"yooplo"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"yooplo"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"\", \"Bob\"));","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"yooplo"},"content":"        CombinedContainsKeywordsPredicate expectedPredicate \u003d","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"yooplo"},"content":"                new CombinedContainsKeywordsPredicate(List.of(namePredicate));","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand expectedFindCommand \u003d new SuperFindCommand(expectedPredicate);","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"yooplo"},"content":"        // Simulating parse success","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"yooplo"},"content":"        assertParseSuccess(parser, \" n/Alice n/ n/Bob\", expectedFindCommand);","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"yooplo"},"content":"        // Now verify that the predicate matches only the expected persons","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yooplo"},"content":"        List\u003cPerson\u003e filteredPersons \u003d personList.stream()","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yooplo"},"content":"                .filter(expectedPredicate)","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"yooplo"},"content":"                .collect(Collectors.toList());","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"yooplo"},"content":"        // Check if the filtered persons match the expected persons","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"yooplo"},"content":"        assertTrue(filteredPersons.contains(alice));","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"yooplo"},"content":"        assertTrue(filteredPersons.contains(bob));","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"yooplo"},"content":"        assertTrue(filteredPersons.contains(charlie));","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"yooplo"},"content":"        System.out.println(filteredPersons.size());","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"yooplo"},"content":"        assertEquals(3, filteredPersons.size()); // expect all to be present","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"yooplo"},"content":"    public void parse_longInput_validParse() {","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"yooplo"},"content":"        EmailContainsKeywordsPredicate emailPredicate \u003d","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"yooplo"},"content":"                new EmailContainsKeywordsPredicate(Arrays.asList(\"first@example.com\", \"second@example.com\"));","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"yooplo"},"content":"        CombinedContainsKeywordsPredicate expectedPredicate \u003d","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"yooplo"},"content":"                new CombinedContainsKeywordsPredicate(List.of(emailPredicate));","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"yooplo"},"content":"        SuperFindCommand expectedFindCommand \u003d new SuperFindCommand(expectedPredicate);","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"yooplo"},"content":"        assertParseSuccess(parser, \" e/\"","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"yooplo"},"content":"                + String.join(\" e/\", \"first@example.com\", \"second@example.com\"), expectedFindCommand);","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":132,"KrashKart":22,"-":32}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KrashKart"},"content":"    private static final String VALID_PHONE \u003d \"81024527\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // No whitespaces","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":1,"-":169}},{"path":"src/test/java/seedu/address/model/CampusConnectTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"public class CampusConnectTest {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"    private final CampusConnect campusConnect \u003d new CampusConnect();","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":"        assertEquals(Collections.emptyList(), campusConnect.getPersonList());","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"        assertThrows(NullPointerException.class, () -\u003e campusConnect.resetData(null));","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"    public void resetData_withValidReadOnlyCampusConnect_replacesData() {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"        CampusConnect newData \u003d getTypicalCampusConnect();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"        campusConnect.resetData(newData);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"        assertEquals(newData, campusConnect);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KrashKart"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"        CampusConnectStub newData \u003d new CampusConnectStub(newPersons);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e campusConnect.resetData(newData));","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yooplo"},"content":"        assertThrows(NullPointerException.class, () -\u003e campusConnect.hasPerson(null));","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yooplo"},"content":"    public void hasPerson_personNotInCampusConnect_returnsFalse() {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yooplo"},"content":"        assertFalse(campusConnect.hasPerson(ALICE));","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yooplo"},"content":"    public void hasPerson_personInCampusConnect_returnsTrue() {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yooplo"},"content":"        campusConnect.addPerson(ALICE);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yooplo"},"content":"        assertTrue(campusConnect.hasPerson(ALICE));","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yooplo"},"content":"    public void hasPerson_personWithSameIdentityFieldsInCampusConnect_returnsTrue() {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yooplo"},"content":"        campusConnect.addPerson(ALICE);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KrashKart"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yooplo"},"content":"        assertTrue(campusConnect.hasPerson(editedAlice));","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yooplo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e campusConnect.getPersonList().remove(0));","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yooplo"},"content":"        String expected \u003d CampusConnect.class.getCanonicalName() + \"{persons\u003d\" + campusConnect.getPersonList() + \"}\";","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yooplo"},"content":"        assertEquals(expected, campusConnect.toString());","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CYX22222003"},"content":"    public void insertPersonTest() {","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CYX22222003"},"content":"        int ind \u003d campusConnect.getPersonList().size();","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CYX22222003"},"content":"        CampusConnect expected \u003d new CampusConnect();","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CYX22222003"},"content":"        expected.resetData(campusConnect);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"CYX22222003"},"content":"        campusConnect.addPerson(ALICE, ind);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CYX22222003"},"content":"        expected.addPerson(ALICE);","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CYX22222003"},"content":"        assertEquals(expected.toString(), campusConnect.toString());","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yooplo"},"content":"     * A stub ReadOnlyCampusConnect whose persons list can violate interface constraints.","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yooplo"},"content":"    private static class CampusConnectStub implements ReadOnlyCampusConnect {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yooplo"},"content":"        private final ObservableList\u003cTag\u003e tags \u003d FXCollections.observableArrayList();","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yooplo"},"content":"        CampusConnectStub(Collection\u003cPerson\u003e persons) {","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return persons;","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"yooplo"},"content":"        @Override","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"yooplo"},"content":"        public ObservableList\u003cTag\u003e getTagList() {","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"yooplo"},"content":"            return tags;","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"yooplo"},"content":"        }","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":33,"KrashKart":2,"CYX22222003":12,"-":78}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"import seedu.address.testutil.CampusConnectBuilder;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"        assertEquals(new CampusConnect(), new CampusConnect(modelManager.getCampusConnect()));","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"        userPrefs.setCampusConnectFilePath(Paths.get(\"address/book/file/path\"));","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"        userPrefs.setCampusConnectFilePath(Paths.get(\"new/address/book/file/path\"));","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yooplo"},"content":"    public void setCampusConnectFilePath_nullPath_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yooplo"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setCampusConnectFilePath(null));","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yooplo"},"content":"    public void setCampusConnectFilePath_validPath_setsCampusConnectFilePath() {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yooplo"},"content":"        modelManager.setCampusConnectFilePath(path);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yooplo"},"content":"        assertEquals(path, modelManager.getCampusConnectFilePath());","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yooplo"},"content":"    public void hasPerson_personNotInCampusConnect_returnsFalse() {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yooplo"},"content":"    public void hasPerson_personInCampusConnect_returnsTrue() {","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CYX22222003"},"content":"    public void deleteTag_personInCampusConnect_successfulDeletion() {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CYX22222003"},"content":"        Person newAlice \u003d new PersonBuilder(ALICE).withTags(\"friends\", \"copy\").build();","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CYX22222003"},"content":"        modelManager.addPerson(newAlice);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CYX22222003"},"content":"        modelManager.deletePersonTag(newAlice, new Tag(\"copy\"));","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"CYX22222003"},"content":"        ModelManager copyModelManager \u003d new ModelManager();","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CYX22222003"},"content":"        copyModelManager.addPerson(ALICE);","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"CYX22222003"},"content":"        assertEquals(modelManager, copyModelManager);","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Christopher Tan"},"content":"    public void containsTag_tagInCampusConnect_returnsTrue() {","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Christopher Tan"},"content":"        Tag tag \u003d new Tag(\"friends\");","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Christopher Tan"},"content":"        modelManager.addPerson(new PersonBuilder().withTags(\"friends\").build());","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Christopher Tan"},"content":"        assertTrue(modelManager.containsTag(tag));","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Christopher Tan"},"content":"    public void containsTag_tagNotInCampusConnect_returnsFalse() {","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Christopher Tan"},"content":"        Tag tag \u003d new Tag(\"non-existent-tag\");","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Christopher Tan"},"content":"        assertFalse(modelManager.containsTag(tag));","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Christopher Tan"},"content":"    public void containsTag_nullTag_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Christopher Tan"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.containsTag(null));","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"yooplo"},"content":"        CampusConnect campusConnect \u003d new CampusConnectBuilder().withPerson(ALICE).withPerson(BENSON).build();","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"yooplo"},"content":"        CampusConnect differentCampusConnect \u003d new CampusConnect();","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"yooplo"},"content":"        modelManager \u003d new ModelManager(campusConnect, userPrefs);","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"yooplo"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(campusConnect, userPrefs);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"yooplo"},"content":"        // different campusConnect -\u003e returns false","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"yooplo"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentCampusConnect, userPrefs)));","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"yooplo"},"content":"        assertFalse(modelManager.equals(new ModelManager(campusConnect, userPrefs)));","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"yooplo"},"content":"        differentUserPrefs.setCampusConnectFilePath(Paths.get(\"differentFilePath\"));","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"yooplo"},"content":"        assertFalse(modelManager.equals(new ModelManager(campusConnect, differentUserPrefs)));","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":20,"CYX22222003":15,"-":112,"Christopher Tan":18}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"    public void setCampusConnectFilePath_nullPath_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setCampusConnectFilePath(null));","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":2,"-":19}},{"path":"src/test/java/seedu/address/model/VersionedCampusConnectTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.exceptions.RedoException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.exceptions.UndoException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"public class VersionedCampusConnectTest {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"    public void execute_extractUndoneDataEmptyStack_failure() {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"        VersionedCampusConnect vcc \u003d new VersionedCampusConnect();","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"        assertThrows(RedoException.class, vcc::extractUndoneData);","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"    public void execute_extractOldDataEmptyStack_failure() {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"        VersionedCampusConnect vcc \u003d new VersionedCampusConnect();","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"        assertThrows(UndoException.class, vcc::extractOldData);","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"    public void execute_extractOldData_success() throws CommandException {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect data \u003d getTypicalCampusConnect();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"        VersionedCampusConnect vcc \u003d new VersionedCampusConnect();","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"        vcc.saveOldData(data);","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect newData \u003d vcc.extractOldData();","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"        assertEquals(newData, data);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"    public void execute_extractUndoneData_success() throws CommandException {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect data \u003d getTypicalCampusConnect();","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"        VersionedCampusConnect vcc \u003d new VersionedCampusConnect();","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"        vcc.saveCurrentData(data);","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect newData \u003d vcc.extractUndoneData();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"        assertEquals(newData, data);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":45}},{"path":"src/test/java/seedu/address/model/person/CombinedContainsKeywordsPredicateTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yooplo"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yooplo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yooplo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":"import java.util.function.Predicate;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"public class CombinedContainsKeywordsPredicateTest {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yooplo"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e firstPredicateList \u003d Collections.singletonList(","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"first\")));","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e secondPredicateList \u003d Arrays.asList(","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"first\")),","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"                new PhoneContainsKeywordsPredicate(Arrays.asList(\"63251562\")));","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"        CombinedContainsKeywordsPredicate firstPredicate \u003d","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"                new CombinedContainsKeywordsPredicate(firstPredicateList);","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"        CombinedContainsKeywordsPredicate secondPredicate \u003d","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"                new CombinedContainsKeywordsPredicate(secondPredicateList);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"        CombinedContainsKeywordsPredicate firstPredicateCopy \u003d","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"                new CombinedContainsKeywordsPredicate(firstPredicateList);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"        assertFalse(firstPredicate.equals(1));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"        assertFalse(firstPredicate.equals(null));","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"        // different predicates -\u003e returns false","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yooplo"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"    public void test_combinedPredicateReturnsTrue() {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"        // Single matching predicate","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"        Predicate\u003cPerson\u003e namePredicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\"));","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yooplo"},"content":"        Predicate\u003cPerson\u003e phonePredicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"87223543\"));","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"        CombinedContainsKeywordsPredicate combinedPredicate \u003d new CombinedContainsKeywordsPredicate(","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"                Arrays.asList(namePredicate, phonePredicate));","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"        // Both must match","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"        Person person \u003d new PersonBuilder().withName(\"Alice\").withPhone(\"87223543\").build();","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yooplo"},"content":"        assertTrue(combinedPredicate.test(person));","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yooplo"},"content":"    public void test_combinedPredicateReturnsFalse() {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yooplo"},"content":"        // Single matching predicate, but not all","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yooplo"},"content":"        Predicate\u003cPerson\u003e namePredicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\"));","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yooplo"},"content":"        Predicate\u003cPerson\u003e phonePredicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"84563215\"));","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yooplo"},"content":"        CombinedContainsKeywordsPredicate combinedPredicate \u003d new CombinedContainsKeywordsPredicate(","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yooplo"},"content":"                Arrays.asList(namePredicate, phonePredicate));","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yooplo"},"content":"        Person person \u003d new PersonBuilder().withName(\"Alice\").withPhone(\"94651326\").build();","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yooplo"},"content":"        assertFalse(combinedPredicate.test(person));","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yooplo"},"content":"        // No predicates matching","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yooplo"},"content":"        Predicate\u003cPerson\u003e emailPredicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"alice@example.com\"));","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yooplo"},"content":"        combinedPredicate \u003d new CombinedContainsKeywordsPredicate(","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yooplo"},"content":"                Arrays.asList(namePredicate, emailPredicate));","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yooplo"},"content":"        person \u003d new PersonBuilder().withName(\"Bob\").withEmail(\"bob@example.com\").build();","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yooplo"},"content":"        assertFalse(combinedPredicate.test(person));","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yooplo"},"content":"    public void toStringMethod() {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yooplo"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicates \u003d List.of(","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yooplo"},"content":"                new NameContainsKeywordsPredicate(List.of(\"keyword1\")),","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yooplo"},"content":"                new PhoneContainsKeywordsPredicate(List.of(\"96541224\")),","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yooplo"},"content":"                new TagContainsKeywordsPredicate(List.of(\"friend\")),","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yooplo"},"content":"                new EmailContainsKeywordsPredicate(List.of(\"keyword1@example.com\"))","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yooplo"},"content":"        );","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yooplo"},"content":"        CombinedContainsKeywordsPredicate combinedPredicate \u003d new CombinedContainsKeywordsPredicate(predicates);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yooplo"},"content":"        String expected \u003d CombinedContainsKeywordsPredicate.class.getCanonicalName() + predicates.toString();","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yooplo"},"content":"        assertEquals(expected, combinedPredicate.toString());","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":96}},{"path":"src/test/java/seedu/address/model/person/EmailContainsKeywordsPredicateTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yooplo"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yooplo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yooplo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"public class EmailContainsKeywordsPredicateTest {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yooplo"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"        EmailContainsKeywordsPredicate firstPredicate \u003d new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"        EmailContainsKeywordsPredicate secondPredicate \u003d new EmailContainsKeywordsPredicate(secondPredicateKeywordList);","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"        EmailContainsKeywordsPredicate firstPredicateCopy \u003d new EmailContainsKeywordsPredicate(","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"                                                                            firstPredicateKeywordList);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"        assertFalse(firstPredicate.equals(1));","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"        assertFalse(firstPredicate.equals(null));","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"        // different person -\u003e returns false","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yooplo"},"content":"        // One keyword","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Collections.singletonList(\"Bob\"));","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yooplo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"bob@example.com\").build()));","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yooplo"},"content":"        // Multiple keywords","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yooplo"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"alice@example.com\", \"bob@example.com\"));","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"bob@example.com\").build()));","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"        // Only one matching keyword","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yooplo"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"bob@example.com\", \"carol@example.com\"));","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"carol@example.com\").build()));","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"        // Mixed-case keywords","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(List.of(\"AliCe@example.com\"));","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"alice@example.com\").build()));","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yooplo"},"content":"        // Zero keywords","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yooplo"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Collections.emptyList());","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yooplo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"alice@example.com\").build()));","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yooplo"},"content":"        // Non-matching keyword","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yooplo"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(List.of(\"carol\"));","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yooplo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"bob@example.com\").build()));","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yooplo"},"content":"        // Keywords match phone, email and address, but does not match name","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yooplo"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"87223546\", \"alice@email.com\", \"Main\", \"Street\"));","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yooplo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Bob\").withPhone(\"87223546\")","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yooplo"},"content":"                .withEmail(\"bob@email.com\").build()));","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yooplo"},"content":"    public void toStringMethod() {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yooplo"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yooplo"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(keywords);","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yooplo"},"content":"        String expected \u003d EmailContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yooplo"},"content":"        assertEquals(expected, predicate.toString());","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":85}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yooplo"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"81234567\", \"alice@email.com\", \"Main\", \"Street\"));","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yooplo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"81234567\")","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KrashKart"},"content":"                .withEmail(\"alice@email.com\").build()));","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":2,"KrashKart":1,"-":82}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KrashKart"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CYX22222003"},"content":"    public void hasSameEmail() {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(ALICE.hasSameEmail(ALICE));","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CYX22222003"},"content":"        // same name, different email -\u003e return false","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CYX22222003"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(ALICE.hasSameEmail(editedAlice));","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(editedAlice.hasSameEmail(BOB));","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"        // different name, same email -\u003e return true","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CYX22222003"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY).build();","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CYX22222003"},"content":"        Person aliceWithNewEmail \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_AMY).build();","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(aliceWithNewEmail.hasSameEmail(editedBob));","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CYX22222003"},"content":"        // null -\u003e always return false","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(ALICE.hasSameEmail(null));","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CYX22222003"},"content":"    public void hasSamePhoneNumber() {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(ALICE.hasSamePhoneNumber(ALICE));","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(ALICE.hasSamePhoneNumber(BOB));","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CYX22222003"},"content":"        // different name, same phone number -\u003e return true","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CYX22222003"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(editedAlice.hasSamePhoneNumber(BOB));","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CYX22222003"},"content":"        //same name, different phone number -\u003e return false","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(editedAlice.hasSamePhoneNumber(ALICE));","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CYX22222003"},"content":"        //null -\u003e always return false","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(ALICE.hasSamePhoneNumber(null));","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CYX22222003"},"content":"    public void hasDuplicateInfo() {","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(ALICE.hasDuplicateInfo(ALICE));","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(ALICE.hasDuplicateInfo(null));","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CYX22222003"},"content":"        // Different name, phone, same email","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CYX22222003"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY).build();","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CYX22222003"},"content":"        Person aliceWithNewEmail \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_AMY).build();","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(editedBob.hasDuplicateInfo(aliceWithNewEmail));","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(editedBob.hasDuplicateInfo(ALICE));","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CYX22222003"},"content":"        // Different email, phone, same phone","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CYX22222003"},"content":"        Person editedBob2 \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_BOB).build();","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CYX22222003"},"content":"        Person aliceWithNewEmail2 \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(editedBob2.hasDuplicateInfo(aliceWithNewEmail2));","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(editedBob2.hasDuplicateInfo(ALICE));","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CYX22222003"},"content":"        // Different email, name, same name","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"CYX22222003"},"content":"        Person editedBob3 \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"CYX22222003"},"content":"        Person aliceWithNewEmail3 \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(editedBob3.hasDuplicateInfo(aliceWithNewEmail3));","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(editedBob3.hasDuplicateInfo(BOB));","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"CYX22222003"},"content":"        //NULL","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(editedBob3.hasDuplicateInfo(null));","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"CYX22222003"},"content":"    public void hasTag() {","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"CYX22222003"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(aliceCopy.hasTag(new Tag(\"friends\")));","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(aliceCopy.hasTag(new Tag(\"TEST\")));","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"KrashKart"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", tags\u003d\" + ALICE.getTags() + \"}\";","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":2,"CYX22222003":70,"-":92}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KrashKart"},"content":"        assertFalse(Phone.isValidPhone(\"811\")); // exactly 3 numbers","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KrashKart"},"content":"        assertFalse(Phone.isValidPhone(\"824293842033123\")); // long phone numbers","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KrashKart"},"content":"        assertTrue(Phone.isValidPhone(\"89235203\"));","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KrashKart"},"content":"        assertTrue(Phone.isValidPhone(\"61234523\"));","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KrashKart"},"content":"        Phone phone \u003d new Phone(\"99999999\");","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KrashKart"},"content":"        assertTrue(phone.equals(new Phone(\"99999999\")));","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KrashKart"},"content":"        assertFalse(phone.equals(new Phone(\"99509950\")));","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":7,"-":55}},{"path":"src/test/java/seedu/address/model/person/TagContainsKeywordsPredicateTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KrashKart"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KrashKart"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KrashKart"},"content":"public class TagContainsKeywordsPredicateTest {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KrashKart"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KrashKart"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KrashKart"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KrashKart"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KrashKart"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d new TagContainsKeywordsPredicate(secondPredicateKeywordList);","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KrashKart"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KrashKart"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KrashKart"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KrashKart"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KrashKart"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KrashKart"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KrashKart"},"content":"        assertFalse(firstPredicate.equals(1));","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KrashKart"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KrashKart"},"content":"        assertFalse(firstPredicate.equals(null));","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KrashKart"},"content":"        // different person -\u003e returns false","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KrashKart"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"KrashKart"},"content":"    public void test_tagContainsKeywords_returnsTrue() {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KrashKart"},"content":"        // One keyword","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KrashKart"},"content":"        TagContainsKeywordsPredicate predicate \u003d","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KrashKart"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"CS\"));","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KrashKart"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"CS2100\", \"PC2174A\").build()));","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"KrashKart"},"content":"        // Multiple keywords","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"KrashKart"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"CS\", \"PC\"));","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KrashKart"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"CS2100\", \"PC2174A\").build()));","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KrashKart"},"content":"        // Only one matching keyword","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"KrashKart"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"IS1108\", \"NUSFloorball\"));","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"KrashKart"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"NUSFloorball\", \"PC2174A\").build()));","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"KrashKart"},"content":"        // Mixed-case keywords","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"KrashKart"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"nUsfLoOrBaLL\", \"NUscHoIr\"));","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KrashKart"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"NUSFloorball\", \"NUSChoir\").build()));","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"KrashKart"},"content":"    public void test_tagDoesNotContainKeywords_returnsFalse() {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"KrashKart"},"content":"        // Zero keywords","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KrashKart"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.emptyList());","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KrashKart"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"CS2100\", \"PC2174A\").build()));","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"KrashKart"},"content":"        // Non-matching keyword","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KrashKart"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"IS\", \"8\"));","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KrashKart"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"CS2100\", \"PC2174A\").build()));","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"KrashKart"},"content":"        // Keywords match phone, email address and name, but does not match tag","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yooplo"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"81234567\", \"alice@email.com\", \"Main\", \"Street\"));","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yooplo"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"Alice\").withPhone(\"81234567\")","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"KrashKart"},"content":"                .withEmail(\"alice@email.com\").withTags(\"hehe\").build()));","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"KrashKart"},"content":"    public void toStringMethod() {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"KrashKart"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KrashKart"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(keywords);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"KrashKart"},"content":"        String expected \u003d TagContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"KrashKart"},"content":"        assertEquals(expected, predicate.toString());","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"KrashKart"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":2,"KrashKart":84}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KrashKart"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"KrashKart"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"Christopher Tan"},"content":"    public void deletePersonTag_list_successfulDeletionOfTag() {","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"CYX22222003"},"content":"        Person newAlice \u003d new PersonBuilder(ALICE).withTags(\"friends\", \"hello\").build();","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"CYX22222003"},"content":"        uniquePersonList.add(newAlice);","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"CYX22222003"},"content":"        uniquePersonList.deletePersonTag(newAlice, new Tag(\"hello\"));","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"CYX22222003"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"CYX22222003"},"content":"        expectedUniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"CYX22222003"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":2,"CYX22222003":10,"-":172,"Christopher Tan":1}},{"path":"src/test/java/seedu/address/model/tag/TagCategoryTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KrashKart"},"content":"package seedu.address.model.tag;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KrashKart"},"content":"public class TagCategoryTest {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"KrashKart"},"content":"    public void fromString_validCategories_returnsSuccess() throws IllegalValueException {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"KrashKart"},"content":"        // all valid inputs","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"KrashKart"},"content":"        assertEquals(TagCategory.GENERAL, TagCategory.fromString(\"GENERAL\"));","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"KrashKart"},"content":"        assertEquals(TagCategory.ACADEMICS, TagCategory.fromString(\"ACADEMICS\"));","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"KrashKart"},"content":"        assertEquals(TagCategory.NETWORKING, TagCategory.fromString(\"NETWORKING\"));","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"KrashKart"},"content":"        assertEquals(TagCategory.MENTORSHIP, TagCategory.fromString(\"MENTORSHIP\"));","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"KrashKart"},"content":"        assertEquals(TagCategory.ACTIVITIES, TagCategory.fromString(\"ACTIVITIES\"));","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KrashKart"},"content":"    public void fromString_invalidCategories_throwsIllegalValueException() {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KrashKart"},"content":"        // completely invalid inputs","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"KrashKart"},"content":"        assertThrows(IllegalValueException.class, () -\u003e TagCategory.fromString(\"HEHE\"));","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KrashKart"},"content":"        assertThrows(IllegalValueException.class, () -\u003e TagCategory.fromString(\"ACACACACAC\"));","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"KrashKart"},"content":"        // wrong case","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KrashKart"},"content":"        assertThrows(IllegalValueException.class, () -\u003e TagCategory.fromString(\"Academics\"));","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KrashKart"},"content":"        assertThrows(IllegalValueException.class, () -\u003e TagCategory.fromString(\"GeNeRaL\"));","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"KrashKart"},"content":"        assertThrows(IllegalValueException.class, () -\u003e TagCategory.fromString(\"aCtIViTieS\"));","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KrashKart"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":33}},{"path":"src/test/java/seedu/address/model/tag/TagManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Christopher Tan"},"content":"package seedu.address.model.tag;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Christopher Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Christopher Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Christopher Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Christopher Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Christopher Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Christopher Tan"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Christopher Tan"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Christopher Tan"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Christopher Tan"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Christopher Tan"},"content":"class TagManagerTest {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Christopher Tan"},"content":"    private TagManager tagManager;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Christopher Tan"},"content":"    @BeforeEach","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Christopher Tan"},"content":"    void setUp() {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Christopher Tan"},"content":"        tagManager \u003d new TagManager();","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Christopher Tan"},"content":"    void containsTag_tagExists_true() {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Christopher Tan"},"content":"        Tag tag \u003d new Tag(\"CS2103T\");","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Christopher Tan"},"content":"        tagManager.getOrCreateTag(tag.tagName);","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Christopher Tan"},"content":"        assertTrue(tagManager.containsTag(tag));","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Christopher Tan"},"content":"    void containsTag_tagDoesNotExist_false() {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Christopher Tan"},"content":"        Tag tag \u003d new Tag(\"CS2103T\");","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Christopher Tan"},"content":"        assertFalse(tagManager.containsTag(tag));","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Christopher Tan"},"content":"    void getOrCreateTag_newTag_createsTagAndIncrements() {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Christopher Tan"},"content":"        Tag createdTag \u003d tagManager.getOrCreateTag(\"CS2103T\");","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Christopher Tan"},"content":"        assertNotNull(createdTag);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Christopher Tan"},"content":"        assertEquals(\"CS2103T\", createdTag.tagName);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Christopher Tan"},"content":"        assertEquals(1, createdTag.getOccurrences());","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Christopher Tan"},"content":"    void getOrCreateTag_existingTag_incrementsOccurrences() {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Christopher Tan"},"content":"        tagManager.getOrCreateTag(\"CS2103T\");","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Christopher Tan"},"content":"        Tag existingTag \u003d tagManager.getOrCreateTag(\"CS2103T\");","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Christopher Tan"},"content":"        assertEquals(2, existingTag.getOccurrences());","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Christopher Tan"},"content":"    void getOrCreateTag_multipleTags_createsAndReturnsTrackedSet() {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Christopher Tan"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Christopher Tan"},"content":"        tags.add(new Tag(\"CS2103T\"));","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Christopher Tan"},"content":"        tags.add(new Tag(\"CS2030S\"));","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Christopher Tan"},"content":"        Set\u003cTag\u003e trackedTags \u003d tagManager.getOrCreateTag(tags);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Christopher Tan"},"content":"        assertEquals(2, trackedTags.size());","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Christopher Tan"},"content":"        assertTrue(tagManager.containsTag(new Tag(\"CS2103T\")));","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Christopher Tan"},"content":"        assertTrue(tagManager.containsTag(new Tag(\"CS2030S\")));","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Christopher Tan"},"content":"    void removeTagOccurrence_singleTag_removesTagWhenNoOccurrences() {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Christopher Tan"},"content":"        Tag tag \u003d tagManager.getOrCreateTag(\"CS2103T\");","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Christopher Tan"},"content":"        tagManager.removeTagOccurrence(tag);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Christopher Tan"},"content":"        assertFalse(tagManager.containsTag(tag));","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Christopher Tan"},"content":"    void removeTagOccurrence_multipleTags_decrementsOrRemoves() {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Christopher Tan"},"content":"        Tag tag1 \u003d tagManager.getOrCreateTag(\"CS2103T\");","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Christopher Tan"},"content":"        tagManager.getOrCreateTag(\"CS2103T\");","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Christopher Tan"},"content":"        tagManager.removeTagOccurrence(tag1);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Christopher Tan"},"content":"        assertTrue(tagManager.containsTag(tag1));","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Christopher Tan"},"content":"        tagManager.removeTagOccurrence(tag1);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Christopher Tan"},"content":"        assertFalse(tagManager.containsTag(tag1));","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Christopher Tan"},"content":"    void setTagCategory_existingTag_updatesCategory() {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Christopher Tan"},"content":"        Tag tag \u003d tagManager.getOrCreateTag(\"CS2103T\");","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Christopher Tan"},"content":"        TagCategory newCategory \u003d TagCategory.ACADEMICS;","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Christopher Tan"},"content":"        tagManager.setTagCategory(\"CS2103T\", newCategory);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Christopher Tan"},"content":"        assertEquals(newCategory, tagManager.getTagCategory(tag));","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Christopher Tan"},"content":"    void setTagCategory_nonExistingTag_noUpdate() {","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Christopher Tan"},"content":"        TagCategory category \u003d TagCategory.ACADEMICS;","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Christopher Tan"},"content":"        assertThrows(NullPointerException.class, () -\u003e tagManager.setTagCategory(\"CS2103T\", category));","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Christopher Tan"},"content":"    void removeTags_entireSet_removesAllTags() {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Christopher Tan"},"content":"        Tag tag1 \u003d tagManager.getOrCreateTag(\"CS2103T\");","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Christopher Tan"},"content":"        Tag tag2 \u003d tagManager.getOrCreateTag(\"CS2030S\");","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Christopher Tan"},"content":"        Set\u003cTag\u003e tagsToRemove \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Christopher Tan"},"content":"        tagsToRemove.add(tag1);","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Christopher Tan"},"content":"        tagsToRemove.add(tag2);","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Christopher Tan"},"content":"        tagManager.removeTags(tagsToRemove);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Christopher Tan"},"content":"        assertFalse(tagManager.containsTag(tag1));","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Christopher Tan"},"content":"        assertFalse(tagManager.containsTag(tag2));","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Christopher Tan"},"content":"    void clearAllTags_clearsAllTags_emptyTagList() {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Christopher Tan"},"content":"        tagManager.getOrCreateTag(\"CS2103T\");","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Christopher Tan"},"content":"        tagManager.getOrCreateTag(\"CS2030S\");","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Christopher Tan"},"content":"        tagManager.clearAllTags();","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Christopher Tan"},"content":"        assertTrue(tagManager.asTagList().isEmpty());","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Christopher Tan"},"content":"}","isFullCredit":false}],"authorContributionMap":{"Christopher Tan":114}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Christopher Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Christopher Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TagTest {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Christopher Tan"},"content":"    public void constructor_emptyTagName_throwsIllegalArgumentException() {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Christopher Tan"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Christopher Tan"},"content":"        String invalidTagName \u003d \"best friend\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Christopher Tan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Christopher Tan"},"content":"    public void isValidTagName_nullTagName_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null tag name","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Christopher Tan"},"content":"    public void isValidTagName_validTags() {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Christopher Tan"},"content":"        // valid tags","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Christopher Tan"},"content":"        assertTrue(Tag.isValidTagName(\"best-friend\"));","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Christopher Tan"},"content":"        assertTrue(Tag.isValidTagName(\"friend\"));","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Christopher Tan"},"content":"    @Test","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Christopher Tan"},"content":"    public void isValidTagName_invalidTags() {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Christopher Tan"},"content":"        // invalid tags","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Christopher Tan"},"content":"        assertFalse(Tag.isValidTagName(\"best friend\"));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Christopher Tan"},"content":"        assertFalse(Tag.isValidTagName(\"-friend\"));","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Christopher Tan"},"content":"        assertFalse(Tag.isValidTagName(\"friend-\"));","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Christopher Tan"},"content":"        assertFalse(Tag.isValidTagName(\"friend--best\"));","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Christopher Tan"},"content":"        assertFalse(Tag.isValidTagName(\"-\"));","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Christopher Tan"},"content":"    }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Christopher Tan"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"-":25,"Christopher Tan":26}},{"path":"src/test/java/seedu/address/model/util/EmptyDataUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KrashKart"},"content":"package seedu.address.model.util;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"KrashKart"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"KrashKart"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"KrashKart"},"content":"public class EmptyDataUtilTest {","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"KrashKart"},"content":"    @Test","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"KrashKart"},"content":"    public void getSampleCampusConnect_returnsEmptyCampusConnect() {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"KrashKart"},"content":"        assertTrue(EmptyDataUtil.getSampleCampusConnect().getPersonList().isEmpty());","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"KrashKart"},"content":"    }","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"KrashKart"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":12}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"KrashKart"},"content":"    private static final String INVALID_TAG_NAME \u003d \"#friend\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"KrashKart"},"content":"    private static final String INVALID_TAG_CATEGORY \u003d \"hehe\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"KrashKart"},"content":"    private static final String VALID_TAG_NAME \u003d \"colleague\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"KrashKart"},"content":"    private static final String VALID_TAG_CATEGORY \u003d \"acads\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KrashKart"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TAGS);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KrashKart"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_TAGS);","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"KrashKart"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_TAGS);","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KrashKart"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_TAGS);","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"KrashKart"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_TAGS);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"KrashKart"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_TAGS);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"KrashKart"},"content":"    public void toModelType_invalidTagName_throwsIllegalValueException() {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"KrashKart"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG_NAME, VALID_TAG_CATEGORY));","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"KrashKart"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, invalidTags);","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"KrashKart"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"KrashKart"},"content":"    public void toModelType_invalidTagCategory_throwsIllegalValueException() {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"KrashKart"},"content":"        invalidTags.add(new JsonAdaptedTag(VALID_TAG_NAME, INVALID_TAG_CATEGORY));","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"KrashKart"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, invalidTags);","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":17,"-":87}},{"path":"src/test/java/seedu/address/storage/JsonCampusConnectStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yooplo"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yooplo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yooplo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"import java.nio.file.Paths;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"import org.junit.jupiter.api.io.TempDir;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.ReadOnlyCampusConnect;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"public class JsonCampusConnectStorageTest {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonCampusConnectStorageTest\");","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"    @TempDir","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"    public Path testFolder;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"    public void readCampusConnect_nullFilePath_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"        assertThrows(NullPointerException.class, () -\u003e readCampusConnect(null));","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"    private java.util.Optional\u003cReadOnlyCampusConnect\u003e readCampusConnect(String filePath) throws Exception {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"        return new JsonCampusConnectStorage(Paths.get(filePath))","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"                .readCampusConnect(addToTestDataPathIfNotNull(filePath));","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"yooplo"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"yooplo"},"content":"        return prefsFileInTestDataFolder !\u003d null","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"yooplo"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"                : null;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"yooplo"},"content":"    public void read_missingFile_emptyResult() throws Exception {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"yooplo"},"content":"        assertFalse(readCampusConnect(\"NonExistentFile.json\").isPresent());","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"yooplo"},"content":"    public void read_notJsonFormat_exceptionThrown() {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readCampusConnect(\"notJsonFormatCampusConnect.json\"));","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"    public void readCampusConnect_invalidPersonCampusConnect_throwDataLoadingException() {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"yooplo"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readCampusConnect(\"invalidPersonCampusConnect.json\"));","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yooplo"},"content":"    public void readCampusConnect_invalidAndValidPersonCampusConnect_throwDataLoadingException() {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readCampusConnect(\"invalidAndValidPersonCampusConnect.json\"));","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yooplo"},"content":"    public void readAndSaveCampusConnect_allInOrder_success() throws Exception {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"yooplo"},"content":"        Path filePath \u003d testFolder.resolve(\"TempCampusConnect.json\");","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"yooplo"},"content":"        CampusConnect original \u003d getTypicalCampusConnect();","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"yooplo"},"content":"        JsonCampusConnectStorage jsonCampusConnectStorage \u003d new JsonCampusConnectStorage(filePath);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"yooplo"},"content":"        // Save in new file and read back","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"yooplo"},"content":"        jsonCampusConnectStorage.saveCampusConnect(original, filePath);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"yooplo"},"content":"        ReadOnlyCampusConnect readBack \u003d jsonCampusConnectStorage.readCampusConnect(filePath).get();","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"yooplo"},"content":"        assertEquals(original, new CampusConnect(readBack));","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"yooplo"},"content":"        // Modify data, overwrite exiting file, and read back","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yooplo"},"content":"        original.addPerson(HOON);","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"yooplo"},"content":"        original.removePerson(ALICE);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"yooplo"},"content":"        jsonCampusConnectStorage.saveCampusConnect(original, filePath);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"yooplo"},"content":"        readBack \u003d jsonCampusConnectStorage.readCampusConnect(filePath).get();","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"yooplo"},"content":"        assertEquals(original, new CampusConnect(readBack));","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"yooplo"},"content":"        // Save and read without specifying file path","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"yooplo"},"content":"        original.addPerson(IDA);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"yooplo"},"content":"        jsonCampusConnectStorage.saveCampusConnect(original); // file path not specified","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"yooplo"},"content":"        readBack \u003d jsonCampusConnectStorage.readCampusConnect().get(); // file path not specified","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"yooplo"},"content":"        assertEquals(original, new CampusConnect(readBack));","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"yooplo"},"content":"    public void saveCampusConnect_nullCampusConnect_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"yooplo"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveCampusConnect(null, \"SomeFile.json\"));","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"yooplo"},"content":"     * Saves {@code campusConnect} at the specified {@code filePath}.","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"yooplo"},"content":"    private void saveCampusConnect(ReadOnlyCampusConnect campusConnect, String filePath) {","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"yooplo"},"content":"        try {","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"yooplo"},"content":"            new JsonCampusConnectStorage(Paths.get(filePath))","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"yooplo"},"content":"                    .saveCampusConnect(campusConnect, addToTestDataPathIfNotNull(filePath));","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"yooplo"},"content":"        } catch (IOException ioe) {","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"yooplo"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"yooplo"},"content":"        }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"yooplo"},"content":"    @Test","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"yooplo"},"content":"    public void saveCampusConnect_nullFilePath_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"yooplo"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveCampusConnect(new CampusConnect(), null));","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":111}},{"path":"src/test/java/seedu/address/storage/JsonSerializableCampusConnectTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"public class JsonSerializableCampusConnectTest {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableCampusConnectTest\");","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yooplo"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsCampusConnect.json\");","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonCampusConnect.json\");","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonCampusConnect.json\");","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"        JsonSerializableCampusConnect dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"                JsonSerializableCampusConnect.class).get();","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"        CampusConnect campusConnectFromFile \u003d dataFromFile.toModelType();","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"        CampusConnect typicalPersonsCampusConnect \u003d TypicalPersons.getTypicalCampusConnect();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"        assertEquals(campusConnectFromFile, typicalPersonsCampusConnect);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"        JsonSerializableCampusConnect dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"yooplo"},"content":"                JsonSerializableCampusConnect.class).get();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"yooplo"},"content":"        JsonSerializableCampusConnect dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"yooplo"},"content":"                JsonSerializableCampusConnect.class).get();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"yooplo"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableCampusConnect.MESSAGE_DUPLICATE_PERSON,","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":16,"-":31}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"yooplo"},"content":"        userPrefs.setCampusConnectFilePath(Paths.get(\"CampusConnect.json\"));","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.ReadOnlyCampusConnect;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"        JsonCampusConnectStorage campusConnectStorage \u003d new JsonCampusConnectStorage(getTempFilePath(\"ab\"));","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"        storageManager \u003d new StorageManager(campusConnectStorage, userPrefsStorage);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"yooplo"},"content":"    public void campusConnectReadSave() throws Exception {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"yooplo"},"content":"         * {@link JsonCampusConnectStorage} class.","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"yooplo"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonCampusConnectStorageTest} class.","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"yooplo"},"content":"        CampusConnect original \u003d getTypicalCampusConnect();","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"yooplo"},"content":"        storageManager.saveCampusConnect(original);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"yooplo"},"content":"        ReadOnlyCampusConnect retrieved \u003d storageManager.readCampusConnect().get();","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"yooplo"},"content":"        assertEquals(original, new CampusConnect(retrieved));","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yooplo"},"content":"    public void getCampusConnectFilePath() {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"yooplo"},"content":"        assertNotNull(storageManager.getCampusConnectFilePath());","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":14,"-":54}},{"path":"src/test/java/seedu/address/testutil/CampusConnectBuilder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yooplo"},"content":"package seedu.address.testutil;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"yooplo"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"yooplo"},"content":" * A utility class to help with building CampusConnect objects.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"yooplo"},"content":" * Example usage: \u003cbr\u003e","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"yooplo"},"content":" *     {@code CampusConnect ab \u003d new CampusConnectBuilder().withPerson(\"John\", \"Doe\").build();}","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"yooplo"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"yooplo"},"content":"public class CampusConnectBuilder {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"yooplo"},"content":"    private CampusConnect campusConnect;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"yooplo"},"content":"    public CampusConnectBuilder() {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"        campusConnect \u003d new CampusConnect();","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"yooplo"},"content":"    public CampusConnectBuilder(CampusConnect campusConnect) {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"yooplo"},"content":"        this.campusConnect \u003d campusConnect;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"yooplo"},"content":"    /**","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"yooplo"},"content":"     * Adds a new {@code Person} to the {@code CampusConnect} that we are building.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"yooplo"},"content":"     */","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"yooplo"},"content":"    public CampusConnectBuilder withPerson(Person person) {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"yooplo"},"content":"        campusConnect.addPerson(person);","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"yooplo"},"content":"        return this;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"yooplo"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"yooplo"},"content":"    public CampusConnect build() {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"yooplo"},"content":"        return campusConnect;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"yooplo"},"content":"    }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"yooplo"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":34}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"KrashKart"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Name name;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Phone phone;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Email email;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"KrashKart"},"content":"     * Parses the {@code tagNames} and the respective {@tagCategories} into a {@code Set\u003cTag\u003e} and","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"KrashKart"},"content":"     * set it to the {@code Person} that we are building.","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"KrashKart"},"content":"     * @throws IllegalValueException thrown when a tag category is invalid","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"KrashKart"},"content":"    public PersonBuilder withTags(String[] tags, String[] categories) throws IllegalValueException {","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"KrashKart"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags, categories);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Person build() {","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"KrashKart"},"content":"        return new Person(name, phone, email, tags);","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"KrashKart":7,"-":87}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"yooplo"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class TypicalPersons {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"    public static final String FRIEND_TAG \u003d \"friends\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"    public static final String OWES_MONEY_TAG \u003d \"owesMoney\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"KrashKart"},"content":"            .withEmail(\"alice@example.com\")","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"KrashKart"},"content":"            .withEmail(\"heinz@example.com\").build();","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"KrashKart"},"content":"            .withEmail(\"cornelia@example.com\").withTags(\"friends\").build();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"KrashKart"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"84822246\")","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"KrashKart"},"content":"            .withEmail(\"werner@example.com\").build();","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"KrashKart"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"64824274\")","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"KrashKart"},"content":"            .withEmail(\"lydia@example.com\").build();","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"KrashKart"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"64824432\")","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"KrashKart"},"content":"            .withEmail(\"anna@example.com\").build();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // Manually added","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"KrashKart"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"84824240\")","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"KrashKart"},"content":"            .withEmail(\"stefan@example.com\").build();","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"KrashKart"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"84821315\")","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"KrashKart"},"content":"            .withEmail(\"hans@example.com\").build();","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"KrashKart"},"content":"            .withEmail(VALID_EMAIL_AMY).withTags(VALID_TAG_FRIEND).build();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"KrashKart"},"content":"            .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .build();","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"yooplo"},"content":"     * Returns an {@code CampusConnect} with all the typical persons.","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"yooplo"},"content":"    public static CampusConnect getTypicalCampusConnect() {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"yooplo"},"content":"        CampusConnect ab \u003d new CampusConnect();","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return ab;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"yooplo":4,"KrashKart":15,"CYX22222003":2,"-":53}},{"path":"docs/images/CampusConnectLogo.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"KrashKart":0}},{"path":"docs/images/EmptyUi.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"KrashKart":0}},{"path":"docs/images/Ui.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"yooplo":0,"KrashKart":0}},{"path":"docs/images/UndoSequenceDiagram-Logic.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"damithc":0}},{"path":"docs/images/UndoSequenceDiagram-Model.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"damithc":0}},{"path":"docs/images/blackpanther9229.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"KrashKart":0}},{"path":"docs/images/cattagResponse.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"CYX22222003":0,"blackpanther9229":0}},{"path":"docs/images/chrisjohntan.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"Christopher Tan":0}},{"path":"docs/images/cyx22222003.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"CYX22222003":0}},{"path":"docs/images/findBerniceIS1108Result.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"KrashKart":0}},{"path":"docs/images/findFloorRunResult.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"KrashKart":0}},{"path":"docs/images/github-icon.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"docs/images/helpMessage.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"yooplo":0,"KrashKart":0}},{"path":"docs/images/johndoe.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"docs/images/krashkart.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"KrashKart":0}},{"path":"docs/images/request_access.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"docs/images/yooplo.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"yooplo":0}},{"path":"gradle/wrapper/gradle-wrapper.jar","fileType":"jar","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"src/main/resources/images/CampusConnectLogo.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"KrashKart":0}},{"path":"src/main/resources/images/HelpWindowLogo.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"KrashKart":0}},{"path":"src/main/resources/images/calendar.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"src/main/resources/images/campusConnect.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"yooplo":0}},{"path":"src/main/resources/images/clock.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"src/main/resources/images/fail.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"src/main/resources/images/help_icon.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"src/main/resources/images/info_icon.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}}]
