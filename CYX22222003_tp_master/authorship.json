[{"path":"docs/AboutUs.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"AY2425S1-CS2103T-F14a-4","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"### Nguyen Tien Hoang","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/blackpanther9229.png\" width\u003d\"200px\"\u003e","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"[[github](https://github.com/blackpanther9229)]","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"[[portfolio](team/blackpanther9229.md)]","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Role: Team Lead","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"* Responsibilities: UI","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"### Justin Jiang","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/yooplo.png\" width\u003d\"200px\"\u003e","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"[[github](http://github.com/yooplo)]","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"[[portfolio](team/justin.md)]","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Role: Developer","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"* Responsibilities: UI","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"### Zheng Jie","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/krashkart.png\" width\u003d\"200px\"\u003e","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"[[github](https://github.com/KrashKart)] [[portfolio](team/krashkart.md)]","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Responsibilities: Data","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"### Chen Yixun","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CYX22222003"},"content":"\u003cimg src\u003d\"images/cyx22222003.png\" width\u003d\"200px\"\u003e","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CYX22222003"},"content":"[[github](http://github.com/cyx22222003)]","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CYX22222003"},"content":"[[portfolio](team/cyx22222003.md)]","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"### Christopher Tan","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/chrisjohntan.png\" width\u003d\"200px\"\u003e","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"[[github](http://github.com/chrisjohntan)]","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"[[portfolio](team/chrisjohntan.md)]","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Role: Developer","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Responsibilities: Integration","isFullCredit":false}],"authorContributionMap":{"CYX22222003":4,"-":58}},{"path":"docs/DeveloperGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# CampusConnect Developer Guide","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"* Our name, **CampusConnect**, was inspired by the NUS internship portal [**TalentConnect**](https://nus-csm.symplicity.com/).","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"* Our **CampusConnect** logo reuses the [**NUS logo**](https://nus.edu.sg/identity/guidelines/logo-colour-and-background)","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Our help window icon uses a cartoon representation of the [**NUS mascot on the NUS main reddit page**](https://www.reddit.com/r/nus/)","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"## **Design**","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\"/\u003e","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2425S1-CS2103T-F14a-4/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2425S1-CS2103T-F14a-4/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\"/\u003e","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\"/\u003e","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"### UI component","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2425S1-CS2103T-F14a-4/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2425S1-CS2103T-F14a-4/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2425S1-CS2103T-F14a-4/tp/tree/master/src/main/resources/view/MainWindow.fxml)","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"The `UI` component,","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Logic component","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/AY2425S1-CS2103T-F14a-4/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the `Logic` component works:","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `CampusConnectParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"How the parsing works:","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `CampusConnectParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `CampusConnectParser` returns back as a `Command` object.","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"Finally, the `Logic` contains the important `Command` classes. Some command classes from AB3 have been retained:","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/CommandClassesOriginal.puml\" width\u003d\"600\"/\u003e","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"However, there are new classes implemented for CampusConnect as well:","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/CommandClasses.puml\" width\u003d\"600\"/\u003e","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"The structure is simple:","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Each `Command` class (old and new) extends from the abstract `Command` class, which enforces the implementation of the `execute()` method.","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"* Each `Command` class contains the respective `COMMAND_WORD` representing the name of the command and a `MESSAGE_USAGE` string to demonstrate how to use the respective command.","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"* They also contain their own respective error messages.","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Model component","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/AY2425S1-CS2103T-F14a-4/tp/tree/master/src/main/java/seedu/address/model/Model.java)","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"The `Model` component,","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"CYX22222003"},"content":"* stores the CampusConnect data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `CampusConnect`, which `Person` references. This allows `CampusConnect` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Storage component","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/AY2425S1-CS2103T-F14a-4/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"The `Storage` component,","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"CYX22222003"},"content":"* can save both CampusConnect data and user preference data in JSON format, and read them back into corresponding objects.","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"* inherits from both `CampusConnectStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Common classes","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"## **Implementation**","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"CYX22222003"},"content":"### Undo/redo feature","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"#### Proposed Implementation","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"CYX22222003"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedCampusConnect`. It extends `CampusConnect` with an undo/redo history, stored internally as an `history` and `future`. Additionally, it implements the following operations:","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"CYX22222003"},"content":"* `VersionedCampusConnect#saveCurrentData()` — Saves the current CampusConnect state in its future.","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"CYX22222003"},"content":"*  `VersionedCampusConnect#saveOldData()` — Saves the current CampusConnect state in its history.","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"CYX22222003"},"content":"* `VersionedCampusConnect#extractOldData()` — Restores the previous CampusConnect state from its history.","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"CYX22222003"},"content":"* `VersionedCampusConnect#extractUndoneData()` — Restores a previously undone CampusConnect state from its history.","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"CYX22222003"},"content":"These operations are exposed in the `Model` interface as `Model#saveCurrentCampusConnect()`, `Model#undoCampusConnect()` and `Model#redoCampusConnect()` respectively.","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"CYX22222003"},"content":"Step 1. The user launches the application for the first time. The `VersionedCampusConnect` will be initialized with two stacks.","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"CYX22222003"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the CampusConnect. The `delete` command calls `Model#saveCurrentCampusConnect()`, causing the modified state of the CampusConnect after the `delete 5` command executes to be displayed and the old state of CampusConnect to be saved to the history.","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"CYX22222003"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#saveCurrentCampusConnect()`, causing the modified state of the CampusConnect after the `delete 5` command executes to be displayed and the old state of CampusConnect to be saved to the history.","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"CYX22222003"},"content":"**Note:** If a command fails its execution, it will call `Model#undoCampusConnect()`, so the CampusConnect state will not be saved into the `history`.","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"CYX22222003"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoCampusConnect()`, which will save the current CampusConnect state into `future` and pop the latest saved CampusConnect state from the `history`.","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"CYX22222003"},"content":"**Note:** If the `history` is empty, then there are no previous CampusConnect states to restore. If so, it will return an error to the user rather","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"CYX22222003"},"content":"The `redo` command does the opposite — it calls `Model#redoCampusConnect()`, which save current state into `history` and restores the CampusConnect to that state popped from the top of `future`.","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"CYX22222003"},"content":"**Note:** If the `future` stack is empty, then there are no undone CampusConnect states to restore. The `redo` command uses `Model#canRedoCampusConnect()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"CYX22222003"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the CampusConnect, such as `list`, will usually not call `Model#saveCurrentCampusConnect()`, `Model#undoCampusConnect()` or `Model#redoCampusConnect()`. Thus, the `history` and `future` remain unchanged.","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"CYX22222003"},"content":"Step 6. The user executes `clear`, which calls `Model#commitCampusConnect()`. All CampusConnectState in the future will be removed. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"\u003c/div\u003e","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"#### Design considerations:","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes**","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"CYX22222003"},"content":"* **Alternative 1 (current choice):** Saves the entire CampusConnect.","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"* **Alternative 2:** Each command that changes the state stores the change that it has made.","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"  * Cons: Difficult and tedious to implement.","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"### Product scope","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"**Target user profile**:  NUS undergraduate students","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"   ","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts  ","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types   ","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"* can type fast  ","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions  ","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps  ","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"CYX22222003"},"content":"**Value proposition**: ","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"CYX22222003"},"content":"* manage contacts faster than a typical mouse/GUI driven app  ","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"CYX22222003"},"content":"* can connect people in the same modules/class/clubs/hobby, creating an active environment.  ","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"CYX22222003"},"content":"* make it easier for users to look for contacts of profs and teaching staff.  ","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"### User stories","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"| Priority | As a …​                 | I want to …​                                                    | So that I can…​                                                                    |","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"CYX22222003"},"content":"|----------|-------------------------|-----------------------------------------------------------------|------------------------------------------------------------------------------------|","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"| `* * *`  | new user                | see usage instructions                                          | refer to instructions when I forget how to use the App                             |","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"| `* * *`  | user                    | add a new contact                                               | easily connect with them                                                           |","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"| `* * *`  | user                    | delete a contact                                                | remove entries that I no longer need                                               |","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"| `* * *`  | user                    | find a person by name                                           | locate details of persons without having to go through the entire list             |","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"| `* *`    | user                    | update my contacts information                                  | always keep an updated version of contact information                              |","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"CYX22222003"},"content":"| `* *`    | user                    | undo my last action                                             | prevent the accidental deletion of all my contacts                                 |","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"CYX22222003"},"content":"| `* *`    | user                    | redo my latest undone action                                    | prevent the accidental undoing of certain actions                                  |    ","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"| `*`      | user with many contacts | search contacts by name                                         | locate a contact easily                                                            |","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"| `*`      | user                    | add a tag information to contacts                               | easily locate and connect with individuals such as classmates or club members      |","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"| `*`      | student                 | filter contacts by tags such as \"group project\" or \"internship\" | easily access related contacts                                                     |","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"CYX22222003"},"content":"| `*`      | user with many tags     | categorize tags into different groups                           | easily organize contacts and locate individuals such as classmates or club members |","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"### Use cases","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is `CampusConnect` and the **Actor** is the `user`, unless specified otherwise)","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"**Use case: UC01 - Add a person\u0027s contact**","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"**MSS**","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"1. User requests to add contact.","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"2. CampusConnect adds new contact to contact list.","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"3. CampusConnect displays success message.","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"   Use case ends.","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"**Extensions**","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"* 1a. Input format is invalid.","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"    * 1a1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"    * 1b1. User enters input again.","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"      Steps 1a1-1a2 repeat until input format is valid.","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"* 1b. Another contact with the same name and contact number exists in the list.","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"    * 1b1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"    * 1b2. User enters input again.","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"      Steps 1b1-1b2 repeat until input format is valid.","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"**Use case: UC02 - Delete a person\u0027s contact**","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"**MSS**","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"1. User requests to delete contact.","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"2. CampusConnect finds and deletes contact.","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"3. CampusConnect displays success message.","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"   Use case ends.","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"**Extensions**","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"* 1a. Input format is invalid.","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"    * 1a1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"    * 1a2. User enters input again.","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"      Steps 1a1-1a2 repeat until input format is valid.","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"* 1b. Contact to delete does not exist.","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"    * 1b1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"**Use case: UC03 - Find a person\u0027s contact**","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"**MSS**","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"1. User requests to find contact.","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"2. CampusConnect searches the contact list and displays the details of the contact found.","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"   Use case ends.","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"**Extensions**","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"* 1a. Input format is invalid.","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"    * 1a1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"    * 1a2. User enters input again.","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"      Steps 1a1-1a2 repeat until input format is valid.","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"* 1b. Contact to find does not exist.","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"    * 1b1. CampusConnect shows empty contact list.","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"CYX22222003"},"content":"**Use case: UC04 - Add tags to a contact**  ","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"CYX22222003"},"content":"**Precondition**: Contact to add tags to already exists","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"**MSS**","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"CYX22222003"},"content":"1. User requests to add tags to a contact.","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"2. CampusConnect searches the contact list and finds the correct contact.","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"CYX22222003"},"content":"3. CampusConnect adds tags to the contact.","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"4. CampusConnect displays success message.","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"   Use case ends.","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"**Extensions**","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"* 1a. Input format is invalid.","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"    * 1a1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"    * 1a2 User enters input again.","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"      Steps 1a1-1a2 repeat until input format is valid.","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"CYX22222003"},"content":"* 3a. Tag already exists for the contact","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"CYX22222003"},"content":"    * 3a1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"CYX22222003"},"content":"      ","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"CYX22222003"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"CYX22222003"},"content":"**Use case: UC05 - Delete a tag from a contact**  ","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"CYX22222003"},"content":"**Precondition**: Contact to delete a tag from already exists","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"CYX22222003"},"content":"**MSS**","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"CYX22222003"},"content":"1. User requests to delete a specific tag from a contact","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"CYX22222003"},"content":"2. CampusConnect searches the contact list and finds the correct contact.","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"CYX22222003"},"content":"3. CampusConnect deletes the specific tag from the contact","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"CYX22222003"},"content":"4. CampusConnect displays success message","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"CYX22222003"},"content":"   Use case ends","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"CYX22222003"},"content":"**Extensions**","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"CYX22222003"},"content":"* 1a. Input format is invalid","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"CYX22222003"},"content":"    * 1a1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"CYX22222003"},"content":"    * 1a2 User enters input again.","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"CYX22222003"},"content":"      Steps 1a1-1a2 repeat until input format is valid.","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"CYX22222003"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"CYX22222003"},"content":"* 3a. The contact does not contain the tag user wants to delete","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"CYX22222003"},"content":"    * 3a1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"CYX22222003"},"content":"  ","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"CYX22222003"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"CYX22222003"},"content":"**Use case: UC06 - Undo an execution of command**","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"CYX22222003"},"content":"**Precondition**: At least one valid command has been executed by the user.","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"CYX22222003"},"content":"**MSS**","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"CYX22222003"},"content":"1. User requests to undo the most recent command execution.","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"CYX22222003"},"content":"2. CampusConnect reverts the most recent command, restoring the data to its previous state ","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"CYX22222003"},"content":"before the command was executed.","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"CYX22222003"},"content":"   Use case ends","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"CYX22222003"},"content":"**Extensions**","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"* 1a. No earlier data to revert.","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"CYX22222003"},"content":"    * 1a1. CampusConnect shows error message.","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"CYX22222003"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"CYX22222003"},"content":"**Use Case: UC07 - Redo Command Execution**","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"CYX22222003"},"content":"**Precondition: The user has previously undone at least one command.**","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"CYX22222003"},"content":"**MSS:**","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"CYX22222003"},"content":"1. The user requests to redo the most recently undone command.","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"CYX22222003"},"content":"2. CampusConnect restores the data to the state it was in immediately before the undo.","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"CYX22222003"},"content":"   Use case ends.","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"CYX22222003"},"content":"**Extensions:**","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"* 1a. No More Commands to Redo:","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"    * 1a1. CampusConnect displays an error message indicating that there are no more commands to redo.","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"CYX22222003"},"content":"      Use case ends.","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"CYX22222003"},"content":"4.  The application should respond within two seconds after user input commands.","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"CYX22222003"},"content":"5.  The application is not required to interact any other online system or applications.","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"CYX22222003"},"content":"6.  The application should not use offensive and obscene images or visuals.","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"CYX22222003"},"content":"7.  The record should bot be lost when a system fault occurs.","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"### Glossary","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"* **GUI**: The *Graphical User Interface*, through which the user can input commands and view contacts and tags.","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"* **Field**: An attribute possessed by a contact, namely Phone number, Tags, Name and Email.","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"* **Prefix**: An identifier used in commands to indicate which field is referred to. For the 4 fields Phone, Name, Tags and Email,","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"    the *prefixes* would be `p/`, `t/`, `n/` and `e/` respectively.","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"CYX22222003"},"content":"* **Duplicate Contact**: A contact is considered a duplicate if it shares the same phone number, email, or name with another contact. ","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"CYX22222003"},"content":"    Phone numbers and emails are unique identifiers, so allowing duplicates could cause confusion, such as accidentally contacting the wrong person. ","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"CYX22222003"},"content":"    Unique names also help maintain organization, with small variations (e.g., capitalization or adding a number) used to distinguish individuals with the same name.","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"CYX22222003"},"content":"* **Tag List**: The scrollable list in the GUI displaying all unique tags and their colour-coded categories. The execution of `find` commands do not change the content of tag lists. ","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"* **Person List**: The scrollable list of contacts in the GUI displaying all contacts and the respective values for their fields.","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"* **Commands affected by `undo` and `redo`**: These refer to all commands that affect the *state* of the Tag List and Contact List","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"  in **CampusConnect** and exclude `list` and `find`, as they do not alter the state of the contact or tag list.","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"### Launch and shutdown","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"1. Initial launch","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"1. Saving window preferences","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"### Deleting a person","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"CYX22222003"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. ","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message.","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"   Expected: Similar to previous.","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"### Finding a person","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"1. Finding a person with tags","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"    1. Assumption: Pick any 2 tags (or substring of the tags) present in any contact in the contact list. Call these x and y.","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"    1. Test case: `find t/x` where `x` is the substring/tag chosen\u003cbr\u003e","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"       Expected: All contacts with tags containing x will be displayed with a success message.","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"    1. Test case: `find t/x t/y` where `x` and `y` are the substrings/tags chosen\u003cbr\u003e","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"       Expected: The contact(s) with tags containing x or y will be displayed with a success message.","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"1. Finding a person with multiple fields","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"    1. Prerequisites: There are contacts with tags in the contact list. Add some if this is not the case.","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"    1. Assumption: Pick any name and tag within the same contact. Call these name x and tag y.","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"    1. Test case: `find n/x t/y` where `x` and `y` are the name and tag chosen\u003cbr\u003e","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"       Expected: The contact(s) with name containing x and tags containing y will be displayed with a success message.","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"1. Other incorrect find commands to try: `find`, `find x` (with no prefix)\u003cbr\u003e","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"   Expected: No filtering of contacts will occur and an error message will be displayed.","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"CYX22222003"},"content":"### Undoing the last operation","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"CYX22222003"},"content":"1. Undoing an execution that modifies the CampusConnect data","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"   1. Prerequisites: Perform any operation that modifies the state (all commands except for list and find) to ensure there is an action to undo.","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"CYX22222003"},"content":"   1. Test case: undo ","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"CYX22222003"},"content":"      Expected: The last operation is undone, restoring the previous state. The list updates accordingly, and a status message confirms the undo action.","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"1. Undo immediately after starting the application","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"    ","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"    1. Prerequisites: CampusConnect has been booted and no command has been input yet.","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"    1. Test case: undo","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"CYX22222003"},"content":"       Expected: No undo operation is performed. An error message appears in the status message, indicating there is no action to undo.","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"### Redoing the last operation","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"1. Redoing an execution that modifies the CampusConnect data","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"    1. Prerequisites: Perform any operation that modifies the state (all commands except for list and find) and undo that action.","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"    1. Test case: redo","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"       Expected: The last undone operation is redone, restoring the previous state. The list updates accordingly, and a status message confirms the redo action.","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"1. Redo immediately after starting the application","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"    1. Prerequisites: CampusConnect has been booted and no command has been input yet.","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"    1. Test case: redo","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"          Expected: No redo operation is performed. An error message appears in the status message, indicating there is no action to redo.","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"1. Redo when no operation has been undone","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"    1. Prerequisites: Some commands that affect the state of CampusConnect have been entered but none of them have been redone.","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"    1. Test case: redo","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"       Expected: No redo operation is performed. An error message appears in the status message, indicating there is no action to redo.","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"### Adding a tag","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"CYX22222003"},"content":"1. Adding a tag while all tags are being shown","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"   1. Prerequisites: There are 2 contacts in the list. First contact on the list has tag `CS2100`, second contact has tags `floortball` and `friends`. ","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"   1. Test case: `addtag 1 t/CS2040S`\u003cbr\u003e","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"      Expected: The first contact now has 2 tags `CS2100` and `CS2040S`. The tag list is updated accordingly.","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"CYX22222003"},"content":"      ","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"   1. Test case: `addtag 2 t/homie t/homie`","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"      Expected: The second contact now has 3 tags `floortball`, `friends` and `homie`. The tag list is updated accordingly.","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"CYX22222003"},"content":"      ","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"   1. With the following test cases:","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"      1. Test case: `addtag 0 t/volleyball` \u003cbr\u003e","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"      1. Test case: `addtag 3 t/homie` \u003cbr\u003e","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"      1. Test case: `addtag 2` \u003cbr\u003e","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"         Expected: No new tags are added. Error message is shown.","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"### Deleting a tag from a person","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"1. Deleting a tag.","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"    1. Prerequisites: There are contacts with tags in the contact list. Add some if this is not the case.","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"    1. Assumption: Pick any contact with at least one tag. Let `i` be the index (one-based) of this contact and `x` be the name of the tag.","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"    1. Test case: `deltag i t/x` where `i` is the index and `x` is the tag chosen\u003cbr\u003e","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"       Expected: The tag x will be deleted from person i and the tag will also disappear from the Tag List. A success message will be displayed.","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"1. Other incorrect delete tag commands to try: `deltag`, `deltag M t/x` (where M is larger than the list size or smaller than 0), `deltag 1 x`\u003cbr\u003e","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"   Expected: No deleting of tags will occur and an error message will be displayed.","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"### Categorizing a tag","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"1. Categorizing an existing tag","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"    1. Prerequisites: Ensure that the tag `CS2103` exists and is under a category other than `Academics` (Gold).","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"   ","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"-"},"content":"    2. Test case: `cattag t/CS2103 acads` \u003c/br\u003e","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"       Expected: Success message is shown. All occurrences of the tag `CS2103` in the person list on the bottom left and tag list on the bottom right are set to `Academics` category. Colour of tag `CS2103` set to Gold.","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"2. Attempting to categorize a non-existent tag","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"    1. Prerequisites: Ensure that tag `A` does not exist yet.","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"-"},"content":"   ","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"    2. Test case: `cattag t/A activity` \u003c/br\u003e","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"       Expected: Error message \"`Tag not found: [A]`\" is shown, indicating that tag `A` does not exist.","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"-"},"content":"   ","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"-"},"content":"3. Attempting to categorize to an invalid category","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"    1. Prerequisites: Ensure that tag `CS2103` is still present.","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"   ","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"-"},"content":"    2. Test case: `cattag t/CS2103 foo` \u003c/br\u003e","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"       Expected: Error message \"`Invalid category: foo`\" is shown.","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"   ","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"4. Attempting to categorize an **invalid tag** to an **invalid category**","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"-"},"content":"    1. Prerequisites: Ensure that tag `A` does not exist yet.","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"   ","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"-"},"content":"    2. Test case: `cattag t/A foo` \u003c/br\u003e","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"       Expected: Error message \"`Invalid category: foo`\" is shown. Message for invalid tag is not shown for this case.","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"CYX22222003"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"CYX22222003"},"content":"## **Appendix: Planned enhancements**","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"CYX22222003"},"content":"Team size: 5","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"CYX22222003"},"content":"1. Change the font color for tags: Currently, the font color for `GENERAL` tags is grey, making them less noticeable. We plan to use a higher-contrast font color to make tags more prominent and easier to read.","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"CYX22222003"},"content":"2. Allow adding overseas phone number: The app currently supports only Singaporean phone number. We aim to expand functionality to include valid international numbers, complete with country codes.","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"CYX22222003"},"content":"3. Allow certain special characters: We currently only allow alphanumeric characters and whitespaces. We plan to support additional characters, such as hyphens, to better accommodate real-world naming conventions.","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"-"},"content":"4. Make duplicate contact error message more specific: The current error message for duplicate contacts, “This person already exists in CampusConnect,” is too general. We plan to enhance it by specifying the name of the existing contact that duplicates the one the user is attempting to add.","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"-"},"content":"5. Make `find n/`, `find p/` and `find e/` throw an error while `find t/` finds all users with not tags.","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"-"},"content":"6. Make the result display box slightly larger to accommodate longer error messages.","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"-"},"content":"## **Appendix: Future features**","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"-"},"content":"Below is a list of features that we feel would further enhance the user experience.","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"-"},"content":"  |              Feature               | Description                                                                      |","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"CYX22222003"},"content":"  |:----------------------------------:|----------------------------------------------------------------------------------|","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"-"},"content":"  |         Clustering of tags         | Group tags of the same categories together in the UI\u0027s display of the tags list. |","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"-"},"content":"  |            Pin contacts            | Keep selected contacts constantly shown at the top of the contacts list.         |","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"-"},"content":"  |     Customize category colors      | Change the colors of the categories to the user\u0027s preference.                    |","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"-"},"content":"  |    Multiple numbers per contact    | Allow more than one number per contact to accommodate multiple contact numbers.  |","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"-"},"content":"  |     Custom fields for contacts     | Add custom fields to the contacts added.                                         |","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"-"},"content":"  |      Custom shortcut commands      | Add custom shortcut commands to streamline actions within the application.       |","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"-"},"content":"  |    Delete tag from all contacts    | Remove a specific tag from all contacts at once.                                 |","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"-"},"content":"  |             Dark mode              | Include a dark mode theme for easier viewing in low light conditions.            |","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"-"},"content":"  |      Copy contact information      | Enable copying of contact information to reduce errors from manual copying.      |","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"-"},"content":"  |          Export contacts           | Provide an option to export contact information for easier sharing.              |","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"-"},"content":"  ","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"-"},"content":"## **Appendix: Effort**","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"-"},"content":"Our goal was to improve AB3 in terms of contact organisation, finding and tagging to allow for greater functionality and flexibility.","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"-"},"content":"Our first major change was to modify the `find` command to accept any field as a parameter and allow multiple parameters. This was a moderate effort","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"-"},"content":"that required us to change how the `FindCommand` class worked by creating new predicate classes and processing the logic for that as well,","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"-"},"content":"which was aided by the given predicate classes that we used as a template, but it was not trivial.","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"-"},"content":"Our next major change was the `undo` and `redo` commands, which were quite extensive to implement. We had to create the `VersionedCampusConnect` (a ","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"-"},"content":"variation on the `VersionedAddressBook`) and resolve serious issues related to the undo and redo state, such as logic to process","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"-"},"content":"when the `undo` and `redo` commands failed and whether non-state affecting commands (like `find`) would affect the `undo` and `redo` result. Overall,","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"-"},"content":"this was quite difficult.","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"-"},"content":"Finally, our last major change was the tag management and categorisation system, which was more difficult as the `undo` and `redo`. We added a tag management ","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"-"},"content":"component and several commands, different types of tags, and a tag list component in the UI. Figuring out how to dynamically update the tags and the tag list ","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"-"},"content":"in the GUI required a restructuring of our GUI files (under the `ui` folder) and we had faced many issues with the tag categorisation system. All in all, ","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"-"},"content":"implementing this system was not easy but it did provide better tag customisation and control than AB3.","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":738,"author":{"gitId":"-"},"content":"Most commands implemented used the given `Command` classes as a reference, but modified them to adapt the respective `execute()` methods for the command.","isFullCredit":false},{"lineNumber":739,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":740,"author":{"gitId":"-"},"content":"On top of all these, we had also modified the GUI, which required us to familiarise and work through the ","isFullCredit":false},{"lineNumber":741,"author":{"gitId":"-"},"content":"quirks of JavaFX.","isFullCredit":false}],"authorContributionMap":{"CYX22222003":121,"-":620}},{"path":"docs/UserGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# CampusConnect User Guide","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"**CampusConnect** is the ultimate contact management app for NUS students with speedy typing skills. Our","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"contact tagging, finding, and organisation features ensure that with just a few keystrokes, you never forget","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"who you meet, where you met them, and what their contact details are.","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"**CampusConnect** offers a seamless and quick contact management experience using our *Command Line Interface* style of","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"input, where commands are processed in the blink of an eye. If you can type quickly, we can get it done faster than ","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"any traditional point-and-click management app.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Quick start","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Ensure you have Java `17` or above installed in your Computer.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. Download the latest `.jar` file from [here](https://github.com/AY2425S1-CS2103T-F14a-4/tp/releases/).","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your CampusConnect.","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar CampusConnect.jar` command to run the application.\u003cbr\u003e","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app does not contain any sample data.\u003cbr\u003e","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ![EmptyUi](images/EmptyUi.png)","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"   Some example commands you can try:","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com` : Adds a contact named `John Doe` with phone number `98765432` and email `johnd@example.com` to CampusConnect.","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * `delete 1` : Deletes the 1st contact shown in the current list.","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"## Features","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Prefixes (for the contact information) refer to any of these: `n/`, `p/`, `e/`, `t/`, which are","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"  used for contact information (name, phone, email and tag respectively)","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"**Notes about duplicate contacts:**\u003cbr\u003e","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* A contact is considered a duplicate of another if it has the same Name, Phone or Email as the other contact.","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CYX22222003"},"content":"**Notes about case sensitivity:**\u003cbr\u003e","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"CYX22222003"},"content":"* Names, emails and tags are case-sensitive. ","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CYX22222003"},"content":"**Notes about format of fields:**\u003cbr\u003e","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CYX22222003"},"content":"* Names should only contain alphanumeric characters and spaces","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CYX22222003"},"content":"* Phone numbers should only contain numbers, start with 6, 8 or 9, and it must be 8 digits long","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CYX22222003"},"content":"* Emails should be of the format `local-part@domain` and adhere to the following constraints:","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CYX22222003"},"content":"  1. The local-part should only contain alphanumeric characters and these special characters, excluding the parentheses, (+_.-)","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CYX22222003"},"content":"  2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels separated by periods.","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CYX22222003"},"content":"     The domain name must:","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CYX22222003"},"content":"      - end with a domain label at least 2 characters long","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CYX22222003"},"content":"      - have each domain label start and end with alphanumeric characters","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CYX22222003"},"content":"      - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CYX22222003"},"content":"* Tag names should be alphanumeric. Tags that have multiple words can be separated by a hyphen (-)","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"## Command summary","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"|                                        Action                                         |                                                        Format, Examples                                                         |","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"|:-------------------------------------------------------------------------------------:|:-------------------------------------------------------------------------------------------------------------------------------:|","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"|                         **[Add:link:](#adding-a-person-add)**                         | `add n/NAME p/PHONE_NUMBER e/EMAIL [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/91231234 e/jamesho@example.com t/friend t/classmate` |","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"|                    **[Clear:link:](#clearing-all-entries-clear)**                     |                                                             `clear`                                                             |","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"|                     **[Delete:link:](#deleting-a-person-delete)**                     |                                               `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                               |","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"|                       **[Edit:link:](#editing-a-person-edit)**                        |         `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`         |","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"| **[Find by contact information:link:](#finding-persons-by-contact-information-find)** |                       `find PREFIX/KEYWORD [PREFIX/MORE_KEYWORDS]…​`\u003cbr\u003e e.g., `find n/James t/floorball`                       |","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"|             **[Add tag:link:](#adding-tags-to-a-specific-person-addtag)**             |                       `addtag INDEX t/KEYWORD [t/MORE_TAGS]…​` \u003cbr\u003e e.g. `addtag 1 t/friend t/classmate`                        |","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"|                **[Delete tag:link:](#deleting-a-person-s-tag-deltag)**                |                                     `deltag INDEX t/KEYWORD` \u003cbr\u003e e.g. `deltag 1 t/friend`                                      |","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"|                **[Categorize tag:link:](#categorizing-a-tag-cattag)**                 |                    `cattag t/TAG [t/MORE_TAGS…​] CATEGORY` \u003cbr\u003e e.g. `cattag t/floorball t/mahjong activity`                    |","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"|                     **[Undo action:link:](#undo-a-command-undo)**                     |                                                             `undo`                                                              |","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"|                     **[Redo action:link:](#redo-a-command-redo)**                     |                                                             `redo`                                                              |","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"|                      **[List:link:](#listing-all-persons-list)**                      |                                                             `list`                                                              |","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"|                         **[Help:link:](#viewing-help-help)**                          |                                                             `help`                                                              |","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"## Commands","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Viewing help : `help`","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"Shows a message with a clickable hyperlink.","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"When clicked, this hyperlink will show the help page.","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"Format: `help`","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"### Adding a person : `add`","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"Adds a person to CampusConnect.","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL [t/TAG]…​`","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"CYX22222003"},"content":"* A person can have any number of tags (including 0)","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"* The phone number must follow the Singaporean convention: have 8 digits, start with 6, 8, or 9, and consist only of numbers.","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Duplicate contacts cannot be added to the list.","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"CYX22222003"},"content":"* Names are case-sensitive. For example, “Alice” and “alice” are considered distinct names.","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"CYX22222003"},"content":"* Names should only contain alphanumeric characters and spaces, and it should not be blank.","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"Examples:","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com`","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com p/92345672 t/criminal`","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"Shows a list of all persons in CampusConnect.","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `list`","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"Edits an existing person in CampusConnect.","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [t/TAG]…​`","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed, i.e. adding of tags is not cumulative.","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    specifying any tags after it.","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"* After editing the contact, it should not be a duplicate of another contact.","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"Examples:","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"### Finding persons by contact information : `find`","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"Finds persons whose name, email address, contact number, or tags contain any of the given keywords, even if the keyword is only a part of the information stored.","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"Format: ","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"`find PREFIX/KEYWORD [PREFIX/MORE_KEYWORDS]…​`","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"* Only the specified fields are searched.","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`.","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter, e.g. `find n/Hans n/Bo` is equivalent to `find n/Bo n/Hans`.","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search),","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"  e.g. `find n/Hans n/Bo` will match persons with names `Hans Gruber` or `Bo Yang`.","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"* Keywords do not need to fully match the field, a partial match is sufficient, e.g. `bern` can match names like `Bernice` or `Bernard`","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"How `find` works with multiple parameters:","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"* If multiple keywords for a field are present, `find` will display contacts that satisfy *any* keyword for that field.","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"* If multiple fields are present, `find` will display contacts that satisfy **all** of these fields.","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"Examples:","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"* `find n/bernice t/is1108` returns `Bernice Yu`\u003cbr\u003e","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"  ![result for \u0027find n/bernice t/is1108\u0027](images/findBerniceIS1108Result.png){ width\u003d\"675px\" }","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"* `find t/floor t/run` returns all contacts with any tag containing `floor` or `run` \u003cbr\u003e","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"  ![result for \u0027find t/floor t/run\u0027](images/findFloorRunResult.png){ width\u003d\"675px\" }","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"* `find n/alex n/bernice t/floor t/neighbour` returns all contacts that have names containing either `alex` or `bernice` **with** tags containing either `floor` or `neighbour`","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"Deletes the specified person from CampusConnect.","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"Examples:","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in CampusConnect.","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"* `find n/Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"CYX22222003"},"content":"### Adding tags to a specific person : `addtag`","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"Adds the specified person\u0027s tag.","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"Format: `addtag INDEX t/TAG [t/MORE_TAGS]…​`","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"* Adds the tags with the specified value `TAG` of the person at the specified `INDEX`.","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"* Multiple tags can be added to a person per command.","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"CYX22222003"},"content":"* Attempt to add duplicate tags to a person will cause an error message to be thrown.","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"Examples:","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"* `addtag 1 t/friend` adds a \u0027friend\u0027 tag to the first person in the list.","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"* `addtag 2 t/classmate t/neighbour` adds both the \u0027classmate\u0027 and \u0027neighbour\u0027 tag to the second person in the list.","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"### Deleting a person\u0027s tag : `deltag`","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"Deletes the specified person\u0027s tag.","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"Format: `deltag INDEX t/TAG`","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"* Deletes the tag with the specified value `TAG` of the person at the specified `INDEX`.","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"* Only one tag can be deleted per command.","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"* The list of tags will be updated accordingly.","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"Examples:","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"* `deltag 1 t/friend` ","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"deletes the `friend` tag of the first person in the list.","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"### Categorizing a tag : `cattag`","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"Categorizes a tag under a defined category.","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"Format: `cattag t/TAG [t/MORE_TAGS]…​ CATEGORY`","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"* Sets the tag(s) in CampusConnect with the specified value `TAG` to fall under the specified `CATEGORY`.","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"* Currently available categories with their respective keywords and colours are:","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"    Category      | Keyword (case sensitive) | Colour","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    --------------|--------------------------|-  ","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"    **General**   | `general`                | \u003cspan style\u003d\"color:DarkGray\"\u003e Grey \u003c/span\u003e","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"    **Academics** | `acads`                  | \u003cspan style\u003d\"color:Gold\"\u003e Gold \u003c/span\u003e","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    **Activities**| `activity`               | \u003cspan style\u003d\"color:DodgerBlue\"\u003e Blue \u003c/span\u003e","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"    **Networking**| `network`                | \u003cspan style\u003d\"color:LimeGreen\"\u003e Green \u003c/span\u003e          ","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"    **Mentorship**| `mentor`                 | \u003cspan style\u003d\"color:HotPink\"\u003e Pink \u003c/span\u003e","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"* Multiple tags can be categorized to the same category using a single command.","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"* All tags specified must be valid existing tags.","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"* Attempts to set a tag to its current category will cause the whole command to be rejected.","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"* Only one category is allowed to be entered per command, i.e. `cattag t/tag1 acads t/tag2 general` is not allowed.","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"* Note: Newly created tags (by [`add`:link:](#adding-a-person-add) or [`addtag`:link:](#adding-tags-to-a-specific-person-addtag)) will have category `General` and colour `Grey` by default.","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"Examples:","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"* `cattag t/CS2100 acads` categorizes the tag `CS2100` under `Academics` and display colour of the tag`CS2100` becomes `Gold`.","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"* `cattag t/floorball t/mahjong activity` categorizes both tags `floorball` and `mahjong` under `Activities` with colour `Blue`. ","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"![cattag response image](images/cattagResponse.png)","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"### Undo a command : `undo`","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"Undoes the previous command and reverts CampusConnect.","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"Format: `undo`","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"* Reverts the state of CampusConnect to the one before the most recent command, if any.","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"CYX22222003"},"content":"* When the oldest version of CampusConnect is reached, `undo` command will cause an exception to be thrown","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"* Only commands that modify the data of CampusConnect can be undone. Commands such as `list` and `find` will not be undone.","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"### Redo a command : `redo`","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"Reapplies a command that was previously undone by `undo`.","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"Format: `redo`","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"* Advances CampusConnect to the state it was in before the most recent `undo` command, if any.","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"* Only commands that modify the data of CampusConnect can be redone. Commands such as `list` and `find` will not be redone.","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"* Note: If a new command (excluding `redo` or `undo`) is executed after an `undo`, the redo history is cleared, and further `redo` will not be possible.","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"Clears all entries from CampusConnect.","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"Format: `clear`","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\"\u003e","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"\u003cstrong\u003eCaution:\u003c/strong\u003e","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"* There will not be any confirmation message shown. \u003c/br\u003e","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"* If you have unintentionally executed the `clear` command, you can use the [`undo`:link:](#undo-a-command-undo) command to restore your data.","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"Exits the program.","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"Format: `exit`","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"### Saving the data","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"CampusConnect data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"### Editing the data file","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"CampusConnect data is saved automatically as a JSON file `[JAR file location]/data/CampusConnect.json`. Advanced users are welcome to update data directly by editing that data file.","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\"\u003e","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"\u003cstrong\u003eCaution:\u003c/strong\u003e","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"* If your changes to the data file makes its format invalid, CampusConnect will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"* Furthermore, certain edits can cause CampusConnect to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"\u003c/box\u003e","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"## FAQ","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CampusConnect home folder.","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"CYX22222003"},"content":"**Q**: How can I add contacts with the same name?\u003cbr\u003e","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"CYX22222003"},"content":"**A**: If two contacts share the same name, you can differentiate them by adding a number or adjusting the capitalization. For example, use “Mary” and “Mary 2” or “John” and “john” to keep each entry unique.","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"**Q**: What if I need to use special characters in tags?\u003cbr\u003e","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"**A**: You can work around this by using hyphens (-) to signify spacing and eliminate all special characters. For example, you can add \"Cafe@NUS\" as a tag using \"Cafe-NUS\".","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"**Q**: Why can\u0027t I find fields by whole words? There\u0027s too much clutter!\u003cbr\u003e","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"**A**: We understand the importance of a neat and simple contact list. But, like search engines, we want to give you unparallelled control and flexibility over how you find contacts. As is often said, \"It is better ","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"to give too much than to not give at all\", and we believe that finding by whole words is not enough and gives too little.","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"**Q**: Why are tags case-sensitive? Now I can just add tags with different cases and clutter up CampusConnect...\u003cbr\u003e","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"**A**: Again, we want to give you the flexibility to customise your own tags, so we allow this.","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"**Q**: Why does the tags list not update when I `find` something? \u003cbr\u003e","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"**A**: Our tags list is meant to span the entire contact list, which can serve as a reference if you require to find a contact to add a specific and easily-forgettable tag to.","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"## Known Issues","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"3. **If the value of a field is too long**, the display will not render the full value properly. However, we expect that the average contact will not have such a long name nor require a long tag name.","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"","isFullCredit":false}],"authorContributionMap":{"CYX22222003":23,"-":344}},{"path":"docs/diagrams/AddTagSequenceDiagram.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":CampusConnectParser\" as CampusConnectParser LOGIC_COLOR","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":AddTagCommandParser\" as AddTagCommandParser LOGIC_COLOR","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"a:AddTagCommand\" as AddTagCommand LOGIC_COLOR","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"endbox","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"box Model MODEL_COLOR_T1","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"addtag 2 t/mate\")","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"LogicManager -\u003e CampusConnectParser : parseCommand(\"addtag 2 t/mate\")","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate CampusConnectParser","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"create AddTagCommandParser","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"CampusConnectParser -\u003e AddTagCommandParser","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate AddTagCommandParser","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"AddTagCommandParser --\u003e CampusConnectParser","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate AddTagCommandParser","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"CampusConnectParser -\u003e AddTagCommandParser: parse(\"2 t/mate\")","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate AddTagCommandParser","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"create AddTagCommand","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"AddTagCommandParser -\u003e AddTagCommand","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate AddTagCommand","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"AddTagCommand --\u003e AddTagCommandParser :","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate AddTagCommand","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"AddTagCommandParser --\u003e CampusConnectParser : addTagCommand","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddTagCommandParser -[hidden]-\u003e CampusConnectParser","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"destroy AddTagCommandParser","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"CampusConnectParser --\u003e LogicManager : addTagCommand","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"deactivate CampusConnectParser","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddTagCommand : execute(m)","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"activate AddTagCommand","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"AddTagCommand -\u003e Model : getFilteredPersonList()","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"activate Model","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"Model --\u003e AddTagCommand : lastShownList","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"AddTagCommand -\u003e Model : get(index)","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"activate Model","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"Model --\u003e AddTagCommand : personToEdit","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"AddTagCommand -\u003e Model : addPersonTags(person, tags)","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"activate Model","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"Model --\u003e AddTagCommand","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"create CommandResult","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"AddTagCommand -\u003e CommandResult","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"activate CommandResult","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"CommandResult --\u003e AddTagCommand : r","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"deactivate CommandResult","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"AddTagCommand --\u003e LogicManager","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"deactivate AddTagCommand","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"[\u003c-- LogicManager","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"deactivate LogicManager","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"CYX22222003":4,"-":76}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"scale 1.5","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skin rose","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ActivityFontSize 15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ArrowFontSize 12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"start","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":":User inputs and","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"executes command;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":":Parse command;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"if () then ([command will modify CampusConnect])","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    :Purge undone states;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"    :Save current CampusConnect;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    :Execute Command;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"    if () then ([command execution fails])","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"    :Recover to old version of","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"    CampusConnect;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"    else ([else])","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"    endif","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"else ([else])","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":":Execute Command;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"endif","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"stop","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"CYX22222003":10,"-":16}},{"path":"docs/diagrams/DeleteTagSequenceDiagram.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"skinparam ArrowFontStyle plain","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"box Logic LOGIC_COLOR_T1","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"participant \":CampusConnectParser\" as CampusConnectParser LOGIC_COLOR","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"participant \":DeleteTagCommandParser\" as DeleteTagCommandParser LOGIC_COLOR","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"participant \"d:DeleteTagCommand\" as DeleteTagCommand LOGIC_COLOR","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"end box","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"box Model MODEL_COLOR_T1","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"participant \"m:Model\" as Model MODEL_COLOR","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"end box","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"deltag 1 t/test\")","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"activate LogicManager","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"LogicManager -\u003e CampusConnectParser : parseCommand(\"deltag 1 t/test\")","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"activate CampusConnectParser","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"create DeleteTagCommandParser","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"CampusConnectParser -\u003e DeleteTagCommandParser","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"activate DeleteTagCommandParser","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommandParser --\u003e CampusConnectParser","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"deactivate DeleteTagCommandParser","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"CampusConnectParser -\u003e DeleteTagCommandParser: parse(\"1 t/test\")","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"activate DeleteTagCommandParser","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"create DeleteTagCommand","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommandParser -\u003e DeleteTagCommand","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"activate DeleteTagCommand","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommand --\u003e DeleteTagCommandParser :","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"deactivate DeleteTagCommand","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommandParser --\u003e CampusConnectParser : d","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommandParser -[hidden]-\u003e CampusConnectParser","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"destroy DeleteTagCommandParser","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"CampusConnectParser --\u003e LogicManager : d","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"deactivate CampusConnectParser","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CYX22222003"},"content":"LogicManager -\u003e DeleteTagCommand : execute(m)","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CYX22222003"},"content":"activate DeleteTagCommand","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommand -\u003e Model : getFilteredPersonList()","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CYX22222003"},"content":"activate Model","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CYX22222003"},"content":"Model --\u003e DeleteTagCommand : lastShownList","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CYX22222003"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommand -\u003e Model : get(index)","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CYX22222003"},"content":"activate Model","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CYX22222003"},"content":"Model --\u003e DeleteTagCommand : person","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CYX22222003"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommand -\u003e Model : deletePersonTag(person, tag)","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"activate Model","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CYX22222003"},"content":"Model --\u003e DeleteTagCommand","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CYX22222003"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CYX22222003"},"content":"create CommandResult","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommand -\u003e CommandResult","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CYX22222003"},"content":"activate CommandResult","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CYX22222003"},"content":"CommandResult --\u003e DeleteTagCommand : r","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CYX22222003"},"content":"deactivate CommandResult","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CYX22222003"},"content":"DeleteTagCommand --\u003e LogicManager","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CYX22222003"},"content":"deactivate DeleteTagCommand","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CYX22222003"},"content":"[\u003c-- LogicManager","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CYX22222003"},"content":"deactivate LogicManager","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CYX22222003"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"CYX22222003":78,"-":2}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"title Initial state","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"package Future {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"package History {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"class State1 as \"\u003cu\u003ecc0:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"History -[hidden]left-\u003e Future","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","isFullCredit":false}],"authorContributionMap":{"CYX22222003":9,"-":13}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"package Future {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"package History {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    class State1 as \"\u003cu\u003ecc0:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"class State2 as \"\u003cu\u003ecc1:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"History -[hidden]left-\u003e Future","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"@end","isFullCredit":false}],"authorContributionMap":{"CYX22222003":7,"-":17}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"package Future {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"package History \u003c\u003crectangle\u003e\u003e {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    class State1 as \"\u003cu\u003ecc0:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"    class State2 as \"\u003cu\u003ecc1:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"class State3 as \"\u003cu\u003ecc2:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"History -[hidden]left-\u003e Future","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"@end","isFullCredit":false}],"authorContributionMap":{"CYX22222003":8,"-":17}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"undo\"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"package Future \u003c\u003crectangle\u003e\u003e {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"    class State3 as \"\u003cu\u003ecc2:CampusConnect\u003c/u\u003e\"\u003e\"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"package History \u003c\u003crectangle\u003e\u003e {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    class State1 as \"\u003cu\u003ecc0:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"class State2 as \"\u003cu\u003ecc1:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"History -[hidden]left-\u003e Future","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"@end","isFullCredit":false}],"authorContributionMap":{"CYX22222003":9,"-":17}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"title After command \"undo\"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"package Future \u003c\u003crectangle\u003e\u003e {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"    class State3 as \"\u003cu\u003ecc2:CampusConnect\u003c/u\u003e\"\u003e\"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"    class State1 as \"\u003cu\u003ecc1:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"package History {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"class State2 as \"\u003cu\u003ecc0:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"History -[hidden]left-\u003e Future","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"@end","isFullCredit":false}],"authorContributionMap":{"CYX22222003":11,"-":16}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"title After command \"redo\"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"package Future \u003c\u003crectangle\u003e\u003e {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"    class State3 as \"\u003cu\u003ecc2:CampusConnect\u003c/u\u003e\"\u003e\"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"package History \u003c\u003crectangle\u003e\u003e {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    class State1 as \"\u003cu\u003ecc0:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"class State2 as \"\u003cu\u003ecc1:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"History -[hidden]left-\u003e Future","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"Pointer -up-\u003e State2","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"@end","isFullCredit":false}],"authorContributionMap":{"CYX22222003":11,"-":15}},{"path":"docs/diagrams/UndoRedoState6.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"skinparam ClassFontColor #000000","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"skinparam ClassBorderColor #000000","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"skinparam ClassBackgroundColor #FFFFAA","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"title After command \"clear\"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"package Future {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"package History \u003c\u003crectangle\u003e\u003e {","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"    class State1 as \"\u003cu\u003ecc0:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    class State2 as \"\u003cu\u003ecc1:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"class State3 as \"\u003cu\u003ecc3:CampusConnect\u003c/u\u003e\"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"History -[hidden]left-\u003e Future","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"State1 -[hidden]right-\u003e State2","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"State2 -[hidden]right-\u003e State3","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"class Pointer as \"Current State\" #FFFFFF","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"Pointer -up-\u003e State3","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"note right on link: State cc2 deleted and Future stack is cleared.","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"@end","isFullCredit":false}],"authorContributionMap":{"CYX22222003":27}},{"path":"docs/diagrams/UndoSequenceDiagram-Model.puml","fileType":"puml","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"participant \":CampusConnect\" as CampusConnect MODEL_COLOR","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":VersionedCampusConnect\" as VersionedCampusConnect MODEL_COLOR","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"end box","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"[-\u003e Model : undoCampusConnect()","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate Model","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"Model -\u003e CampusConnect: recoverPreviousState()","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"activate CampusConnect","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"CampusConnect -\u003e VersionedCampusConnect: extractOldData()","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"activate VersionedCampusConnect","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"VersionedCampusConnect -\u003e VersionedCampusConnect: saveCurrentData()","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate VersionedCampusConnect","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"VersionedCampusConnect --\u003e VersionedCampusConnect","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"deactivate VersionedCampusConnect","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"VersionedCampusConnect --\u003e CampusConnect:","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate VersionedCampusConnect","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"CampusConnect --\u003e Model: cc","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"deactivate CampusConnect","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"Model -\u003e Model: setCampusConnect(cc)","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"activate Model","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"Model --\u003e Model","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"[\u003c-- Model","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"deactivate Model","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"@enduml","isFullCredit":false}],"authorContributionMap":{"CYX22222003":21,"-":20}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.ListCommand;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RedoCommand;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.SuperFindCommand;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.UndoCommand;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.CampusConnectParser;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyCampusConnect;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Model model;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Storage storage;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final CampusConnectParser campusConnectParser;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.model \u003d model;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        campusConnectParser \u003d new CampusConnectParser();","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Command command \u003d campusConnectParser.parseCommand(commandText);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CYX22222003"},"content":"        if (shouldSaveCampusConnect(command)) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CYX22222003"},"content":"            model.saveCurrentCampusConnect();","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CYX22222003"},"content":"        CommandResult commandResult;","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"            commandResult \u003d command.execute(model);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            storage.saveCampusConnect(model.getCampusConnect());","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"        } catch (CommandException e) {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"            if (!(command instanceof RedoCommand)) {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CYX22222003"},"content":"                model.undoExceptionalCommand();","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CYX22222003"},"content":"            }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CYX22222003"},"content":"            throw e;","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return commandResult;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public ReadOnlyCampusConnect getCampusConnect() {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getCampusConnect();","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public ObservableList\u003cTag\u003e getListOfCurrentTags() {","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return model.getListOfCurrentTags().sorted();","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Path getCampusConnectFilePath() {","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return model.getCampusConnectFilePath();","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"CYX22222003"},"content":"    private boolean shouldSaveCampusConnect(Command c) {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        boolean isUndoCommand \u003d c instanceof UndoCommand;","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        boolean isRedoCommand \u003d c instanceof RedoCommand;","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        boolean isListCommand \u003d c instanceof ListCommand;","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        boolean isSuperFindCommand \u003d c instanceof SuperFindCommand;","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        boolean isSaveCommand \u003d !(isUndoCommand || isRedoCommand || isListCommand || isSuperFindCommand);","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return isSaveCommand;","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":15,"-":100}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_NO_TAG \u003d \"The person does not contain the tag\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_TAG_NOT_FOUND \u003d \"There is no tag presented in the command!\";","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_DELETE_TAG_SUCCESS \u003d \"Tag %1$s is deleted from student %2$s\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_ADD_TAG_EMPTY_TAGS \u003d \"Should not add empty tag to a person\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_UNDO_FAILURE \u003d \"Already at the oldest change\";","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_REDO_FAILURE \u003d \"Already at the latest change\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        person.getOrderedTags().forEach(builder::append);","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return builder.toString();","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":6,"-":49}},{"path":"src/main/java/seedu/address/logic/commands/AddTagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Add new tag(s) for an existing person","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddTagCommand extends Command {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"addtag\";","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add tag(s) for the person identified \"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list\\n\"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"TAG [\" + PREFIX_TAG + \"MORE_TAGS]...\\n\"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_TAG + \"friend \" + PREFIX_TAG + \"owesMoney\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_TAG_SUCCESS \u003d \"Tag added: %1$s\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_ADD \u003d \"At least one tag to be provided.\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_CONTAINS_DUPLICATE_TAG \u003d \"%1$s already contains some \"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"            + \"tags you want to add\";","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Index index;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"    private final Set\u003cTag\u003e tagSet;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"     * Constructs add tag command object.","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"    public AddTagCommand(Index index, Set\u003cTag\u003e tagSet) {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(index);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"        requireNonNull(tagSet);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.index \u003d index;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"        this.tagSet \u003d tagSet;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assert model !\u003d null;","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CYX22222003"},"content":"        if (personToEdit.containsDuplicateTag(this.tagSet)) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CYX22222003"},"content":"            throw new CommandException(String.format(MESSAGE_CONTAINS_DUPLICATE_TAG,","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"                    Messages.format(personToEdit)));","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"        model.addPersonTags(personToEdit, this.tagSet);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // retrieve the person again for the new tags","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        personToEdit \u003d model.getFilteredPersonList().get(index.getZeroBased());","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CYX22222003"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TAG_SUCCESS, Messages.format(personToEdit)));","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddTagCommand)) {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddTagCommand otherAddTagCommand \u003d (AddTagCommand) other;","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CYX22222003"},"content":"        return index.equals(otherAddTagCommand.index) \u0026\u0026 this.tagSet.equals(otherAddTagCommand.tagSet);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CYX22222003"},"content":"                .add(\"tag list to add:\", tagSet)","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .toString();","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":16,"-":77}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears CampusConnect","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"CampusConnect has been cleared!\";","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setCampusConnect(new CampusConnect());","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"            return true;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"        if (!(other instanceof ClearCommand)) {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"            return false;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"        return true;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":14,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"/**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":" * Implements command to delete a tag from a person.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":" * format: deltag [INDEX] t/[TAG NAME].","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":" */","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"public class DeleteTagCommand extends Command {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"deltag\";","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"            + \": Deletes tag from the person identified by the index number used in the displayed person list.\\n\"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) t/TAG\\n\"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + \"t/hello_world\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"    private final Index targetIndex;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"    private final Tag targetTag;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"     * Constructs new DeleteTag command.","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"     * @param targetIndex the index of the person in the list.","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"     * @param target the tag the user wants to delete.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"    public DeleteTagCommand(Index targetIndex, Tag target) {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"        assert targetIndex !\u003d null;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"        assert target !\u003d null;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"        this.targetIndex \u003d targetIndex;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"        this.targetTag \u003d target;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"     * Executes the command and delete a tag from a specific person.","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"    public CommandResult execute(Model model) throws CommandException {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CYX22222003"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CYX22222003"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CYX22222003"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CYX22222003"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CYX22222003"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CYX22222003"},"content":"        assert personToEdit !\u003d null;","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CYX22222003"},"content":"        if (!personToEdit.hasTag(this.targetTag)) {","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CYX22222003"},"content":"            throw new CommandException(Messages.MESSAGE_NO_TAG);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CYX22222003"},"content":"        model.deletePersonTag(personToEdit, targetTag);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CYX22222003"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_DELETE_TAG_SUCCESS,","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CYX22222003"},"content":"                this.targetTag, personToEdit.getName()));","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CYX22222003"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CYX22222003"},"content":"            return true;","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CYX22222003"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CYX22222003"},"content":"        if (!(other instanceof DeleteTagCommand)) {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CYX22222003"},"content":"            return false;","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CYX22222003"},"content":"        DeleteTagCommand otherDeleteTagCommand \u003d (DeleteTagCommand) other;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CYX22222003"},"content":"        return targetIndex.equals(otherDeleteTagCommand.targetIndex)","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CYX22222003"},"content":"                \u0026\u0026 targetTag.equals(otherDeleteTagCommand.targetTag);","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":75,"-":3}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the CampusConnect.","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in CampusConnect.\";","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final Index index;","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(index);","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.index \u003d index;","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CYX22222003"},"content":"        model.deletePerson(personToEdit);","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CYX22222003"},"content":"        if (model.hasPerson(editedPerson)) {","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CYX22222003"},"content":"            model.insertPerson(personToEdit, index.getZeroBased());","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CYX22222003"},"content":"        model.insertPerson(editedPerson, index.getZeroBased());","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedTags);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .toString();","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Name name;","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Phone phone;","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Email email;","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        /**","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * Copy constructor.","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        /**","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, tags);","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            this.name \u003d name;","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.email \u003d email;","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        /**","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        /**","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * if modification is attempted.","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"         */","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"                return true;","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"                return false;","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public String toString() {","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    .toString();","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":5,"-":224}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting CampusConnect as requested...\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Recovers previously undone versions of CampusConnect.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class RedoCommand extends Command {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"CampusConnect has gone back to the future!\";","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"    public CommandResult execute(Model model) throws CommandException {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        model.redoCampusConnect();","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (!(other instanceof RedoCommand)) {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":2,"-":32}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"/**","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":" * Recovers the previous version of CampusConnect.","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":" */","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"public class UndoCommand extends Command {","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The previous command has been undone!\";","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"    public CommandResult execute(Model model) throws CommandException {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"        requireNonNull(model);","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"        model.undoCampusConnect();","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"            return true;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"        if (!(other instanceof UndoCommand)) {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"            return false;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"        return true;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":33,"-":1}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":" * Represents an error which occurs during execution of a Command.","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":1,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/AddTagCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.Messages.MESSAGE_ADD_TAG_EMPTY_TAGS;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.AddTagCommand.MESSAGE_NOT_ADD;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.AddTagCommand.MESSAGE_USAGE;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddTagCommand;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddTagCommand object","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddTagCommandParser implements Parser\u003cAddTagCommand\u003e {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTagCommand","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * and returns an AddTagCommand object for execution.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public AddTagCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(args);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Index index;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE), pe);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"        Optional\u003cSet\u003cTag\u003e\u003e op \u003d","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"                parseTagsToAdd(argMultimap.getAllValues(PREFIX_TAG));","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"        if (op.isEmpty()) {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"            throw new ParseException(MESSAGE_NOT_ADD);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CYX22222003"},"content":"        return new AddTagCommand(index, op.get());","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsToAdd(Collection\u003cString\u003e tags) throws ParseException {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return Optional.empty();","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"        if (tags.contains(\"\")) {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_ADD_TAG_EMPTY_TAGS));","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CYX22222003"},"content":"        return Optional.of(ParserUtil.parseTags(tags));","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":16,"-":52}},{"path":"src/main/java/seedu/address/logic/parser/CampusConnectParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddTagCommand;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CategorizeTagCommand;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RedoCommand;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.SuperFindCommand;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.UndoCommand;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CampusConnectParser {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CampusConnectParser.class);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        switch (commandWord) {","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case AddTagCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new AddTagCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ClearCommand();","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case SuperFindCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ListCommand();","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ExitCommand();","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new HelpCommand();","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CYX22222003"},"content":"        case DeleteTagCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CYX22222003"},"content":"            return new DeleteTagCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case CategorizeTagCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new CategorizeTagCommandParser().parse(arguments);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CYX22222003"},"content":"        case UndoCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CYX22222003"},"content":"            return new UndoCommand();","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        case RedoCommand.COMMAND_WORD:","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new RedoCommand();","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        default:","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":6,"-":101}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTagCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.Messages.MESSAGE_TAG_NOT_FOUND;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.DeleteTagCommand.MESSAGE_USAGE;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"/**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":" * Parses the delete tag command.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":" */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"public class DeleteTagCommandParser implements Parser\u003cDeleteTagCommand\u003e {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"     * Parses the given string of arguments in the context of delete tag command.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"     * and returns DeleteTagCommand object for execution.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"     * @throws ParseException if user input does not conform the expected input","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"    public DeleteTagCommand parse(String args) throws ParseException {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"        requireNonNull(args);","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"        ArgumentMultimap argMultiMap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"        Index index;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"        try {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"            index \u003d ParserUtil.parseIndex(argMultiMap.getPreamble());","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"        } catch (ParseException pe) {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE), pe);","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"        argMultiMap.verifyNoDuplicatePrefixesFor(PREFIX_TAG);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"        if (argMultiMap.getValue(PREFIX_TAG).isEmpty()) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"            throw new ParseException(MESSAGE_TAG_NOT_FOUND);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"        Tag target \u003d ParserUtil.parseTag(argMultiMap.getValue(PREFIX_TAG).get());","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"        return new DeleteTagCommand(index, target);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":40,"-":3}},{"path":"src/main/java/seedu/address/model/CampusConnect.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.exceptions.RedoException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.exceptions.UndoException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.TagCategory;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":" * Wraps all data at the CampusConnect level.","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":" * Duplicates are not allowed.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class CampusConnect implements ReadOnlyCampusConnect {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"    private final VersionedCampusConnect versionedCampusConnect \u003d new VersionedCampusConnect();","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /*","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *   among constructors.","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CampusConnect() {}","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates an CampusConnect using the Persons in the {@code toBeCopied}","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CampusConnect(ReadOnlyCampusConnect toBeCopied) {","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CYX22222003"},"content":"     * Stores the current states of the CampusConnect.","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CYX22222003"},"content":"    public void saveCurrentState() {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect newCampusConnect \u003d new CampusConnect(this);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CYX22222003"},"content":"        versionedCampusConnect.saveOldData(newCampusConnect);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CYX22222003"},"content":"        versionedCampusConnect.clearUndoneData();","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CYX22222003"},"content":"     * Recovers from previous state.","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"    public ReadOnlyCampusConnect recoverPreviousState() throws UndoException {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect out \u003d versionedCampusConnect.extractOldData();","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"        versionedCampusConnect.saveCurrentData(new CampusConnect(this));","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return out;","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CYX22222003"},"content":"     * Recovers the previously undone state.","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CYX22222003"},"content":"    public ReadOnlyCampusConnect recoverUndoneState() throws RedoException {","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect out \u003d versionedCampusConnect.extractUndoneData();","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CYX22222003"},"content":"        versionedCampusConnect.saveOldData(new CampusConnect(this));","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CYX22222003"},"content":"        return out;","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CYX22222003"},"content":"    public ReadOnlyCampusConnect recoverStateWithoutSaving() throws UndoException {","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CYX22222003"},"content":"        return versionedCampusConnect.extractOldData();","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code CampusConnect} with {@code newData}.","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyCampusConnect newData) {","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// person-level operations","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(person);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return persons.contains(person);","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        persons.add(p);","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"CYX22222003"},"content":"     * Adds a person to the specific position of the CampusConnect.","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"CYX22222003"},"content":"     *","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CYX22222003"},"content":"    public void addPerson(Person p, int ind) {","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CYX22222003"},"content":"        persons.add(ind, p);","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * {@code target} must exist in CampusConnect.","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"CYX22222003"},"content":"     * The person identity of {@code editedPerson} must not be the same as","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * another existing person in CampusConnect.","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code CampusConnect}.","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * {@code key} must exist in CampusConnect","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        persons.remove(key);","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"CYX22222003"},"content":"     * Deletes a tag from a person.","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"CYX22222003"},"content":"    public void removePersonTag(Person p, Tag t) {","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"CYX22222003"},"content":"        persons.deletePersonTag(p, t);","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"CYX22222003"},"content":"     * Adds a new Tag to a person.","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void addPersonTags(Person p, Set\u003cTag\u003e tagList) {","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"CYX22222003"},"content":"        persons.addPersonTags(p, tagList);","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Gets the recorded {@code TagCategory} of {@Tag t}.","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public TagCategory getTagCategory(Tag t) {","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return persons.getTagCategory(t);","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    //// util methods","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"                .toString();","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public ObservableList\u003cTag\u003e getTagList() {","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return persons.asTagList();","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void setTagCategory(Tag t, TagCategory cat) {","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        persons.updateTagCategory(t, cat);","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (!(other instanceof CampusConnect otherCampusConnect)) {","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return persons.equals(otherCampusConnect.persons);","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return persons.hashCode();","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":56,"-":148}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.TagCategory;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getCampusConnectFilePath();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setCampusConnectFilePath(Path campusConnectFilePath);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code campusConnect}.","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setCampusConnect(ReadOnlyCampusConnect campusConnect);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the CampusConnect */","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyCampusConnect getCampusConnect();","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Refreshes the current data in CampusConnect.","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void refreshCampusConnect();","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Deletes the given person.","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CYX22222003"},"content":"     * Deletes a tag from a person.","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CYX22222003"},"content":"     * The person must exist as well as the tag.","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CYX22222003"},"content":"    void deletePersonTag(Person p, Tag tag);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CYX22222003"},"content":"     * Adds a set of tag to person.","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void addPersonTags(Person p, Set\u003cTag\u003et);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Adds the given person.","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CYX22222003"},"content":"     * Inserts person at the specific position.","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CYX22222003"},"content":"    void insertPerson(Person p, int ind);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns a list of tags currently defined in CampusConnect","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    ObservableList\u003cTag\u003e getListOfCurrentTags();","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns true if the specified {@code Tag} exists in CampusConnect","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    boolean containsTag(Tag tag);","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Sets {@code TagCategory cat} to be the category of {@code Tag t}.","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void setTagsCategory(Tag t, TagCategory cat);","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Gets the recorded {@code TagCategory} of {@Tag t}.","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    TagCategory getTagCategory(Tag t);","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"CYX22222003"},"content":"     * Undoes the previous actions of users.","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"CYX22222003"},"content":"    void undoCampusConnect() throws CommandException;","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"CYX22222003"},"content":"     * Restores state before previous undo actions of users.","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"CYX22222003"},"content":"    void redoCampusConnect() throws CommandException;","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"CYX22222003"},"content":"     * Saves current state of model before execution.","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"CYX22222003"},"content":"    void saveCurrentCampusConnect();","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"CYX22222003"},"content":"     * Undoes a state without saving current state when execution fails.","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"CYX22222003"},"content":"    void undoExceptionalCommand() throws CommandException;","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":35,"-":117}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.TagCategory;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final CampusConnect campusConnect;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cTag\u003e currentlyDefinedTags;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given campusConnect and userPrefs.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyCampusConnect campusConnect, ReadOnlyUserPrefs userPrefs) {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(campusConnect, userPrefs);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing CampusConnect: \" + campusConnect + \" and user prefs \" + userPrefs);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.campusConnect \u003d new CampusConnect(campusConnect);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.filteredPersons \u003d new FilteredList\u003c\u003e(this.campusConnect.getPersonList());","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.currentlyDefinedTags \u003d FXCollections.observableArrayList();","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this(new CampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Path getCampusConnectFilePath() {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs.getCampusConnectFilePath();","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setCampusConnectFilePath(Path campusConnectFilePath) {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(campusConnectFilePath);","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        userPrefs.setCampusConnectFilePath(campusConnectFilePath);","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CampusConnect \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setCampusConnect(ReadOnlyCampusConnect campusConnect) {","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.campusConnect.resetData(campusConnect);","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public ReadOnlyCampusConnect getCampusConnect() {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return campusConnect;","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void refreshCampusConnect() {","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.setCampusConnect(campusConnect);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(person);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return campusConnect.hasPerson(person);","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        campusConnect.removePerson(target);","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CYX22222003"},"content":"    public void deletePersonTag(Person p, Tag t) {","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CYX22222003"},"content":"        campusConnect.removePersonTag(p, t);","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"CYX22222003"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void addPersonTags(Person p, Set\u003cTag\u003e t) {","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"CYX22222003"},"content":"        campusConnect.addPersonTags(p, t);","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"CYX22222003"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        campusConnect.addPerson(person);","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"CYX22222003"},"content":"    public void insertPerson(Person p, int ind) {","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"CYX22222003"},"content":"        campusConnect.addPerson(p, ind);","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"CYX22222003"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        campusConnect.setPerson(target, editedPerson);","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return filteredPersons;","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Tag List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Refreshes and returns an unmodifiable view of the list of tags currently in CampusConnect","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private void refreshTagList() {","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        currentlyDefinedTags.setAll(campusConnect.getTagList()); // Assume getAllTags aggregates unique tags","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public ObservableList\u003cTag\u003e getListOfCurrentTags() {","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return FXCollections.unmodifiableObservableList(currentlyDefinedTags);","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public boolean containsTag(Tag t) {","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        requireAllNonNull(t);","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return currentlyDefinedTags.contains(t);","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void setTagsCategory(Tag t, TagCategory cat) {","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        requireAllNonNull(t, cat);","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        campusConnect.setTagCategory(t, cat);","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        refreshTagList();","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public TagCategory getTagCategory(Tag t) {","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        requireNonNull(t);","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return campusConnect.getTagCategory(t);","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return campusConnect.equals(otherModelManager.campusConnect)","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // Hash based on essential components of the model manager","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        return campusConnect.hashCode() + userPrefs.hashCode() + filteredPersons.hashCode();","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"CYX22222003"},"content":"    public void undoCampusConnect() throws CommandException {","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect newCampusConnect \u003d campusConnect.recoverPreviousState();","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"CYX22222003"},"content":"        this.setCampusConnect(newCampusConnect);","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"CYX22222003"},"content":"    public void redoCampusConnect() throws CommandException {","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        ReadOnlyCampusConnect newCampusConnect \u003d campusConnect.recoverUndoneState();","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        this.setCampusConnect(newCampusConnect);","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"CYX22222003"},"content":"    public void saveCurrentCampusConnect() {","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"CYX22222003"},"content":"        campusConnect.saveCurrentState();","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"CYX22222003"},"content":"    @Override","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"CYX22222003"},"content":"    public void undoExceptionalCommand() throws CommandException {","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect cc \u003d campusConnect.recoverStateWithoutSaving();","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"CYX22222003"},"content":"        this.setCampusConnect(cc);","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","isFullCredit":false}],"authorContributionMap":{"CYX22222003":34,"-":207}},{"path":"src/main/java/seedu/address/model/VersionedCampusConnect.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.Messages.MESSAGE_REDO_FAILURE;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNDO_FAILURE;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"import java.util.Stack;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.exceptions.RedoException;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.exceptions.UndoException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"/**","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":" * Class to store past and undone CampusConnect data.","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":" */","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"public class VersionedCampusConnect {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"    private final Stack\u003cReadOnlyCampusConnect\u003e history \u003d new Stack\u003c\u003e();","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"    private final Stack\u003cReadOnlyCampusConnect\u003e future \u003d new Stack\u003c\u003e();","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"     * Extracts CampusConnect snapshots that have been undone.","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"     *","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"     * @return data in forms of ReadOnlyCampusConnect.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"     * @throws RedoException when future stack is empty.","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"    public ReadOnlyCampusConnect extractUndoneData() throws RedoException {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"        if (future.isEmpty()) {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"            throw new RedoException(MESSAGE_REDO_FAILURE);","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"        return future.pop();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"     * Extracts history data.","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"     *","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"     * @return Old version of data in the form of ReadOnlyCampusConnect.","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"     * @throws UndoException when the storage is empty.","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"    public ReadOnlyCampusConnect extractOldData() throws UndoException {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"        if (history.isEmpty()) {","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"            throw new UndoException(MESSAGE_UNDO_FAILURE);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"        return history.pop();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"     * Saves history data into history stack.","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CYX22222003"},"content":"     * Data should not be null.","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CYX22222003"},"content":"    public void saveOldData(ReadOnlyCampusConnect data) {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CYX22222003"},"content":"        assert data !\u003d null;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CYX22222003"},"content":"        history.add(data);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CYX22222003"},"content":"     * Saves current data into future stack.","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CYX22222003"},"content":"     * Data should not be null.","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CYX22222003"},"content":"    public void saveCurrentData(ReadOnlyCampusConnect data) {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CYX22222003"},"content":"        future.add(data);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"     * Clears all undone data in the future stack.","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"    public void clearUndoneData() {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CYX22222003"},"content":"        future.clear();","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":67}},{"path":"src/main/java/seedu/address/model/exceptions/RedoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.model.exceptions;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":" * Exception when fail to execute redo.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"public class RedoException extends CommandException {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"    public RedoException(String message) {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"        super(message);","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"    public RedoException(String message, Throwable cause) {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"        super(message, cause);","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":16}},{"path":"src/main/java/seedu/address/model/exceptions/UndoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.model.exceptions;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"/**","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":" * Exception when fails to execute undo.","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":" */","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"public class UndoException extends CommandException {","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"    public UndoException(String message) {","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"        super(message);","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"    public UndoException(String message, Throwable cause) {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"        super(message, cause);","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":16}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":" * Represents a Person\u0027s email in the CampusConnect.","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":1,"-":78}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Comparator;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Set\u003cTag\u003e tags) {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, tags);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Name getName() {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return name;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return phone;","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Email getEmail() {","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return email;","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * if modification is attempted.","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns an immutable tag stream with order, which throws {@code UnsupportedOperationException}","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * if modification is attempted.","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Stream\u003cTag\u003e getOrderedTags() {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return tags.stream().sorted(Comparator.comparing(tag -\u003e tag.tagName));","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Checks for duplicates in emails in the contact list.","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param otherPerson The Person object to compare against.","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @return True if both persons have the same email address.","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CYX22222003"},"content":"    public boolean hasSameEmail(Person otherPerson) {","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CYX22222003"},"content":"        return otherPerson !\u003d null \u0026\u0026 otherPerson.getEmail().equals(this.getEmail());","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Checks for duplicates in phone numbers in the contact list.","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @param otherPerson The Person object to compare against.","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @return True if both persons have the same phone number.","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasSamePhoneNumber(Person otherPerson) {","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null \u0026\u0026 otherPerson.getPhone().equals(this.getPhone());","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Checks for duplicated contact information between Person instances.","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * This is to avoid adding duplicate contacts in the contact list.","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Checked fields: name, phone, email.","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param otherPerson The Person object to compare against.","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @return True if two contacts are considered as duplicates.","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CYX22222003"},"content":"    public boolean hasDuplicateInfo(Person otherPerson) {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this.isSamePerson(otherPerson)","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"                || this.hasSameEmail(otherPerson)","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                || this.hasSamePhoneNumber(otherPerson);","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Checks whether the person has the tags with the same tag name.","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"CYX22222003"},"content":"    public boolean hasTag(Tag t) {","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"CYX22222003"},"content":"        return this.getTags().contains(t);","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"CYX22222003"},"content":"     * Removes a tag from a person.","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"CYX22222003"},"content":"    public Person removeTag(Tag t) {","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"CYX22222003"},"content":"        Set\u003cTag\u003e newTagSet \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"CYX22222003"},"content":"        newTagSet.addAll(this.getTags());","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"CYX22222003"},"content":"        newTagSet.remove(t);","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"CYX22222003"},"content":"        return new Person(this.name, this.phone, this.email, newTagSet);","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"CYX22222003"},"content":"     * Adds a tag into a person.","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"CYX22222003"},"content":"     * Assumes the person does not contain any tag in the new tag set.","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"CYX22222003"},"content":"    public Person addTag(Set\u003c? extends Tag\u003e tagSet) {","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"CYX22222003"},"content":"        Set\u003cTag\u003e newTagSet \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"CYX22222003"},"content":"        newTagSet.addAll(this.getTags());","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"CYX22222003"},"content":"        newTagSet.addAll(tagSet);","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"CYX22222003"},"content":"        return new Person(this.name, this.phone, this.email, newTagSet);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Overwrites the person\u0027s tag set.","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public Person setAllTags(Set\u003cTag\u003e tagSet) {","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return new Person(this.name, this.phone, this.email, tagSet);","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"CYX22222003"},"content":"     * Returns true if person contain any tag in the new tag set.","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"CYX22222003"},"content":"    public boolean containsDuplicateTag(Set\u003c? extends Tag\u003e tagSet) {","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"CYX22222003"},"content":"        for (Tag t : this.tags) {","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"CYX22222003"},"content":"            if (tagSet.contains(t)) {","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"CYX22222003"},"content":"                return true;","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"CYX22222003"},"content":"            }","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"CYX22222003"},"content":"        return false;","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, tags);","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"                .toString();","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":51,"-":146}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Iterator;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.TagCategory;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.TagManager;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" *","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":" *","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final TagManager tagManager \u003d new TagManager();","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"        return internalList.stream().anyMatch(toCheck::hasDuplicateInfo);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e trackedTags \u003d addTagsToManager(toAdd.getTags());","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        toAdd \u003d toAdd.setAllTags(trackedTags);","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Adds a person to the specific position of the list.","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"     * The index must be valid","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"    public void add(int ind, Person toAdd) {","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CYX22222003"},"content":"        requireNonNull(toAdd);","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CYX22222003"},"content":"        if (contains(toAdd)) {","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CYX22222003"},"content":"            throw new DuplicatePersonException();","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e trackedTags \u003d addTagsToManager(toAdd.getTags());","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        toAdd \u003d toAdd.setAllTags(trackedTags);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CYX22222003"},"content":"        internalList.add(ind, toAdd);","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds tags to the tagManager to be tracked.","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns a set of tracked tag objects.","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e addTagsToManager(Set\u003cTag\u003e tagSet) {","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e deduplicatedTags \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        for (Tag tag : tagSet) {","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            Tag trackedTag \u003d tagManager.getOrCreateTag(tag);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            deduplicatedTags.add(trackedTag);","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return deduplicatedTags;","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        tagManager.removeTagOccurrence(target.getTags());","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e trackedTags \u003d addTagsToManager(editedPerson.getTags());","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        editedPerson \u003d editedPerson.setAllTags(trackedTags);","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        tagManager.removeTagOccurrence(toRemove.getTags());","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        tagManager.clearAllTags();","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        for (Person p : persons) {","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e trackedTags \u003d tagManager.getOrCreateTag(p.getTags());","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"            newPersons.add(p.setAllTags(trackedTags));","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        internalList.setAll(newPersons);","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"CYX22222003"},"content":"     * Deletes a tag from a person.","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"CYX22222003"},"content":"    public void deletePersonTag(Person p, Tag t) {","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"CYX22222003"},"content":"        requireNonNull(p);","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"CYX22222003"},"content":"        Person replace \u003d p.removeTag(t);","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // NOTE: no need to remove tag from tagManager here, setPerson takes care of it.","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"CYX22222003"},"content":"        setPerson(p, replace);","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"CYX22222003"},"content":"     * Adds a set of tag to a person.","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void addPersonTags(Person p, Set\u003cTag\u003e t) {","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"CYX22222003"},"content":"        requireNonNull(p);","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // remove tags already added to p","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e uniqueTags \u003d filterUniqueTags(p.getTags(), t);","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Person replace \u003d p.addTag(uniqueTags);","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // Note: no need to add tag to tagManager here, setPerson takes care of it.","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"CYX22222003"},"content":"        setPerson(p, replace);","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e filterUniqueTags(Set\u003cTag\u003e fixed, Set\u003cTag\u003e toFilter) {","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e uniqueTags \u003d new HashSet\u003c\u003e();","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        for (Tag t : toFilter) {","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            if (!fixed.contains(t)) {","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"                uniqueTags.add(t);","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return uniqueTags;","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Returns the tag list of the Persons recorded.","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public ObservableList\u003cTag\u003e asTagList() {","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return FXCollections.observableArrayList(tagManager.asTagList());","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Updates the category of all occurrences of a {@code Tag}.","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * @param t {@code Tag} to be updated","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * @param cat updated {@code TagCategory}","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void updateTagCategory(Tag t, TagCategory cat) {","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        tagManager.setTagCategory(t.tagName, cat);","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Returns the {@TagCategory} of a tracked {@Tag}.","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public TagCategory getTagCategory(Tag t) {","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return tagManager.getTagCategory(t);","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return internalList.iterator();","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return true;","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return false;","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public int hashCode() {","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Override","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public String toString() {","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return internalList.toString();","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    return false;","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"                }","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"            }","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        return true;","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":29,"-":221}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyCampusConnect;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.TagCategory;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public Path getCampusConnectFilePath() {","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setCampusConnectFilePath(Path campusConnectFilePath) {","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public void setCampusConnect(ReadOnlyCampusConnect campusConnect) {","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public ReadOnlyCampusConnect getCampusConnect() {","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void refreshCampusConnect() {","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"CYX22222003"},"content":"        @Override","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"CYX22222003"},"content":"        public void deletePersonTag(Person p, Tag tag) {","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"CYX22222003"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public ObservableList\u003cTag\u003e getListOfCurrentTags() {","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"CYX22222003"},"content":"        @Override","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"CYX22222003"},"content":"        public void insertPerson(Person p, int ind) {","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"CYX22222003"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"CYX22222003"},"content":"        @Override","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"CYX22222003"},"content":"        public void undoCampusConnect() {","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"CYX22222003"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void redoCampusConnect() {","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"CYX22222003"},"content":"        @Override","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"CYX22222003"},"content":"        public void saveCurrentCampusConnect() {","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"CYX22222003"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"CYX22222003"},"content":"        @Override","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public void addPersonTags(Person p, Set\u003cTag\u003e tags) {","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"CYX22222003"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public boolean containsTag(Tag tag) {","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void setTagsCategory(Tag t, TagCategory cat) {","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public TagCategory getTagCategory(Tag t) {","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"CYX22222003"},"content":"        @Override","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"CYX22222003"},"content":"        public void undoExceptionalCommand() {","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"CYX22222003"},"content":"            throw new AssertionError(\"This method should not be called\");","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"CYX22222003"},"content":"        }","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        private final Person person;","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"            requireNonNull(person);","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"            this.person \u003d person;","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"            requireNonNull(person);","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"            requireNonNull(person);","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"            requireNonNull(person);","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public ReadOnlyCampusConnect getCampusConnect() {","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return new CampusConnect();","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":27,"-":239}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyCampusConnect_success() {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyCampusConnect_success() {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setCampusConnect(new CampusConnect());","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"        ClearCommand c1 \u003d new ClearCommand();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"        ClearCommand c2 \u003d new ClearCommand();","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(c1.equals(c2));","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":9,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"91111111\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"82222222\";","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CYX22222003"},"content":"    public static final String INVALID_TAG_DESC_NO_SPACE \u003d PREFIX_TAG + \"hubby*\";","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    static {","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            Model expectedModel) {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            Model expectedModel) {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CampusConnect expectedCampusConnect \u003d new CampusConnect(actualModel.getCampusConnect());","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedCampusConnect, actualModel.getCampusConnect());","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"CYX22222003"},"content":"    /**","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CYX22222003"},"content":"     * Executes the given code command without comparing data model","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"CYX22222003"},"content":"     *","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"CYX22222003"},"content":"     * @param command command object to be executed","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"CYX22222003"},"content":"     * @param model model to be executed on","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CYX22222003"},"content":"     * @param expectedMsg expected message to be thrown","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"CYX22222003"},"content":"     */","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"CYX22222003"},"content":"    public static void assertCommandFailureWithoutModel(Command command, Model model, String expectedMsg) {","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"CYX22222003"},"content":"        assertThrows(CommandException.class, expectedMsg, () -\u003e command.execute(model));","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":13,"-":121}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTagCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalPersons.FRIEND_TAG;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalPersons.OWES_MONEY_TAG;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"public class DeleteTagCommandTest {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"    private static final Model model \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"    private static final String DEFAULT_TAG \u003d \"test\";","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"    private static final String DEFAULT_TAG_SECOND \u003d \"test2\";","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"    private static final String TEST_EMAIL \u003d \"test@test\";","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"    private static final String TEST_PHONE \u003d \"84209817\";","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"    private static final String TEST_USER \u003d \"test user\";","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"    public void execute_validIndexPersonList_success() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"        Person p \u003d new PersonBuilder(firstPerson).withName(TEST_USER).withEmail(TEST_EMAIL)","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"                .withPhone(TEST_PHONE).withTags(FRIEND_TAG, OWES_MONEY_TAG).build();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"        model.setPerson(firstPerson, p);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"        Person expectedPerson \u003d new PersonBuilder(firstPerson).withName(TEST_USER).withEmail(TEST_EMAIL)","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"                .withPhone(TEST_PHONE).withTags(OWES_MONEY_TAG).build();","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"        expectedModel.setPerson(firstPerson, expectedPerson);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, new Tag(FRIEND_TAG));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_DELETE_TAG_SUCCESS,","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CYX22222003"},"content":"                new Tag(FRIEND_TAG), p.getName());","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CYX22222003"},"content":"        assertCommandSuccess(deleteTagCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CYX22222003"},"content":"    public void execute_invalidIndexPersonList_throwsCommandException() {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CYX22222003"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CYX22222003"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(outOfBoundIndex, new Tag(DEFAULT_TAG));","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CYX22222003"},"content":"        assertCommandFailure(deleteTagCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CYX22222003"},"content":"    public void execute_personHasNoTag_throwsCommandException() {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CYX22222003"},"content":"        Index lastIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CYX22222003"},"content":"        DeleteTagCommand deleteTagCommand \u003d new DeleteTagCommand(lastIndex, new Tag(DEFAULT_TAG));","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"        assertCommandFailure(deleteTagCommand, model, Messages.MESSAGE_NO_TAG);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CYX22222003"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CYX22222003"},"content":"        DeleteTagCommand deleteTagCommandA \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, new Tag(DEFAULT_TAG));","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CYX22222003"},"content":"        DeleteTagCommand deleteTagCommandB \u003d new DeleteTagCommand(INDEX_SECOND_PERSON, new Tag(DEFAULT_TAG));","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CYX22222003"},"content":"        DeleteTagCommand deleteTagCommandC \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, new Tag(DEFAULT_TAG_SECOND));","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CYX22222003"},"content":"        DeleteTagCommand deleteTagCommandD \u003d new DeleteTagCommand(INDEX_FIRST_PERSON, new Tag(DEFAULT_TAG));","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(deleteTagCommandA.equals(deleteTagCommandD));","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(deleteTagCommandA.equals(deleteTagCommandA));","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(deleteTagCommandA.equals(deleteTagCommandB));","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(deleteTagCommandA.equals(deleteTagCommandC));","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":77}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.fail;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailureWithoutModel;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.EditCommand.MESSAGE_DUPLICATE_PERSON;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommandTest {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new CampusConnect(model.getCampusConnect()), new UserPrefs());","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CYX22222003"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CYX22222003"},"content":"        expectedModel.deletePerson(firstPerson);","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CYX22222003"},"content":"        expectedModel.insertPerson(editedPerson, INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CYX22222003"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_BOB)","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CYX22222003"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CYX22222003"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).withEmail(VALID_EMAIL_BOB).build();","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new CampusConnect(model.getCampusConnect()), new UserPrefs());","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new CampusConnect(model.getCampusConnect()), new UserPrefs());","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CYX22222003"},"content":"        Person firstPerson \u003d expectedModel.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CYX22222003"},"content":"        expectedModel.deletePerson(firstPerson);","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CYX22222003"},"content":"        expectedModel.insertPerson(firstPerson, INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CYX22222003"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList)","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .withName(VALID_NAME_BOB)","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB)","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).build();","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"                INDEX_FIRST_PERSON,","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder()","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"                        .withName(VALID_NAME_BOB)","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"                        .withEmail(VALID_EMAIL_BOB)","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"                        .withPhone(VALID_PHONE_BOB).build()","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        );","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new CampusConnect(model.getCampusConnect()), new UserPrefs());","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CYX22222003"},"content":"        expectedModel.deletePerson(personInFilteredList);","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CYX22222003"},"content":"        expectedModel.insertPerson(editedPerson, INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getCampusConnect().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"CYX22222003"},"content":"        assertCommandFailureWithoutModel(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getCampusConnect().getPersonList().size());","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void executeMethodCheckDuplicate1() {","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        Model testModel \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(4);","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        editPersonDescriptor.setName(new Name(\"Alice Pauline\"));","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"            editCommand.execute(testModel);","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"            fail(\"CommandException expected\");","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"        } catch (CommandException e) {","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"            assertEquals(e.getMessage(), MESSAGE_DUPLICATE_PERSON);","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void executeMethodCheckDuplicate2() {","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        Model testModel \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        editPersonDescriptor.setName(new Name(\"Alice Pauline\"));","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        try {","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"            editCommand.execute(testModel);","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        } catch (CommandException e) {","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"            fail(\"No Exception Expected\");","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":17,"-":222}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.Messages;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class RedoCommandTest {","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"    public void execute_emptyFutureAndHistoryStack_failure() {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"        assertCommandFailure(new RedoCommand(), model, Messages.MESSAGE_REDO_FAILURE);","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"    public void execute_emptyFutureStack_failure() {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"        model.saveCurrentCampusConnect();","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"        Person person \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"        model.deletePerson(person);","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"        assertCommandFailure(new RedoCommand(), model, Messages.MESSAGE_REDO_FAILURE);","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"    public void execute_nonEmptyFutureStack_success() {","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"        String expectedUndoMessage \u003d UndoCommand.MESSAGE_SUCCESS;","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"        String expectedRedoMessage \u003d RedoCommand.MESSAGE_SUCCESS;","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"        model.saveCurrentCampusConnect();","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"        Person person \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"        model.deletePerson(person);","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"        ModelManager expectedRedoneModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"        assertCommandSuccess(undoCommand, model, expectedUndoMessage, expectedModel);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CYX22222003"},"content":"        assertCommandSuccess(new RedoCommand(), model, expectedRedoMessage, expectedRedoneModel);","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":32,"-":16}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.logic.commands;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNDO_FAILURE;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.Model;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.ModelManager;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.UserPrefs;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"public class UndoCommandTest {","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"    private Model model \u003d new ModelManager(getTypicalCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"    public void execute_emptyHistoryStack_failure() {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"        assertCommandFailure(undoCommand, expectedModel, MESSAGE_UNDO_FAILURE);","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"    public void execute_nonEmptyHistoryStack_success() {","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getCampusConnect(), new UserPrefs());","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"        String expectedMessage \u003d UndoCommand.MESSAGE_SUCCESS;","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"        model.saveCurrentCampusConnect();","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"        Person person \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"        model.deletePerson(person);","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"        UndoCommand u1 \u003d new UndoCommand();","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"        UndoCommand u2 \u003d new UndoCommand();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(u1.equals(u1));","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(u1.equals(u2));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(u1.equals(null));","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":47}},{"path":"src/test/java/seedu/address/logic/parser/AddTagCommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.AddTagCommand.MESSAGE_NOT_ADD;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.AddTagCommand.MESSAGE_USAGE;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC_NO_SPACE;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddTagCommand;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddTagCommandParserTest {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private AddTagCommandParser parser \u003d new AddTagCommandParser();","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_invalidFormat_throwsParseException() {","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE);","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"abcs\" + TAG_DESC_HUSBAND, expectedMessage);","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parse_invalidTagCharacter_throwsParseException() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(Tag.MESSAGE_CONSTRAINTS);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // one invalid tag","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_TAG_DESC_NO_SPACE, expectedMessage);","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // two invalid tags","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"        assertParseFailure(parser, \"2 \" + INVALID_TAG_DESC_NO_SPACE + \" t/c#lassmate\", expectedMessage);","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_emptyTag_throwsParseException() {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NOT_ADD);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"2\", expectedMessage);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_validTagAndIndex_success() {","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(3);","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(List.of(new Tag(\"walkie-talkie\"), new Tag(\"Samsung\")));","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddTagCommand expectedCommand \u003d new AddTagCommand(index, tags);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"3 t/     walkie-talkie   \\t\\n    t/Samsung\", expectedCommand);","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":3,"-":52}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"        assertParseFailure(parser, \"a\",","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":2,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTagCommandParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.logic.parser;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"public class DeleteTagCommandParserTest {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    private DeleteTagCommandParser parser \u003d new DeleteTagCommandParser();","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"    public void parse_validArgs_returnsDeleteTagCommand() {","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"        assertParseSuccess(parser, \"1 t/hello\",","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"                new DeleteTagCommand(INDEX_FIRST_PERSON, new Tag(\"hello\")));","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"    public void parse_invalidArgs_throwsParseException() {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"        assertParseFailure(parser, \"a\",","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE));","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":28}},{"path":"src/test/java/seedu/address/model/CampusConnectTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class CampusConnectTest {","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final CampusConnect campusConnect \u003d new CampusConnect();","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), campusConnect.getPersonList());","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e campusConnect.resetData(null));","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyCampusConnect_replacesData() {","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CampusConnect newData \u003d getTypicalCampusConnect();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        campusConnect.resetData(newData);","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, campusConnect);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        CampusConnectStub newData \u003d new CampusConnectStub(newPersons);","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e campusConnect.resetData(newData));","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e campusConnect.hasPerson(null));","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInCampusConnect_returnsFalse() {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(campusConnect.hasPerson(ALICE));","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInCampusConnect_returnsTrue() {","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        campusConnect.addPerson(ALICE);","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(campusConnect.hasPerson(ALICE));","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInCampusConnect_returnsTrue() {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        campusConnect.addPerson(ALICE);","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(campusConnect.hasPerson(editedAlice));","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e campusConnect.getPersonList().remove(0));","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d CampusConnect.class.getCanonicalName() + \"{persons\u003d\" + campusConnect.getPersonList() + \"}\";","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, campusConnect.toString());","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CYX22222003"},"content":"    public void insertPersonTest() {","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CYX22222003"},"content":"        int ind \u003d campusConnect.getPersonList().size();","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CYX22222003"},"content":"        CampusConnect expected \u003d new CampusConnect();","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CYX22222003"},"content":"        expected.resetData(campusConnect);","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"CYX22222003"},"content":"        campusConnect.addPerson(ALICE, ind);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CYX22222003"},"content":"        expected.addPerson(ALICE);","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CYX22222003"},"content":"        assertEquals(expected.toString(), campusConnect.toString());","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyCampusConnect whose persons list can violate interface constraints.","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static class CampusConnectStub implements ReadOnlyCampusConnect {","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cTag\u003e tags \u003d FXCollections.observableArrayList();","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        CampusConnectStub(Collection\u003cPerson\u003e persons) {","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return persons;","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public ObservableList\u003cTag\u003e getTagList() {","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return tags;","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":12,"-":113}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.CampusConnectBuilder;","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new CampusConnect(), new CampusConnect(modelManager.getCampusConnect()));","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setCampusConnectFilePath(Paths.get(\"address/book/file/path\"));","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setCampusConnectFilePath(Paths.get(\"new/address/book/file/path\"));","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setCampusConnectFilePath_nullPath_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setCampusConnectFilePath(null));","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setCampusConnectFilePath_validPath_setsCampusConnectFilePath() {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        modelManager.setCampusConnectFilePath(path);","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getCampusConnectFilePath());","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInCampusConnect_returnsFalse() {","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personInCampusConnect_returnsTrue() {","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CYX22222003"},"content":"    public void deleteTag_personInCampusConnect_successfulDeletion() {","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CYX22222003"},"content":"        Person newAlice \u003d new PersonBuilder(ALICE).withTags(\"friends\", \"copy\").build();","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CYX22222003"},"content":"        modelManager.addPerson(newAlice);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CYX22222003"},"content":"        modelManager.deletePersonTag(newAlice, new Tag(\"copy\"));","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"CYX22222003"},"content":"        ModelManager copyModelManager \u003d new ModelManager();","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CYX22222003"},"content":"        copyModelManager.addPerson(ALICE);","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"CYX22222003"},"content":"        assertEquals(modelManager, copyModelManager);","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void containsTag_tagInCampusConnect_returnsTrue() {","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Tag tag \u003d new Tag(\"friends\");","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        modelManager.addPerson(new PersonBuilder().withTags(\"friends\").build());","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.containsTag(tag));","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void containsTag_tagNotInCampusConnect_returnsFalse() {","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Tag tag \u003d new Tag(\"non-existent-tag\");","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.containsTag(tag));","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void containsTag_nullTag_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.containsTag(null));","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CampusConnect campusConnect \u003d new CampusConnectBuilder().withPerson(ALICE).withPerson(BENSON).build();","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CampusConnect differentCampusConnect \u003d new CampusConnect();","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(campusConnect, userPrefs);","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(campusConnect, userPrefs);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // different campusConnect -\u003e returns false","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentCampusConnect, userPrefs)));","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(campusConnect, userPrefs)));","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        differentUserPrefs.setCampusConnectFilePath(Paths.get(\"differentFilePath\"));","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(campusConnect, differentUserPrefs)));","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":15,"-":150}},{"path":"src/test/java/seedu/address/model/VersionedCampusConnectTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CYX22222003"},"content":"package seedu.address.model;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"CYX22222003"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalCampusConnect;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"CYX22222003"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.exceptions.RedoException;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.exceptions.UndoException;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"CYX22222003"},"content":"public class VersionedCampusConnectTest {","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CYX22222003"},"content":"    public void execute_extractUndoneDataEmptyStack_failure() {","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"CYX22222003"},"content":"        VersionedCampusConnect vcc \u003d new VersionedCampusConnect();","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"        assertThrows(RedoException.class, vcc::extractUndoneData);","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"CYX22222003"},"content":"    public void execute_extractOldDataEmptyStack_failure() {","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CYX22222003"},"content":"        VersionedCampusConnect vcc \u003d new VersionedCampusConnect();","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"        assertThrows(UndoException.class, vcc::extractOldData);","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CYX22222003"},"content":"    public void execute_extractOldData_success() throws CommandException {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect data \u003d getTypicalCampusConnect();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"CYX22222003"},"content":"        VersionedCampusConnect vcc \u003d new VersionedCampusConnect();","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CYX22222003"},"content":"        vcc.saveOldData(data);","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect newData \u003d vcc.extractOldData();","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"CYX22222003"},"content":"        assertEquals(newData, data);","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CYX22222003"},"content":"    public void execute_extractUndoneData_success() throws CommandException {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect data \u003d getTypicalCampusConnect();","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CYX22222003"},"content":"        VersionedCampusConnect vcc \u003d new VersionedCampusConnect();","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CYX22222003"},"content":"        vcc.saveCurrentData(data);","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CYX22222003"},"content":"        ReadOnlyCampusConnect newData \u003d vcc.extractUndoneData();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"CYX22222003"},"content":"        assertEquals(newData, data);","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CYX22222003"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":45}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"CYX22222003"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CYX22222003"},"content":"    public void hasSameEmail() {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(ALICE.hasSameEmail(ALICE));","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CYX22222003"},"content":"        // same name, different email -\u003e return false","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CYX22222003"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(ALICE.hasSameEmail(editedAlice));","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(editedAlice.hasSameEmail(BOB));","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CYX22222003"},"content":"        // different name, same email -\u003e return true","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CYX22222003"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY).build();","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CYX22222003"},"content":"        Person aliceWithNewEmail \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_AMY).build();","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(aliceWithNewEmail.hasSameEmail(editedBob));","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CYX22222003"},"content":"        // null -\u003e always return false","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(ALICE.hasSameEmail(null));","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CYX22222003"},"content":"    public void hasSamePhoneNumber() {","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(ALICE.hasSamePhoneNumber(ALICE));","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(ALICE.hasSamePhoneNumber(BOB));","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CYX22222003"},"content":"        // different name, same phone number -\u003e return true","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CYX22222003"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(editedAlice.hasSamePhoneNumber(BOB));","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CYX22222003"},"content":"        //same name, different phone number -\u003e return false","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(editedAlice.hasSamePhoneNumber(ALICE));","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CYX22222003"},"content":"        //null -\u003e always return false","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(ALICE.hasSamePhoneNumber(null));","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CYX22222003"},"content":"    public void hasDuplicateInfo() {","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(ALICE.hasDuplicateInfo(ALICE));","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(ALICE.hasDuplicateInfo(null));","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CYX22222003"},"content":"        // Different name, phone, same email","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"CYX22222003"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY).build();","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CYX22222003"},"content":"        Person aliceWithNewEmail \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_AMY).build();","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(editedBob.hasDuplicateInfo(aliceWithNewEmail));","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(editedBob.hasDuplicateInfo(ALICE));","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CYX22222003"},"content":"        // Different email, phone, same phone","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CYX22222003"},"content":"        Person editedBob2 \u003d new PersonBuilder(BOB).withPhone(VALID_PHONE_BOB).build();","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CYX22222003"},"content":"        Person aliceWithNewEmail2 \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(editedBob2.hasDuplicateInfo(aliceWithNewEmail2));","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(editedBob2.hasDuplicateInfo(ALICE));","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CYX22222003"},"content":"        // Different email, name, same name","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"CYX22222003"},"content":"        Person editedBob3 \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"CYX22222003"},"content":"        Person aliceWithNewEmail3 \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(editedBob3.hasDuplicateInfo(aliceWithNewEmail3));","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(editedBob3.hasDuplicateInfo(BOB));","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"CYX22222003"},"content":"        //NULL","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(editedBob3.hasDuplicateInfo(null));","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void equals() {","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"CYX22222003"},"content":"    public void hasTag() {","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"CYX22222003"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"CYX22222003"},"content":"        assertTrue(aliceCopy.hasTag(new Tag(\"friends\")));","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"CYX22222003"},"content":"        assertFalse(aliceCopy.hasTag(new Tag(\"TEST\")));","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", tags\u003d\" + ALICE.getTags() + \"}\";","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":70,"-":94}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CYX22222003"},"content":"import seedu.address.model.tag.Tag;","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"CYX22222003"},"content":"","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"CYX22222003"},"content":"    @Test","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void deletePersonTag_list_successfulDeletionOfTag() {","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"CYX22222003"},"content":"        Person newAlice \u003d new PersonBuilder(ALICE).withTags(\"friends\", \"hello\").build();","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"CYX22222003"},"content":"        uniquePersonList.add(newAlice);","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"CYX22222003"},"content":"        uniquePersonList.deletePersonTag(newAlice, new Tag(\"hello\"));","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"CYX22222003"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"CYX22222003"},"content":"        expectedUniquePersonList.add(ALICE);","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"CYX22222003"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"CYX22222003"},"content":"    }","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":10,"-":175}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.CampusConnect;","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class TypicalPersons {","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"CYX22222003"},"content":"    public static final String FRIEND_TAG \u003d \"friends\";","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CYX22222003"},"content":"    public static final String OWES_MONEY_TAG \u003d \"owesMoney\";","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .withEmail(\"alice@example.com\")","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").build();","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withTags(\"friends\").build();","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"84822246\")","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").build();","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"64824274\")","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").build();","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"64824432\")","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").build();","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // Manually added","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"84824240\")","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").build();","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"84821315\")","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").build();","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withTags(VALID_TAG_FRIEND).build();","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .build();","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns an {@code CampusConnect} with all the typical persons.","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static CampusConnect getTypicalCampusConnect() {","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        CampusConnect ab \u003d new CampusConnect();","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return ab;","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","isFullCredit":false}],"authorContributionMap":{"CYX22222003":2,"-":72}},{"path":"docs/images/CampusConnectLogo.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"docs/images/EmptyUi.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"docs/images/Ui.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"docs/images/UndoSequenceDiagram-Logic.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"docs/images/UndoSequenceDiagram-Model.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"docs/images/blackpanther9229.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"docs/images/cattagResponse.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"CYX22222003":0,"-":0}},{"path":"docs/images/chrisjohntan.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"docs/images/cyx22222003.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"CYX22222003":0}},{"path":"docs/images/findBerniceIS1108Result.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"docs/images/findFloorRunResult.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"docs/images/github-icon.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"docs/images/helpMessage.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"docs/images/johndoe.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"docs/images/krashkart.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"docs/images/request_access.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"docs/images/yooplo.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"gradle/wrapper/gradle-wrapper.jar","fileType":"jar","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"src/main/resources/images/CampusConnectLogo.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"src/main/resources/images/HelpWindowLogo.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"src/main/resources/images/calendar.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"src/main/resources/images/campusConnect.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"src/main/resources/images/clock.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"src/main/resources/images/fail.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"src/main/resources/images/help_icon.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}},{"path":"src/main/resources/images/info_icon.png","fileType":"png","isBinary":true,"lines":[],"authorContributionMap":{"-":0}}]
